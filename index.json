[{"content":"Pendahuluan Cara ini digunakan agar kita tidak melakukan hal yang membosankan seperti kejadian berikut\n Conor ingin mengirimkan file dari host1 ke host2 dan hal yang dilakukannya adalah mengirimkan file dari host1 ke localhost terlebih dahulu dan lalu mengirimkan file dari localhost ke host2\n  Conor menyalin file file100Giga dari host1 ke localhost (Misal 15 menit)  scp host1:file100Giga file100Giga Conor menyalin file file100Giga dari localhost ke host2 (Misal 15 menit)  scp file100Giga host1:file100Giga Total waktu yang dihabiskan 30 menit untuk memindahkan file dari host1 ke host2, agar lebih efisien waktu kita bisa memanfaatkan opsi -3 pada scp. Ikuti panduan berikut\nPrasyarat  localhost bisa mengakses kedua remote host  Perintah scp -3 \u0026lt;user\u0026gt;@\u0026lt;remote_host_1\u0026gt;:/file/yang/ingin/dikirimkan \u0026lt;user\u0026gt;@\u0026lt;remote_host_2\u0026gt;:/lokasi/pengiriman/file  Contoh penggunaan Mengirimkan file dari user student pada 192.168.10.10 ke user student pada 192.168.10.20  scp -3 student@192.168.10.10:/home/student/filecontoh student@192.168.10.20:/home/student/filecontoh-copy Referensi  man scp(1)  ","permalink":"https://blog.ajiarya.id/posts/linux/cara-scp-antar-dua-remote-host/","summary":"Pendahuluan Cara ini digunakan agar kita tidak melakukan hal yang membosankan seperti kejadian berikut\n Conor ingin mengirimkan file dari host1 ke host2 dan hal yang dilakukannya adalah mengirimkan file dari host1 ke localhost terlebih dahulu dan lalu mengirimkan file dari localhost ke host2\n  Conor menyalin file file100Giga dari host1 ke localhost (Misal 15 menit)  scp host1:file100Giga file100Giga Conor menyalin file file100Giga dari localhost ke host2 (Misal 15 menit)  scp file100Giga host1:file100Giga Total waktu yang dihabiskan 30 menit untuk memindahkan file dari host1 ke host2, agar lebih efisien waktu kita bisa memanfaatkan opsi -3 pada scp.","title":"Cara SCP Antar Dua Host Remote"},{"content":"Panduan Menambahkan repository dan public signing key source /etc/os-release sudo dnf install https://zfsonlinux.org/epel/zfs-release.el${VERSION_ID/./_}.noarch.rpm sudo rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-zfsonlinux Install package ZFS sudo yum-config-manager --disable zfs sudo yum-config-manager --enable zfs-kmod sudo dnf install epel-release kernel-devel zfs Verifikasi versi modinfo zfs | grep version Referensi  OpenZFS Docs  ","permalink":"https://blog.ajiarya.id/posts/zfs/cara-install-zfs-centos/","summary":"Panduan Menambahkan repository dan public signing key source /etc/os-release sudo dnf install https://zfsonlinux.org/epel/zfs-release.el${VERSION_ID/./_}.noarch.rpm sudo rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-zfsonlinux Install package ZFS sudo yum-config-manager --disable zfs sudo yum-config-manager --enable zfs-kmod sudo dnf install epel-release kernel-devel zfs Verifikasi versi modinfo zfs | grep version Referensi  OpenZFS Docs  ","title":"Cara Install ZFS Pada Linux [CentOS/Rocky]"},{"content":"Panduan Menambahkan backports repository Tambahkan repository sudo vi /etc/apt/sources.list.d/buster-backports.list  /etc/apt/sources.list.d/buster-backports.list  deb http://deb.debian.org/debian buster-backports main contrib deb-src http://deb.debian.org/debian buster-backports main contrib Tambahkan konfigurasi APT sudo vi /etc/apt/preferences.d/90_zfs  /etc/apt/preferences.d/90_zfs  Package: libnvpair1linux libuutil1linux libzfs2linux libzpool2linux spl-dkms zfs-dkms zfs-test zfsutils-linux zfsutils-linux-dev zfs-zed Pin: release n=buster-backports Pin-Priority: 990 Install package ZFS Install package sudo apt update sudo apt install dpkg-dev linux-headers-$(uname -r) linux-image-amd64 sudo apt install zfs-dkms zfsutils-linux Buat konfigurasi ZFS untuk kernel module load sudo sh -c \u0026#34;echo zfs\u0026gt; /etc/modules-load.d/zfs.conf\u0026#34; Verifikasi versi modinfo zfs | grep version Referensi  OpenZFS Docs  ","permalink":"https://blog.ajiarya.id/posts/zfs/cara-install-zfs-debian/","summary":"Panduan Menambahkan backports repository Tambahkan repository sudo vi /etc/apt/sources.list.d/buster-backports.list  /etc/apt/sources.list.d/buster-backports.list  deb http://deb.debian.org/debian buster-backports main contrib deb-src http://deb.debian.org/debian buster-backports main contrib Tambahkan konfigurasi APT sudo vi /etc/apt/preferences.d/90_zfs  /etc/apt/preferences.d/90_zfs  Package: libnvpair1linux libuutil1linux libzfs2linux libzpool2linux spl-dkms zfs-dkms zfs-test zfsutils-linux zfsutils-linux-dev zfs-zed Pin: release n=buster-backports Pin-Priority: 990 Install package ZFS Install package sudo apt update sudo apt install dpkg-dev linux-headers-$(uname -r) linux-image-amd64 sudo apt install zfs-dkms zfsutils-linux Buat konfigurasi ZFS untuk kernel module load sudo sh -c \u0026#34;echo zfs\u0026gt; /etc/modules-load.","title":"Cara Install ZFS Pada Linux [Debian]"},{"content":"Ubuntu Install package ZFS sudo apt update sudo apt install zfsutils-linux Verifikasi versi modinfo zfs | grep version Referensi  OpenZFS Docs  ","permalink":"https://blog.ajiarya.id/posts/zfs/cara-install-zfs-ubuntu/","summary":"Ubuntu Install package ZFS sudo apt update sudo apt install zfsutils-linux Verifikasi versi modinfo zfs | grep version Referensi  OpenZFS Docs  ","title":"Cara Install ZFS Pada Linux [Ubuntu]"},{"content":"Panduan Perintah mengganti password user sendiri curl -u \u0026lt;user\u0026gt; -XPUT \\  \u0026#39;http://localhost:9200/_xpack/security/user/_password?pretty\u0026#39; \\  -H \u0026#39;Content-Type: application/json\u0026#39; -d\u0026#39; { \u0026#34;password\u0026#34;: \u0026#34;\u0026lt;password\u0026gt;\u0026#34; }\u0026#39; Contoh mengganti password user sendiri curl -u elastic -XPUT \\  \u0026#39;http://localhost:9200/_xpack/security/user/_password?pretty\u0026#39; \\  -H \u0026#39;Content-Type: application/json\u0026#39; -d\u0026#39; { \u0026#34;password\u0026#34;: \u0026#34;sangatrahasia\u0026#34; }\u0026#39; Contoh output [root@rocky ~]# curl -u elastic -XPUT \\ \u0026gt; \u0026#39;http://localhost:9200/_xpack/security/user/_password?pretty\u0026#39; \\ \u0026gt; -H \u0026#39;Content-Type: application/json\u0026#39; -d\u0026#39; \u0026gt; { \u0026#34;password\u0026#34;: \u0026#34;sangatrahasia\u0026#34; }\u0026#39; Enter host password for user \u0026#39;elastic\u0026#39;: { } Perintah mengganti password user lain (Admin) curl -u \u0026lt;user_admin\u0026gt; -XPUT \\  \u0026#39;http://localhost:9200/_xpack/security/user/\u0026lt;user_lain\u0026gt;/_password?pretty\u0026#39; \\  -H \u0026#39;Content-Type: application/json\u0026#39; -d\u0026#39; { \u0026#34;password\u0026#34;: \u0026#34;\u0026lt;password\u0026gt;\u0026#34; }\u0026#39; Contoh mengganti password user lain (Admin) curl -u elastic -XPUT \\  \u0026#39;http://localhost:9200/_xpack/security/user/kibana/_password?pretty\u0026#39; \\  -H \u0026#39;Content-Type: application/json\u0026#39; -d\u0026#39; { \u0026#34;password\u0026#34;: \u0026#34;inipasswordkibana\u0026#34; }\u0026#39; Contoh output [root@rocky ~]# curl -u elastic -XPUT \\ \u0026gt; \u0026#39;http://localhost:9200/_xpack/security/user/kibana/_password?pretty\u0026#39; \\ \u0026gt; -H \u0026#39;Content-Type: application/json\u0026#39; -d\u0026#39; \u0026gt; { \u0026#34;password\u0026#34;: \u0026#34;inipasswordkibana\u0026#34; }\u0026#39; Enter host password for user \u0026#39;elastic\u0026#39;: { } Referensi\n Elasticsearch Guide  ","permalink":"https://blog.ajiarya.id/posts/elk/elasticsearch/cara-ganti-password-elasticsearch/","summary":"Panduan Perintah mengganti password user sendiri curl -u \u0026lt;user\u0026gt; -XPUT \\  \u0026#39;http://localhost:9200/_xpack/security/user/_password?pretty\u0026#39; \\  -H \u0026#39;Content-Type: application/json\u0026#39; -d\u0026#39; { \u0026#34;password\u0026#34;: \u0026#34;\u0026lt;password\u0026gt;\u0026#34; }\u0026#39; Contoh mengganti password user sendiri curl -u elastic -XPUT \\  \u0026#39;http://localhost:9200/_xpack/security/user/_password?pretty\u0026#39; \\  -H \u0026#39;Content-Type: application/json\u0026#39; -d\u0026#39; { \u0026#34;password\u0026#34;: \u0026#34;sangatrahasia\u0026#34; }\u0026#39; Contoh output [root@rocky ~]# curl -u elastic -XPUT \\ \u0026gt; \u0026#39;http://localhost:9200/_xpack/security/user/_password?pretty\u0026#39; \\ \u0026gt; -H \u0026#39;Content-Type: application/json\u0026#39; -d\u0026#39; \u0026gt; { \u0026#34;password\u0026#34;: \u0026#34;sangatrahasia\u0026#34; }\u0026#39; Enter host password for user \u0026#39;elastic\u0026#39;: { } Perintah mengganti password user lain (Admin) curl -u \u0026lt;user_admin\u0026gt; -XPUT \\  \u0026#39;http://localhost:9200/_xpack/security/user/\u0026lt;user_lain\u0026gt;/_password?","title":"Cara Mengganti Password User Elasticsearch"},{"content":"Perulangan Pada Bash Perulangan atau Looping adalah cara mudah untuk menyelesaikan pekerjaan yang sifatnya berulang-ulang, semisal ingin membuat 10 user maka kita tidak perlu menjalankan perintah useradd 10 kali melainkan kita membuat Bash Script sebagai berikut\n Buat file dengan nama buat-user.sh  #!/bin/bash for i in {1..10}; do sudo useradd user$i done  Hasil Bash Script  # Jalankan Script yang telah dibuat student@latihan-bash:~$ bash buat-user.sh # Verifikasi student@latihan-bash:~$ getent passwd | grep user user1:x:1002:1002::/home/user1:/bin/sh user2:x:1003:1003::/home/user2:/bin/sh user3:x:1004:1004::/home/user3:/bin/sh user4:x:1005:1005::/home/user4:/bin/sh user5:x:1006:1006::/home/user5:/bin/sh user6:x:1007:1007::/home/user6:/bin/sh user7:x:1008:1008::/home/user7:/bin/sh user8:x:1009:1009::/home/user8:/bin/sh user9:x:1010:1010::/home/user9:/bin/sh user10:x:1011:1011::/home/user10:/bin/sh Panduan Perulangan tak terbatas #!/bin/bash while true; do \u0026lt;perintah\u0026gt; done  Contoh 1  #!/bin/bash # set variabel angka sebagai 0 export angka=0 # Perulangan tak terhingga while true; do echo $angka sleep 1 ((angka++)) done  Hasil Contoh 1  student@latihan-bash:~$ bash contoh1.sh 0 1 2 3 4 5 \u0026lt;akan bertambah terus sampai skrip distop\u0026gt; Perulangan dengan kisaran angka #!/bin/bash for i in {1..3}; do \u0026lt;perintah\u0026gt; done  Contoh 2  #!/bin/bash for i in {1..3}; do echo $i done  Hasil Contoh 2  student@latihan-bash:~$ bash contoh2.sh 1 2 3 Perulangan dengan daftar kata #!/bin/bash for \u0026lt;nama variabel\u0026gt; in \u0026lt;nilai 1\u0026gt; \u0026lt;nilai 2\u0026gt; \u0026lt;nilai x\u0026gt;; do echo \u0026lt;nama variabel\u0026gt; done  Contoh 3  #!/bin/bash for kota in Jakarta Bandung Surabaya; do echo $kota done  Hasil Contoh 3  student@latihan-bash:~$ bash contoh3.sh Jakarta Bandung Surabaya ","permalink":"https://blog.ajiarya.id/posts/bash/cara-looping-pada-bash/","summary":"Perulangan Pada Bash Perulangan atau Looping adalah cara mudah untuk menyelesaikan pekerjaan yang sifatnya berulang-ulang, semisal ingin membuat 10 user maka kita tidak perlu menjalankan perintah useradd 10 kali melainkan kita membuat Bash Script sebagai berikut\n Buat file dengan nama buat-user.sh  #!/bin/bash for i in {1..10}; do sudo useradd user$i done  Hasil Bash Script  # Jalankan Script yang telah dibuat student@latihan-bash:~$ bash buat-user.sh # Verifikasi student@latihan-bash:~$ getent passwd | grep user user1:x:1002:1002::/home/user1:/bin/sh user2:x:1003:1003::/home/user2:/bin/sh user3:x:1004:1004::/home/user3:/bin/sh user4:x:1005:1005::/home/user4:/bin/sh user5:x:1006:1006::/home/user5:/bin/sh user6:x:1007:1007::/home/user6:/bin/sh user7:x:1008:1008::/home/user7:/bin/sh user8:x:1009:1009::/home/user8:/bin/sh user9:x:1010:1010::/home/user9:/bin/sh user10:x:1011:1011::/home/user10:/bin/sh Panduan Perulangan tak terbatas #!","title":"Cara Melakukan Perulangan Pada Bash"},{"content":"Perintah juju refresh [options] \u0026lt;application\u0026gt; Perbarui ke versi terbaru juju refresh \u0026lt;application\u0026gt;  Contoh  juju refresh prometheus Perbarui ke versi revision spesifik juju refresh --revision \u0026lt;revision number\u0026gt; \u0026lt;application\u0026gt;  Contoh  juju refresh --revision 22 prometheus Perbarui ke versi channel spesifik juju refresh --channel \u0026lt;channel\u0026gt; \u0026lt;application\u0026gt;  Contoh  juju refresh --channel latest/stable prometheus ","permalink":"https://blog.ajiarya.id/posts/juju/cara-upgrade-juju-charm/","summary":"Perintah juju refresh [options] \u0026lt;application\u0026gt; Perbarui ke versi terbaru juju refresh \u0026lt;application\u0026gt;  Contoh  juju refresh prometheus Perbarui ke versi revision spesifik juju refresh --revision \u0026lt;revision number\u0026gt; \u0026lt;application\u0026gt;  Contoh  juju refresh --revision 22 prometheus Perbarui ke versi channel spesifik juju refresh --channel \u0026lt;channel\u0026gt; \u0026lt;application\u0026gt;  Contoh  juju refresh --channel latest/stable prometheus ","title":"Cara Memperbarui Juju Charm"},{"content":"Pendahuluan Ketika kita menggunakan layanan VPS ataupun Public Cloud kita bisa memeriksa jenis virtualisasi yang diberikan oleh penyedia layanan dengan menggunakan perintah dmidecode pada sistem operasi Linux.\nPerintah sudo dmidecode -s system-product-name  Contoh pada virtualisasi KVM  student@machine:~$ sudo dmidecode -s system-product-name KVM  Contoh pada virtualisasi OpenStack  student@machine:~$ sudo dmidecode -s system-product-name OpenStack Compute ","permalink":"https://blog.ajiarya.id/posts/linux/cara-memeriksa-virtualiasasi/","summary":"Pendahuluan Ketika kita menggunakan layanan VPS ataupun Public Cloud kita bisa memeriksa jenis virtualisasi yang diberikan oleh penyedia layanan dengan menggunakan perintah dmidecode pada sistem operasi Linux.\nPerintah sudo dmidecode -s system-product-name  Contoh pada virtualisasi KVM  student@machine:~$ sudo dmidecode -s system-product-name KVM  Contoh pada virtualisasi OpenStack  student@machine:~$ sudo dmidecode -s system-product-name OpenStack Compute ","title":"Cara Mengetahui Virtualisasi Yang Digunakan oleh VM Linux"},{"content":"Prasyarat  Baremetal atau Virtualisasi yang mendukung Nested Virtualization  Panduan 1. Pasang Repository Kata Container ARCH=$(arch) BRANCH=\u0026quot;${BRANCH:-master}\u0026quot; sudo sh -c \u0026quot;echo 'deb http://download.opensuse.org/repositories/home:/katacontainers:/releases:/${ARCH}:/${BRANCH}/xUbuntu_$(lsb_release -rs)/ /' \u0026gt; /etc/apt/sources.list.d/kata-containers.list\u0026quot; curl -sL http://download.opensuse.org/repositories/home:/katacontainers:/releases:/${ARCH}:/${BRANCH}/xUbuntu_$(lsb_release -rs)/Release.key | sudo apt-key add - sudo -E apt-get update sudo -E apt-get -y install kata-runtime kata-proxy kata-shim 2. Periksa kemampuan host untuk menjalankan Kata Container kata-runtime kata-check Keluaran yang diharapkan\nstudent@kata-host:~$ kata-runtime kata-check No newer release available System is capable of running Kata Containers 3. Pasang Containerd sudo apt-get -y install containerd 4. Coba jalankan sebuah container menggunakan Kata Container sudo ctr run --runtime io.containerd.run.kata.v2 -t --rm docker.io/library/busybox:latest kata-demo sh 5. Periksa proses container htop Gambar Kata Process\nReferensi  https://github.com/kata-containers/documentation/blob/master/how-to/containerd-kata.md  ","permalink":"https://blog.ajiarya.id/posts/kata/install-kata/","summary":"Prasyarat  Baremetal atau Virtualisasi yang mendukung Nested Virtualization  Panduan 1. Pasang Repository Kata Container ARCH=$(arch) BRANCH=\u0026quot;${BRANCH:-master}\u0026quot; sudo sh -c \u0026quot;echo 'deb http://download.opensuse.org/repositories/home:/katacontainers:/releases:/${ARCH}:/${BRANCH}/xUbuntu_$(lsb_release -rs)/ /' \u0026gt; /etc/apt/sources.list.d/kata-containers.list\u0026quot; curl -sL http://download.opensuse.org/repositories/home:/katacontainers:/releases:/${ARCH}:/${BRANCH}/xUbuntu_$(lsb_release -rs)/Release.key | sudo apt-key add - sudo -E apt-get update sudo -E apt-get -y install kata-runtime kata-proxy kata-shim 2. Periksa kemampuan host untuk menjalankan Kata Container kata-runtime kata-check Keluaran yang diharapkan\nstudent@kata-host:~$ kata-runtime kata-check No newer release available System is capable of running Kata Containers 3.","title":"Memasang Kata Container dengan Containerd Pada Ubuntu 20.04"}]