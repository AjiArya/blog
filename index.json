[{"content":"Prasyarat  OpenStack terinstall  Panduan  Buat user openstack-exporter  useradd --no-create-home --shell /bin/false openstack-exporter Buat file konfigurasi  mkdir /etc/openstack/ cat\u0026lt;\u0026lt;EOF \u0026gt; /etc/openstack/clouds.yaml clouds: default: region_name: \u0026lt;region_name\u0026gt; identity_api_version: 3 identity_interface: \u0026lt;endpoint_interface\u0026gt; # admin/internal/public auth: username: \u0026lt;username\u0026gt; password: \u0026lt;password\u0026gt; project_name: \u0026lt;project_name\u0026gt; project_domain_name: \u0026lt;project_domain_name\u0026gt; project_domain_id: \u0026lt;project_domain_id\u0026gt; user_domain_name: \u0026lt;user_domain_name\u0026gt; auth_url: https://\u0026lt;keystone_endpoint\u0026gt;:\u0026lt;keystone_port\u0026gt;/v3 verify: false EOF Buat file systemd  cat\u0026lt;\u0026lt;EOF \u0026gt; /etc/systemd/system/openstack-exporter.service [Unit] Description=OpenStack Exporter OPEX Wants=network-online.target After=network-online.target [Service] User=openstack-exporter Group=openstack-exporter Type=simple ExecStart=openstack-exporter Surabaya [Install] WantedBy=multi-user.target EOF Reload daemon dan jalankan servis  systemctl daemon-reload systemctl enable --now openstack-exporter  Catatan!\nJika terjadi error x509: certificate signed by unknown tambahkan certificate openstack ke daftar trusted!\n Referensi  Github - OpenStack Exporter  ","permalink":"https://blog.ajiarya.id/posts/openstack/cara-memasang-openstack-exporter/","summary":"Prasyarat  OpenStack terinstall  Panduan  Buat user openstack-exporter  useradd --no-create-home --shell /bin/false openstack-exporter Buat file konfigurasi  mkdir /etc/openstack/ cat\u0026lt;\u0026lt;EOF \u0026gt; /etc/openstack/clouds.yaml clouds: default: region_name: \u0026lt;region_name\u0026gt; identity_api_version: 3 identity_interface: \u0026lt;endpoint_interface\u0026gt; # admin/internal/public auth: username: \u0026lt;username\u0026gt; password: \u0026lt;password\u0026gt; project_name: \u0026lt;project_name\u0026gt; project_domain_name: \u0026lt;project_domain_name\u0026gt; project_domain_id: \u0026lt;project_domain_id\u0026gt; user_domain_name: \u0026lt;user_domain_name\u0026gt; auth_url: https://\u0026lt;keystone_endpoint\u0026gt;:\u0026lt;keystone_port\u0026gt;/v3 verify: false EOF Buat file systemd  cat\u0026lt;\u0026lt;EOF \u0026gt; /etc/systemd/system/openstack-exporter.service [Unit] Description=OpenStack Exporter OPEX Wants=network-online.target After=network-online.target [Service] User=openstack-exporter Group=openstack-exporter Type=simple ExecStart=openstack-exporter Surabaya [Install] WantedBy=multi-user.","title":"Cara Memasang OpenStack Exporter"},{"content":"Panduan  Jalankan script untuk pemasangan repository  curl https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.rpm.sh | sudo bash  Pasang GitLab\n Menggunakan alamat Domain  sudo EXTERNAL_URL=\u0026#34;https://gitlab.example.com\u0026#34; dnf install -y gitlab-ce  Menggunakan alamat IP  # dengan alamat IP sudo EXTERNAL_URL=\u0026#34;https://192.168.10.10\u0026#34; dnf install -y gitlab-ce   Dapatkan password untuk login pertama kali\n  sudo cat /etc/gitlab/initial_root_password Masuk GitLab via browser   ","permalink":"https://blog.ajiarya.id/posts/gitlab/cara-memasang-gitlab-ce/","summary":"Panduan  Jalankan script untuk pemasangan repository  curl https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.rpm.sh | sudo bash  Pasang GitLab\n Menggunakan alamat Domain  sudo EXTERNAL_URL=\u0026#34;https://gitlab.example.com\u0026#34; dnf install -y gitlab-ce  Menggunakan alamat IP  # dengan alamat IP sudo EXTERNAL_URL=\u0026#34;https://192.168.10.10\u0026#34; dnf install -y gitlab-ce   Dapatkan password untuk login pertama kali\n  sudo cat /etc/gitlab/initial_root_password Masuk GitLab via browser   ","title":"Cara Pasang GitLab CE [CentOS 8]"},{"content":"Prasyarat  Proxmox terinstall  Panduan Bootstrap ceph  Buka menu ceph  Pilih menu Datacenter Pilih menu Ceph Klik \u0026ldquo;Install Ceph\u0026rdquo;    Pilih versi ceph  Pilih ceph version Klik \u0026ldquo;Start pacific installation\u0026rdquo;    Konfirmasi instalasi  Ketik \u0026ldquo;Y\u0026rdquo;. Lalu tekan tombol enter Klik \u0026ldquo;Next\u0026rdquo;    Konfigurasi klaster ceph  Public Network Cluster Network Jumlah replika Minimum replika Monitor node pertama    Instalasi sukses. Klik \u0026ldquo;Finish\u0026rdquo;  Tambah ceph-mon  Install package ceph  Buat monitor tambahan  Datacenter \u0026gt; Pilih Host Pilih menu Ceph Pilih menu Monitor Menu Monitor \u0026gt; Klik \u0026ldquo;Create\u0026rdquo;    Pilih host untuk menempatkan ceph-mon baru  Pilih Host Klik \u0026ldquo;Create\u0026rdquo;    Tambah ceph-mgr  Buat monitor tambahan  Datacenter \u0026gt; Pilih Host Pilih menu Ceph Pilih menu Manager Bagian Manager \u0026gt; Klik \u0026ldquo;Create\u0026rdquo;    Pilih host untuk menempatkan ceph-mgr baru  Pilih Host Klik \u0026ldquo;Create\u0026rdquo;    Tambah ceph-osd  Buat osd  Datacenter \u0026gt; Pilih Host Pilih menu Ceph Pilih menu OSD Klik \u0026ldquo;Create\u0026rdquo;    Pilih host untuk menempatkan ceph-mgr baru  Pilih Disk Pilih Device Class Klik \u0026ldquo;Create\u0026rdquo;    Hasil  ","permalink":"https://blog.ajiarya.id/posts/proxmox/cara-menyiapkan-klaster-ceph-pada-proxmox-7/","summary":"Prasyarat  Proxmox terinstall  Panduan Bootstrap ceph  Buka menu ceph  Pilih menu Datacenter Pilih menu Ceph Klik \u0026ldquo;Install Ceph\u0026rdquo;    Pilih versi ceph  Pilih ceph version Klik \u0026ldquo;Start pacific installation\u0026rdquo;    Konfirmasi instalasi  Ketik \u0026ldquo;Y\u0026rdquo;. Lalu tekan tombol enter Klik \u0026ldquo;Next\u0026rdquo;    Konfigurasi klaster ceph  Public Network Cluster Network Jumlah replika Minimum replika Monitor node pertama    Instalasi sukses.","title":"Cara Menyiapkan Klaster Ceph Pada Proxmox 7"},{"content":"Panduan CentOS  Pasang repository resmi docker  # yum sudo yum install -y yum-utils sudo yum-config-manager \\  --add-repo \\  https://download.docker.com/linux/centos/docker-ce.repo # dnf sudo dnf -y install dnf-plugins-core sudo dnf config-manager \\  --add-repo \\  https://download.docker.com/linux/centos/docker-ce.repo Pasang docker  # yum sudo yum install -y docker-ce docker-ce-cli containerd.io # dnf sudo dnf install -y docker-ce docker-ce-cli containerd.io Enable dan jalankan servis  systemctl enable --now docker Verifikasi  docker info Ubuntu  Pasang repository resmi docker  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg echo \\  \u0026#34;deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \\ $(lsb_release -cs)stable\u0026#34; | sudo tee /etc/apt/sources.list.d/docker.list \u0026gt; /dev/null Pasang docker  sudo apt-get update sudo apt-get install -y docker-ce docker-ce-cli containerd.io Enable dan jalankan servis  systemctl enable --now docker Verifikasi  docker info Referensi  Docker Docs  ","permalink":"https://blog.ajiarya.id/posts/docker/cara-pasang-docker-pada-linux/","summary":"Panduan CentOS  Pasang repository resmi docker  # yum sudo yum install -y yum-utils sudo yum-config-manager \\  --add-repo \\  https://download.docker.com/linux/centos/docker-ce.repo # dnf sudo dnf -y install dnf-plugins-core sudo dnf config-manager \\  --add-repo \\  https://download.docker.com/linux/centos/docker-ce.repo Pasang docker  # yum sudo yum install -y docker-ce docker-ce-cli containerd.io # dnf sudo dnf install -y docker-ce docker-ce-cli containerd.io Enable dan jalankan servis  systemctl enable --now docker Verifikasi  docker info Ubuntu  Pasang repository resmi docker  curl -fsSL https://download.","title":"Cara Pasang Docker Pada Linux (CentOS/Ubuntu)"},{"content":"Pendahuluan dnsmasq adalah software open source yang digunakan untuk menyediakan layanan seperti DNS, DCHP, TFTP, router advertisement, dan network boot. dnsmasq ditujukan untuk jaringan skala kecil - menengah.\nPanduan   Pasang dnsmasq\n Debian Based  sudo apt update sudo apt install -y dnsmasq  RHEL Based  sudo yum update sudo yum install -y dnsmasq # atau sudo dnf update sudo dnf install -y dnsmasq   Buat file konfigurasi\n  # sudo vim /etc/dnsmasq.d/\u0026lt;name_file\u0026gt;.conf sudo vim /etc/dnsmasq.d/contoh.conf Record\n A = contoh.com 192.168.10.80 CNAME = blog.contoh.com contoh.com  address=/contoh.com/192.168.10.80 cname=blog.contoh.com,contoh.com Restart servis  systemctl daemon-reload systemctl restart dnsmasq  Uji coba\n Atur /etc/resolv.conf  nameserver 192.168.10.80 Permintaan DNS  [root@dnshost ~]# nslookup blog.contoh.com Server: 192.168.10.80 Address: 192.168.10.80#53 blog.contoh.com canonical name = contoh.com. Name: contoh.com Address: 192.168.10.80   Referensi  man dnsmasq Server Fault - dnsmasq resolve cname  ","permalink":"https://blog.ajiarya.id/posts/linux/cara-konfigurasi-dns-server-menggunakan-dnsmasq/","summary":"Pendahuluan dnsmasq adalah software open source yang digunakan untuk menyediakan layanan seperti DNS, DCHP, TFTP, router advertisement, dan network boot. dnsmasq ditujukan untuk jaringan skala kecil - menengah.\nPanduan   Pasang dnsmasq\n Debian Based  sudo apt update sudo apt install -y dnsmasq  RHEL Based  sudo yum update sudo yum install -y dnsmasq # atau sudo dnf update sudo dnf install -y dnsmasq   Buat file konfigurasi","title":"Cara Konfigurasi DNS Server menggunakan dnsmasq"},{"content":"Masalah git@gitlab.example.com: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password). Tidak bisa git clone walaupun sudah menambahkan public key ssh pada akun GitLab\nKondisi  Sudah menambahkan Public Key SSH pada akun GitLab Tidak bisa menjalankan git clone ke repository private walaupun sebagai pemilik repository  Panduan  Lihat error pada SELinux  journalctl -t setroubleshoot Error terjadi karena file authorized_key\nLihat SELinux Context pada direktori .ssh gitlab  ls -Z /var/opt/gitlab/.ssh/authorized_keys # Output: # unconfined_u:object_r:var_t:s0 /var/opt/gitlab/.ssh/authorized_keys Ubah SELinux Context pada direktori tersebut  semanage fcontext --add -t ssh_home_t \u0026#34;/var/opt/gitlab/.ssh(/.*)?\u0026#34; restorecon -R -v /var/opt/gitlab/.ssh Lihat SELinux Context pada direktori .ssh gitlab\nPastikan sudah berubah seperti output berikut  ls -Z /var/opt/gitlab/.ssh/authorized_keys # Output: # unconfined_u:object_r:ssh_home_t:s0 /var/opt/gitlab/.ssh/authorized_keys Coba git clone lagi   Referensi  Change SELinux Context  ","permalink":"https://blog.ajiarya.id/posts/gitlab/cara-memperbaiki-git-ssh-permission-denied/","summary":"Masalah git@gitlab.example.com: Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password). Tidak bisa git clone walaupun sudah menambahkan public key ssh pada akun GitLab\nKondisi  Sudah menambahkan Public Key SSH pada akun GitLab Tidak bisa menjalankan git clone ke repository private walaupun sebagai pemilik repository  Panduan  Lihat error pada SELinux  journalctl -t setroubleshoot Error terjadi karena file authorized_key\nLihat SELinux Context pada direktori .ssh gitlab  ls -Z /var/opt/gitlab/.ssh/authorized_keys # Output: # unconfined_u:object_r:var_t:s0 /var/opt/gitlab/.","title":"Cara Memperbaiki Git SSH Permission Denied GitLab [Red Hat/CentOS]"},{"content":"Prasyarat  Proxmox terinstall  Panduan   Buat token untuk proxmox-expoter\n Buat API Token  Datacenter \u0026gt; API Token Klik Add Masukan Token ID (Catat bagian ini) Hapus centang pada Privilege Separation Klik Add    Salin Token Secret  Klik \u0026ldquo;Copy Secret Value\u0026rdquo; (Catat bagian ini)       Pasang proxmox-exporter\n  python3 -m pip install prometheus-pve-exporter  Buat servis systemd\n Buat user pve_exporter  useradd --no-create-home --shell /bin/false pve_exporter Buat file konfigurasi  mkdir /etc/pve_exporter cat\u0026lt;\u0026lt;EOF \u0026gt; /etc/pve_exporter/config.yaml default: user: root@pam token_name: exporter # Token ID (Langkah 1 \u0026gt; Buat API Token) token_value: 01144d44-487a-4ba0-b41d-fdba1d705ae0 # Secret Token (Langkah 1 \u0026gt; Salin Token Secret) verify_ssl: false EOF Buat file environment  cat\u0026lt;\u0026lt;EOF \u0026gt; /etc/default/pve_exporter CONFIG_FILE=/etc/pve_exporter/config.yaml LISTEN_ADDR=192.168.10.254 LISTEN_PORT=9221 EOF Buat file systemd  cat\u0026lt;\u0026lt;EOF \u0026gt; /etc/systemd/system/pve_exporter.service [Unit] Description=PVE Expoter Wants=network-online.target After=network-online.target [Service] User=pve_exporter Group=pve_exporter Type=simple EnvironmentFile=/etc/default/pve_exporter ExecStart=pve_exporter \\$CONFIG_FILE \\$LISTEN_PORT \\$LISTEN_ADDR [Install] WantedBy=multi-user.target EOF Reload daemon dan jalankan servis  systemctl daemon-reload systemctl enable --now pve_exporter   Verifikasi dengan membuka http://\u0026lt;ip_exporter\u0026gt;:9221/pve?target=\u0026lt;ip_node_pve\u0026gt;   Referensi  Github - Proxmox Exporter  ","permalink":"https://blog.ajiarya.id/posts/proxmox/cara-memasang-proxmox-exporter/","summary":"Prasyarat  Proxmox terinstall  Panduan   Buat token untuk proxmox-expoter\n Buat API Token  Datacenter \u0026gt; API Token Klik Add Masukan Token ID (Catat bagian ini) Hapus centang pada Privilege Separation Klik Add    Salin Token Secret  Klik \u0026ldquo;Copy Secret Value\u0026rdquo; (Catat bagian ini)       Pasang proxmox-exporter\n  python3 -m pip install prometheus-pve-exporter  Buat servis systemd\n Buat user pve_exporter  useradd --no-create-home --shell /bin/false pve_exporter Buat file konfigurasi  mkdir /etc/pve_exporter cat\u0026lt;\u0026lt;EOF \u0026gt; /etc/pve_exporter/config.","title":"Cara Memasang Proxmox Exporter"},{"content":"Panduan Perintah # 1 Lompatan ssh -J \u0026lt;user\u0026gt;@\u0026lt;machine-1\u0026gt; \u0026lt;user\u0026gt;@\u0026lt;machine-2\u0026gt; # 2 Lompatan ssh -J \u0026lt;user\u0026gt;@\u0026lt;machine-1\u0026gt;,\u0026lt;machine-2\u0026gt; \u0026lt;user\u0026gt;@\u0026lt;machine-3\u0026gt; # 3 Lompatan ssh -J \u0026lt;user\u0026gt;@\u0026lt;machine-1\u0026gt;,\u0026lt;machine-2\u0026gt;,\u0026lt;user\u0026gt;@\u0026lt;machine-3\u0026gt; \u0026lt;user\u0026gt;@\u0026lt;machine-4\u0026gt; Contoh Contoh 1: SSH Jump dari 192.168.10.2 ke 192.168.10.3 ssh -J user@192.168.10.2 user@192.168.10.3 Contoh 2: SSH Jump dari 192.168.10.2 lalu 192.168.10.3 ke 192.168.10.4 ssh -J user@192.168.10.2,user@192.168.10.3 user@192.168.10.4 Referensi  Gentoo Linux - SSH Jump Host  ","permalink":"https://blog.ajiarya.id/posts/linux/cara-ssh-jump/","summary":"Panduan Perintah # 1 Lompatan ssh -J \u0026lt;user\u0026gt;@\u0026lt;machine-1\u0026gt; \u0026lt;user\u0026gt;@\u0026lt;machine-2\u0026gt; # 2 Lompatan ssh -J \u0026lt;user\u0026gt;@\u0026lt;machine-1\u0026gt;,\u0026lt;machine-2\u0026gt; \u0026lt;user\u0026gt;@\u0026lt;machine-3\u0026gt; # 3 Lompatan ssh -J \u0026lt;user\u0026gt;@\u0026lt;machine-1\u0026gt;,\u0026lt;machine-2\u0026gt;,\u0026lt;user\u0026gt;@\u0026lt;machine-3\u0026gt; \u0026lt;user\u0026gt;@\u0026lt;machine-4\u0026gt; Contoh Contoh 1: SSH Jump dari 192.168.10.2 ke 192.168.10.3 ssh -J user@192.168.10.2 user@192.168.10.3 Contoh 2: SSH Jump dari 192.168.10.2 lalu 192.168.10.3 ke 192.168.10.4 ssh -J user@192.168.10.2,user@192.168.10.3 user@192.168.10.4 Referensi  Gentoo Linux - SSH Jump Host  ","title":"Cara SSH Jump Host"},{"content":"Prasyarat  Proxmox terinstall  Panduan Buat template  Unduh file image cloud ubuntu 18  wget https://cloud-images.ubuntu.com/bionic/current/bionic-server-cloudimg-amd64.img Buat VM  qm create 100 --memory 2048 --net0 virtio,bridge=vmbr0 Import image ke dalam local-lvm storage  qm importdisk 100 bionic-server-cloudimg-amd64.img local-lvm Atur disk VM  qm set 100 --scsihw virtio-scsi-pci --scsi0 local-lvm:vm-100-disk-0 Buat drive cloud-image  qm set 100 --ide2 local-lvm:cloudinit Atur boot menggunakan cloud-init  qm set 100 --boot c --bootdisk scsi0 Atur console  qm set 100 --serial0 socket --vga serial0 Atur console  qm template 100 Buat VM  Klon template  qm clone 100 200 --name ubuntu20 Konfigurasi publickey dan IP Address  qm set 200 --sshkey ~/.ssh/id_rsa.pub qm set 200 --ipconfig0 ip=192.168.10.251/24,gw=192.168.10.1  Start VM   Masuk console VM (Cek proses booting)   Uji SSH VM   Referensi  Proxmox - Cloud Init  ","permalink":"https://blog.ajiarya.id/posts/proxmox/cara-deploy-vm-menggunakan-cloud-image/","summary":"Prasyarat  Proxmox terinstall  Panduan Buat template  Unduh file image cloud ubuntu 18  wget https://cloud-images.ubuntu.com/bionic/current/bionic-server-cloudimg-amd64.img Buat VM  qm create 100 --memory 2048 --net0 virtio,bridge=vmbr0 Import image ke dalam local-lvm storage  qm importdisk 100 bionic-server-cloudimg-amd64.img local-lvm Atur disk VM  qm set 100 --scsihw virtio-scsi-pci --scsi0 local-lvm:vm-100-disk-0 Buat drive cloud-image  qm set 100 --ide2 local-lvm:cloudinit Atur boot menggunakan cloud-init  qm set 100 --boot c --bootdisk scsi0 Atur console  qm set 100 --serial0 socket --vga serial0 Atur console  qm template 100 Buat VM  Klon template  qm clone 100 200 --name ubuntu20 Konfigurasi publickey dan IP Address  qm set 200 --sshkey ~/.","title":"Cara Membuat VM Menggunakan Cloud Image - Proxmox"},{"content":"Prasyarat  Cinder dengan 2 atau lebih backend  Panduan  Lihat volume type yang tersedia  openstack volume type list Ubah volume type pada volume yang dimaksud  openstack volume set --type \u0026lt;new_type\u0026gt; --retype-policy on-demand \u0026lt;vol_id/vol_name\u0026gt; Tunggu sampai proses retyping selesai  ","permalink":"https://blog.ajiarya.id/posts/openstack/cara-mengganti-volume-type-ke-backend-yang-berbeda-cli/","summary":"Prasyarat  Cinder dengan 2 atau lebih backend  Panduan  Lihat volume type yang tersedia  openstack volume type list Ubah volume type pada volume yang dimaksud  openstack volume set --type \u0026lt;new_type\u0026gt; --retype-policy on-demand \u0026lt;vol_id/vol_name\u0026gt; Tunggu sampai proses retyping selesai  ","title":"Cara Mengubah Volume Type Dengan Backend Yang Berbeda - CLI"},{"content":"Topologi Versi Sistem Operasi Ubuntu 20.04 (Focal)\nAplikasi  HAProxy 2.0.13-2ubuntu0.3 KeepAlived 1:2.0.19-2 Containerd 1.4.9-1 Kubernetes 1.22.1-00 (kubeadm, kubelet, kubectl)  Panduan  Semua perintah dibawah dijalankan menggunakan user root  Persiapan  Sunting file /etc/hosts  cat\u0026lt;\u0026lt;EOF \u0026gt;\u0026gt; /etc/hosts ### Lab Kubernetes ### 192.168.30.10 kubernetes-vip 192.168.30.11 kubernetes-lb1 192.168.30.12 kubernetes-lb2 192.168.30.13 kubernetes-master01 192.168.30.14 kubernetes-master02 192.168.30.15 kubernetes-master03 192.168.30.16 kubernetes-worker01 EOF update dan upgrade package-package  apt update -y; apt upgrade -y HAproxy \u0026amp; Keepalived  Pasang haproxy dan keepalived  apt install -y haproxy keepalived  Konfigurasi HAProxy\n Sunting file konfigurasi   Tambahkan baris berikut kedalam file konfigurasi. Isikan backend dengan Alamat IP semua master  vim /etc/haproxy/haproxy.cfg frontend kube-apiserver bind *:6443 mode tcp option tcplog default_backend kube-apiserver backend kube-apiserver mode tcp option tcp-check balance roundrobin default-server inter 10s downinter 5s rise 2 fall 2 slowstart 60s maxconn 250 maxqueue 256 weight 100 server kube-apiserver-1 192.168.30.13:6443 check server kube-apiserver-2 192.168.30.14:6443 check server kube-apiserver-3 192.168.30.15:6443 check Validasi file konfigurasi  haproxy -c -V -f /etc/haproxy/haproxy.cfg Restart HAProxy  systemctl restart haproxy Enable HAProxy  systemctl enable haproxy   Konfigurasi Keepalived\n Sunting file keepalived  vim /etc/keepalived/keepalived.conf  lb01  vrrp_script chk_haproxy { script \u0026quot;killall -0 haproxy\u0026quot; interval 2 weight 2 } vrrp_instance haproxy-vip { state MASTER priority 100 interface ens3 # Network card virtual_router_id 50 advert_int 1 authentication { auth_type PASS auth_pass nasgorenak } virtual_ipaddress { 192.168.30.10/24 # The VIP address } track_script { chk_haproxy } }  lb02  vrrp_script chk_haproxy { script \u0026quot;killall -0 haproxy\u0026quot; interval 2 weight 2 } vrrp_instance haproxy-vip { state BACKUP priority 99 interface ens3 # Network card virtual_router_id 50 advert_int 1 authentication { auth_type PASS auth_pass nasgorenak } virtual_ipaddress { 192.168.30.10/24 # The VIP address } track_script { chk_haproxy } } Restart Keepalived  systemctl restart keepalived Enable Keepalived  systemctl enable keepalived   Pasang container runtime pada master \u0026amp; worker Kita akan menggunakan containerd\n Muat kernel module dan ubah beberapa parameter kernel  cat \u0026lt;\u0026lt;EOF | tee /etc/modules-load.d/containerd.conf overlay br_netfilter EOF modprobe overlay modprobe br_netfilter # Setup required sysctl params, these persist across reboots. cat \u0026lt;\u0026lt;EOF | tee /etc/sysctl.d/99-kubernetes-cri.conf net.bridge.bridge-nf-call-iptables = 1 net.ipv4.ip_forward = 1 net.bridge.bridge-nf-call-ip6tables = 1 EOF # Apply sysctl params without reboot sysctl --system Pasang repository resmi docker  # Pasang GPG key repository docker curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg # Tambahkan repository docker echo \\  \u0026#34;deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \\ $(lsb_release -cs)stable\u0026#34; | tee /etc/apt/sources.list.d/docker.list \u0026gt; /dev/null apt update Pasang containerd.io  apt install containerd.io Konfigurasi containerd  sudo mkdir -p /etc/containerd containerd config default | tee /etc/containerd/config.toml Restart containerd  systemctl restart containerd Pasang package-package kubernetes pada master \u0026amp; worker  Pasang repository  # Pasang GPG key repository kubernetes sudo curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg # Tambahkan repository kubernetes echo \u0026#34;deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main\u0026#34; | tee /etc/apt/sources.list.d/kubernetes.list apt update Pasang package-package kubernetes  apt install -y kubelet=1.22.1-00 kubeadm=1.22.1-00 kubectl=1.22.1-00 apt-mark hold kubelet kubeadm kubectl  Tips!\nPeriksa versi package yang tersedia menggunakan apt-cache madison \u0026lt;name_package\u0026gt;\n Bootstrap Master (kubernetes-master01)  Bootstrap klaster kubernetes  kubeadm init --pod-network-cidr=172.16.0.0/16 --control-plane-endpoint \u0026#34;kubernetes-vip:6443\u0026#34; --upload-certs  Output kubeadm init\nSimpan dan gunakan untuk mendaftarkan node lain ke dalam klaster  To start using your cluster, you need to run the following as a regular user: mkdir -p $HOME/.kube sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config sudo chown $(id -u):$(id -g) $HOME/.kube/config Alternatively, if you are the root user, you can run: export KUBECONFIG=/etc/kubernetes/admin.conf You should now deploy a pod network to the cluster. Run \u0026#34;kubectl apply -f [podnetwork].yaml\u0026#34; with one of the options listed at: https://kubernetes.io/docs/concepts/cluster-administration/addons/ You can now join any number of the control-plane node running the following command on each as root: # Gunakan ini untuk mendaftarkan master kubeadm join kubernetes-vip:6443 --token tzkfd1.tsgtqfy5q15weour \\  --discovery-token-ca-cert-hash sha256:e4c1619f9050ac1041e198675a7bf1d275a1d8a486ba213260d0cd4144a46b89 \\  --control-plane --certificate-key 496abde789dc5340843bf83272bb3f307ae13bd6f4ad2fc3e9dfe08cc77aa991 Please note that the certificate-key gives access to cluster sensitive data, keep it secret! As a safeguard, uploaded-certs will be deleted in two hours; If necessary, you can use \u0026#34;kubeadm init phase upload-certs --upload-certs\u0026#34; to reload certs afterward. Then you can join any number of worker nodes by running the following on each as root: # Gunakan ini untuk mendaftarkan worker kubeadm join kubernetes-vip:6443 --token tzkfd1.tsgtqfy5q15weour \\  --discovery-token-ca-cert-hash sha256:e4c1619f9050ac1041e198675a7bf1d275a1d8a486ba213260d0cd4144a46b89 Pindahkan kubeconfig\nkubeconfig berisikan informasi mengenai endpoint kubernetes dan token untuk autentikasi  mkdir -p $HOME/.kube sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config sudo chown $(id -u):$(id -g) $HOME/.kube/config  Pasang CNI\n Unduh manifest calico  curl https://docs.projectcalico.org/manifests/calico.yaml -O Sunting calico.yaml  # Sunting calico.yaml vim calico.yaml # sesuaikan CALICO_IP4POOL_CIDR dengan --pod-network-cidr pada saat bootstrap - name: CALICO_IPV4POOL_CIDR value: \u0026quot;172.16.0.0/16\u0026quot; Terapkan pada klaster  kubectl apply -f calico.yaml   Mendaftarkan Master ke Klaster  Daftarkan master  Perintah dibawah didapatkan dari output kubeadm init pada master01\nkubeadm join kubernetes-vip:6443 --token tzkfd1.tsgtqfy5q15weour \\  --discovery-token-ca-cert-hash sha256:e4c1619f9050ac1041e198675a7bf1d275a1d8a486ba213260d0cd4144a46b89 \\  --control-plane --certificate-key 496abde789dc5340843bf83272bb3f307ae13bd6f4ad2fc3e9dfe08cc77aa991 Mendaftarkan Worker ke Klaster Perintah dibawah didapatkan dari output kubeadm init pada master01\n Daftarkan worker  kubeadm join kubernetes-vip:6443 --token tzkfd1.tsgtqfy5q15weour \\  --discovery-token-ca-cert-hash sha256:e4c1619f9050ac1041e198675a7bf1d275a1d8a486ba213260d0cd4144a46b89 Hasil Uji coba High Availability  Matikan salah satu lb  systemctl poweroff Periksa status klaster dengan menjalankan perintah kubectl  # Sebagai contoh kubectl get nodes Referensi  Kubespheere - HA Cluster Using Keepalived \u0026amp; Haproxy Docker Docs - Install Repository Kubernetes Docs - Container Runtime Kubernetes Docs - Install kubeadm, kubelet, kubectl Kubernetes Docs - kubeadm HA  ","permalink":"https://blog.ajiarya.id/posts/kubernetes/cara-menyiapkan-high-availability-kubernetes-klaster-kubeadm/","summary":"Topologi Versi Sistem Operasi Ubuntu 20.04 (Focal)\nAplikasi  HAProxy 2.0.13-2ubuntu0.3 KeepAlived 1:2.0.19-2 Containerd 1.4.9-1 Kubernetes 1.22.1-00 (kubeadm, kubelet, kubectl)  Panduan  Semua perintah dibawah dijalankan menggunakan user root  Persiapan  Sunting file /etc/hosts  cat\u0026lt;\u0026lt;EOF \u0026gt;\u0026gt; /etc/hosts ### Lab Kubernetes ### 192.168.30.10 kubernetes-vip 192.168.30.11 kubernetes-lb1 192.168.30.12 kubernetes-lb2 192.168.30.13 kubernetes-master01 192.168.30.14 kubernetes-master02 192.168.30.15 kubernetes-master03 192.168.30.16 kubernetes-worker01 EOF update dan upgrade package-package  apt update -y; apt upgrade -y HAproxy \u0026amp; Keepalived  Pasang haproxy dan keepalived  apt install -y haproxy keepalived  Konfigurasi HAProxy","title":"Cara Menyiapkan High Availability Kubernetes Klaster Menggunakan Kubeadm"},{"content":"Prasyarat  Proxmox Terinstall  Panduan  Pasang influxdb dan influxdb-client  apt install influxdb influxdb-client Buat user database dan database  influx (Dalam shell influx) Buat user dan database\nCREATE USER admin WITH PASSWORD \u0026#39;keraktelor\u0026#39; WITH ALL PRIVILEGES CREATE DATABASE monitoring CREATE USER influx WITH PASSWORD \u0026#39;piesusu\u0026#39; GRANT ALL ON monitoring TO influx exit Konfigurasi influxdb  vi /etc/influxdb/influxdb.conf Sesuaikan baris berikut\n[[udp]] enabled = true bind-address = \u0026#34;:8089\u0026#34; database = \u0026#34;mondb\u0026#34; Restart InfluxDB  systemctl restart influxdb  Tambahkan Metric Server\n Tambahkan InfluxDB     Pasang Grafana\n Tambahkan apt key  wget -q -O - https://packages.grafana.com/gpg.key | apt-key add -  Tambahkan repository grafana  echo \u0026#34;deb https://packages.grafana.com/oss/deb stable main\u0026#34; | tee -a /etc/apt/sources.list.d/grafana.list  Jalankan apt update  apt update  Pasang grafana  apt install -y grafana  Jalankan dan enable servis grafana  systemctl daemon-reload systemctl enable --now grafana-server   Tambahkan InfluxDB sebagai datasource pada Grafana\n Configuration \u0026gt; Data sources \u0026gt; Add data source Lakukan konfigurasi seperti berikut:  Isikan HTTP \u0026gt; URL. Isikan URL: http://\u0026lt;IP_Address\u0026gt;:8086 Isikan InfluxDB Details \u0026gt; Databases. Isikan Database: \u0026lt;database_name\u0026gt; sesuai dengan langkah 2 Isikan InfluxDB Details \u0026gt; User. Isikan User: \u0026lt;user_influx\u0026gt; sesuai dengan langkah 2       (Opsional) Import grafana dashboard yang sudah tersedia pada grafana.com\n https://grafana.com/grafana/dashboards/10048    Create \u0026gt; Import   Masukan ID dashboard   Pilih sumber InfluxDB yang telah ditambahkan dari tahap 6     Hasil ","permalink":"https://blog.ajiarya.id/posts/proxmox/cara-menyiapkan-monitoring-proxmox/","summary":"Prasyarat  Proxmox Terinstall  Panduan  Pasang influxdb dan influxdb-client  apt install influxdb influxdb-client Buat user database dan database  influx (Dalam shell influx) Buat user dan database\nCREATE USER admin WITH PASSWORD \u0026#39;keraktelor\u0026#39; WITH ALL PRIVILEGES CREATE DATABASE monitoring CREATE USER influx WITH PASSWORD \u0026#39;piesusu\u0026#39; GRANT ALL ON monitoring TO influx exit Konfigurasi influxdb  vi /etc/influxdb/influxdb.conf Sesuaikan baris berikut\n[[udp]] enabled = true bind-address = \u0026#34;:8089\u0026#34; database = \u0026#34;mondb\u0026#34; Restart InfluxDB  systemctl restart influxdb  Tambahkan Metric Server","title":"Cara Menyiapkan Monitoring Proxmox Menggunakan InfluxDB dan Grafana"},{"content":"Panduan  Tentukan disk untuk simulasi  # Lihat OSD ceph osd tree # Temukan lokasi OSD ceph osd find \u0026lt;osd_id\u0026gt; Masuk ke Node OSD  ssh ceph-osd-01 Hapus device dari sysfs  # echo 1 \u0026gt; /sys/block/BLOCK_DEVICE/device/delete echo 1 \u0026gt; /sys/block/sdb/device/delete Setelah beberapa saat, osd akan menjadi down dan kemudian menjadi out  ceph -s ceph osd tree ceph osd tree down ceph osd tree out SCSI Scan (Untuk memunculkan SCSI yang belum terdeteksi oleh Sistem Operasi) # Tampilkan host bus ls /sys/class/scsi_host # Scan ulang scsi berdasarkan host bus  echo \u0026#34;- - -\u0026#34; \u0026gt; /sys/class/scsi_host/hostX/scan Referensi  Red Hat Ceph Storage 4 Docs - Handling a disk failure  ","permalink":"https://blog.ajiarya.id/posts/ceph/cara-simulasi-kegagalan-disk-ceph/","summary":"Panduan  Tentukan disk untuk simulasi  # Lihat OSD ceph osd tree # Temukan lokasi OSD ceph osd find \u0026lt;osd_id\u0026gt; Masuk ke Node OSD  ssh ceph-osd-01 Hapus device dari sysfs  # echo 1 \u0026gt; /sys/block/BLOCK_DEVICE/device/delete echo 1 \u0026gt; /sys/block/sdb/device/delete Setelah beberapa saat, osd akan menjadi down dan kemudian menjadi out  ceph -s ceph osd tree ceph osd tree down ceph osd tree out SCSI Scan (Untuk memunculkan SCSI yang belum terdeteksi oleh Sistem Operasi) # Tampilkan host bus ls /sys/class/scsi_host # Scan ulang scsi berdasarkan host bus  echo \u0026#34;- - -\u0026#34; \u0026gt; /sys/class/scsi_host/hostX/scan Referensi  Red Hat Ceph Storage 4 Docs - Handling a disk failure  ","title":"Cara Simulasi Kegagalan Disk Pada Klaster Ceph"},{"content":"Pendahuluan libosinfo adalah penyedia informasi mengenai sistem operasi yang diperlukan untuk menyediakan dan mengelola virtualized environment\nPanduan   Perbarui libosinfo\n Debian Based  sudo apt install -y libosinfo  RHEL Based  sudo yum install -y libosinfo # atau sudo dnf install -y libosinfo   Unduh database OS\n  https://releases.pagure.org/libosinfo/\n# wget https://releases.pagure.org/libosinfo/osinfo-db-\u0026lt;version\u0026gt;.tar.xz wget https://releases.pagure.org/libosinfo/osinfo-db-20210903.tar.xz Perbarui database OS  sudo osinfo-db-import --system \u0026lt;database_os\u0026gt; Verifikasi  osinfo-query os ","permalink":"https://blog.ajiarya.id/posts/linux/cara-update-osinfo-db/","summary":"Pendahuluan libosinfo adalah penyedia informasi mengenai sistem operasi yang diperlukan untuk menyediakan dan mengelola virtualized environment\nPanduan   Perbarui libosinfo\n Debian Based  sudo apt install -y libosinfo  RHEL Based  sudo yum install -y libosinfo # atau sudo dnf install -y libosinfo   Unduh database OS\n  https://releases.pagure.org/libosinfo/\n# wget https://releases.pagure.org/libosinfo/osinfo-db-\u0026lt;version\u0026gt;.tar.xz wget https://releases.pagure.org/libosinfo/osinfo-db-20210903.tar.xz Perbarui database OS  sudo osinfo-db-import --system \u0026lt;database_os\u0026gt; Verifikasi  osinfo-query os ","title":"Cara Memperbarui libosinfo osinfo-db"},{"content":"Panduan  Hentikan servis jika masih berjalan  sudo systemctl stop ceph-osd@\u0026lt;id\u0026gt; Atur state OSD sebagai down dan out  ceph osd set out \u0026lt;id\u0026gt; ceph osd set down \u0026lt;id\u0026gt; Hapus OSD dari klaster ceph  # Hapus auth ceph auth rm osd.\u0026lt;osd_id\u0026gt; # Hapus dari CRUSH Map ceph osd crush remove osd.\u0026lt;osd_id\u0026gt; # Hapus dari OSD Map ceph osd rm \u0026lt;osd_id\u0026gt; Zap disk  # ceph-volume lvm destroy \u0026lt;device_path\u0026gt; --destroy ceph-volume lvm destroy /dev/sdX --destroy Solusi (Workaround) Tidak bisa menjalankan ceph-volume lvm destroy  Catat informasi mengenai OSD yang ingin dihapus  block osd_id    ceph-volume lvm list Format Disk menggunakan wipefs  wipefs -fa \u0026lt;device_path\u0026gt; Hapus LVM jika masih ada  # Lihat device mapper  dmsetup ls # Hapus device mapper OSD yang ingin dihapus dmsetup remove \u0026lt;device_map\u0026gt; Zap disk  # ceph-volume lvm destroy \u0026lt;device_path\u0026gt; --destroy ceph-volume lvm destroy /dev/sdX --destroy Referensi  Ceph Docs - ceph-volume ZAP The Geek Diary - dmsetup  ","permalink":"https://blog.ajiarya.id/posts/ceph/cara-menghapus-osd/","summary":"Panduan  Hentikan servis jika masih berjalan  sudo systemctl stop ceph-osd@\u0026lt;id\u0026gt; Atur state OSD sebagai down dan out  ceph osd set out \u0026lt;id\u0026gt; ceph osd set down \u0026lt;id\u0026gt; Hapus OSD dari klaster ceph  # Hapus auth ceph auth rm osd.\u0026lt;osd_id\u0026gt; # Hapus dari CRUSH Map ceph osd crush remove osd.\u0026lt;osd_id\u0026gt; # Hapus dari OSD Map ceph osd rm \u0026lt;osd_id\u0026gt; Zap disk  # ceph-volume lvm destroy \u0026lt;device_path\u0026gt; --destroy ceph-volume lvm destroy /dev/sdX --destroy Solusi (Workaround) Tidak bisa menjalankan ceph-volume lvm destroy  Catat informasi mengenai OSD yang ingin dihapus  block osd_id    ceph-volume lvm list Format Disk menggunakan wipefs  wipefs -fa \u0026lt;device_path\u0026gt; Hapus LVM jika masih ada  # Lihat device mapper  dmsetup ls # Hapus device mapper OSD yang ingin dihapus dmsetup remove \u0026lt;device_map\u0026gt; Zap disk  # ceph-volume lvm destroy \u0026lt;device_path\u0026gt; --destroy ceph-volume lvm destroy /dev/sdX --destroy Referensi  Ceph Docs - ceph-volume ZAP The Geek Diary - dmsetup  ","title":"Cara Menghapus OSD [Manual]"},{"content":"Pendahuluan Device Class berguna untuk mempermudah ceph untuk mendistribusikan data berdasarkan device class yang telah ditentukan didalam CRUSH Rule\nPanduan  Hapus class default yang didapatkan ketika membuat OSD  ceph osd crush rm-device-class \u0026lt;osd_id\u0026gt; Berikan class baru pada OSD yang diinginkan  ceph osd crush set-device-class performance $i Contoh memanfaatkan device class # Buat CRUSH rule # Contoh: # ceph osd crush rule create-replicated \u0026lt;rule-name\u0026gt; \u0026lt;root\u0026gt; \u0026lt;failure-domain\u0026gt; \u0026lt;class\u0026gt; ceph osd crush rule create-replicated replicated-performance default host performance # Buat pool ceph osd pool create performance-pool 32 32 replicated replicated-performance Referensi  Ceph News - Crush Device Classes  ","permalink":"https://blog.ajiarya.id/posts/ceph/cara-mengubah-device-class-osd/","summary":"Pendahuluan Device Class berguna untuk mempermudah ceph untuk mendistribusikan data berdasarkan device class yang telah ditentukan didalam CRUSH Rule\nPanduan  Hapus class default yang didapatkan ketika membuat OSD  ceph osd crush rm-device-class \u0026lt;osd_id\u0026gt; Berikan class baru pada OSD yang diinginkan  ceph osd crush set-device-class performance $i Contoh memanfaatkan device class # Buat CRUSH rule # Contoh: # ceph osd crush rule create-replicated \u0026lt;rule-name\u0026gt; \u0026lt;root\u0026gt; \u0026lt;failure-domain\u0026gt; \u0026lt;class\u0026gt; ceph osd crush rule create-replicated replicated-performance default host performance # Buat pool ceph osd pool create performance-pool 32 32 replicated replicated-performance Referensi  Ceph News - Crush Device Classes  ","title":"Cara Mengubah Device Class OSD"},{"content":"Panduan   Pasang snap (Jika belum tersedia)\n Debian Based  sudo apt install -y snapd  RHEL Based  sudo yum install -y epel-release sudo yum install -y snapd # atau sudo dnf install -y epel-release sudo dnf install -y snapd sudo systemctl enable --now snapd.socket sudo ln -s /var/lib/snapd/snap /snap   Pasang Nextcloud melalui snapd\n  sudo snap install nextcloud Konfigurasi Akun administratif  sudo nextcloud.manual-install \u0026lt;username\u0026gt; \u0026lt;password\u0026gt; Konfigurasi nama domain  # sudo nextcloud.occ config:system:set trusted_domains 1 --value=\u0026lt;alamat_domain\u0026gt; sudo nextcloud.occ config:system:set trusted_domains 1 --value=contoh.com Generate SSL menggunakan Let\u0026rsquo;s Encrypt  sudo nextcloud.enable-https lets-encrypt # Verifikasi sudo nextcloud.occ config:system:get trusted_domainsc  Buka firewall\n ufw  sudo ufw allow 80,443/tcp  firewalld  firewall-cmd --permanent --zone=public --add-service=http firewall-cmd --permanent --zone=public --add-service=https firewall-cmd --reload   Referensi  Snapcraft - Installing Snap on CentOS DigitalOcean - How To Install and Configure Nextcloud  ","permalink":"https://blog.ajiarya.id/posts/nextcloud/cara-setup-nextcloud/","summary":"Panduan   Pasang snap (Jika belum tersedia)\n Debian Based  sudo apt install -y snapd  RHEL Based  sudo yum install -y epel-release sudo yum install -y snapd # atau sudo dnf install -y epel-release sudo dnf install -y snapd sudo systemctl enable --now snapd.socket sudo ln -s /var/lib/snapd/snap /snap   Pasang Nextcloud melalui snapd\n  sudo snap install nextcloud Konfigurasi Akun administratif  sudo nextcloud.","title":"Cara Menyiapkan Nextcloud Dengan Let's Encrypt"},{"content":"Panduan Rekomendasi   cephadm (Container)\ncephadm tersedia sejak versi v15.2.0 (Octopus). cephadm mendeploy servis-servis Ceph dalam bentuk container, dengan cephadm mempermudah untuk memanajemen klaster seperti menambahkan, menghapuskan, atau memperbarui komponen Ceph.\ncephadm mendukung docker dan podman sebagai container runtime.\n  Rook (Container / Manage by Kubernetes)\nRook tersedia sejak versi Nautilus. Rook men-deploy dan melakukan manajemen klaster Ceph yang berjalan didalam Kubernetes. Jika ingin menggunakan Ceph sebagai storage untuk klaster Kubernetes, Rook adalah tool cocok digunakan.\n  Lainnya   ceph-ansible (Service or Container)\nDeploy Ceph menggunakan Ansible, playbook yang sudah disediakan mempermudah kita untuk men-deploy klaster ceph. ceph-ansible mendukung deployment servis-servis Ceph sebagai Systemd Service atau sebagai Container.\n  ceph-deploy (Deprecated!) (Service)\nceph-deploy merupakan tool yang memanfaatkan SSH dan python untuk melakukan deploy servis-service Ceph, penggunaannya sangat mudah namun tool ini sudah deprecated semenjak release Octopus.\n  Charmed Ceph (Juju) (Service and/or Container)\nCharmed Ceph adalah deployment yang sering digunakan ketika kita ingin menggunakan MAAS + Juju untuk manajemen server dan aplikasi.\nCharmed OpenStack + Charmed Ceph adalah kombinasi yang sering digunakan.\n  ","permalink":"https://blog.ajiarya.id/posts/ceph/memilih-deployment-tool-ceph/","summary":"Panduan Rekomendasi   cephadm (Container)\ncephadm tersedia sejak versi v15.2.0 (Octopus). cephadm mendeploy servis-servis Ceph dalam bentuk container, dengan cephadm mempermudah untuk memanajemen klaster seperti menambahkan, menghapuskan, atau memperbarui komponen Ceph.\ncephadm mendukung docker dan podman sebagai container runtime.\n  Rook (Container / Manage by Kubernetes)\nRook tersedia sejak versi Nautilus. Rook men-deploy dan melakukan manajemen klaster Ceph yang berjalan didalam Kubernetes. Jika ingin menggunakan Ceph sebagai storage untuk klaster Kubernetes, Rook adalah tool cocok digunakan.","title":"Memilih Deployment Tool Ceph"},{"content":"Prasyarat  Klaster Ceph  Pendahuluan Ceph Placement Groups (PGs) adalah implementasi internal yang dilakukan oleh Ceph untuk melakukan distribusi data\nMapping PG pada Pool\nGambaran Pool yang menggunakan replikasi dengan nilai 2\nSumber Gambar: https://docs.ceph.com/en/latest/rados/operations/placement-groups/\nPanduan  Gunakan perhitungan 50-100 PG untuk 1 OSD Hitung jumlah OSD pada klaster Jumlah Replikasi yang diinginkan Gunakan Kalkulator PG  PGCalc    Contoh  Klaster Ceph untuk servis OpenStack Klaster memiliki 100 OSD dengan ukuran 1 TB setiap OSD (100 TB Total) Target 100 PG untuk 1 OSD Replikasi data sebanyak 3 (Size) Alokasi pool  cinder-backup 25% (25 TB) cinder-volumes 53% (53 TB) ephemeral-vms 15% (15 TB) glance-vms 7% (7 TB)     Pool Name: Nama Pool Size: Ukuran replikasi atau EC (K+M) OSD: Jumlah OSD untuk pool tersebut (Berdasarkan OSD device class untuk pool) Target PGs Per OSD: Target PG untuk 1 OSD (Rekomendasi 50-100 PG) Suggested PG Count: Saran PG merupakan kelipatan 2, Jumlah PG untuk pool  Referensi  Ceph Docs - Placement Groups  ","permalink":"https://blog.ajiarya.id/posts/ceph/cara-menghitung-pg-untuk-klaster-ceph/","summary":"Prasyarat  Klaster Ceph  Pendahuluan Ceph Placement Groups (PGs) adalah implementasi internal yang dilakukan oleh Ceph untuk melakukan distribusi data\nMapping PG pada Pool\nGambaran Pool yang menggunakan replikasi dengan nilai 2\nSumber Gambar: https://docs.ceph.com/en/latest/rados/operations/placement-groups/\nPanduan  Gunakan perhitungan 50-100 PG untuk 1 OSD Hitung jumlah OSD pada klaster Jumlah Replikasi yang diinginkan Gunakan Kalkulator PG  PGCalc    Contoh  Klaster Ceph untuk servis OpenStack Klaster memiliki 100 OSD dengan ukuran 1 TB setiap OSD (100 TB Total) Target 100 PG untuk 1 OSD Replikasi data sebanyak 3 (Size) Alokasi pool  cinder-backup 25% (25 TB) cinder-volumes 53% (53 TB) ephemeral-vms 15% (15 TB) glance-vms 7% (7 TB)     Pool Name: Nama Pool Size: Ukuran replikasi atau EC (K+M) OSD: Jumlah OSD untuk pool tersebut (Berdasarkan OSD device class untuk pool) Target PGs Per OSD: Target PG untuk 1 OSD (Rekomendasi 50-100 PG) Suggested PG Count: Saran PG merupakan kelipatan 2, Jumlah PG untuk pool  Referensi  Ceph Docs - Placement Groups  ","title":"Cara Menghitung Jumlah PG Untuk Klaster Ceph"},{"content":"Panduan  Install package open-iscsi   Debian Based  sudo apt install -y open-iscsi  RHEL Based  sudo dnf install -y iscsi-initiator-utils # atau  sudo yum install -y iscsi-initiator-utils Konfigurasi IQN initiator  sudo vim /etc/iscsi/initiatorname.iscsi  Tambahkan baris berikut InitiatorName=iqn.2021-08.aa-lio-initiator:lio.initiator01   Konfigurasi iscsi initiator  sudo vim /etc/iscsi/iscsid.conf  Sesuaikan baris berikut node.session.auth.authmethod = CHAP node.session.auth.username = \u0026lt;user\u0026gt; node.session.auth.password = \u0026lt;password\u0026gt;   Restart servis iscsi   Debian Based  sudo systemctl restart iscsid open-iscsi  RHEL Based  sudo systemctl restart iscsid Discover target  sudo iscsiadm -m discovery -t sendtargets -p \u0026lt;ip_iscsi_target\u0026gt; Masuk iSCSI target (Login)  sudo iscsiadm -m node --login Verifikasi  sudo iscsiadm -m session -o show Referensi  Server World - iSCSI Initiator (Debian 11) Server World - iSCSI Initiator (CentOS 8)  ","permalink":"https://blog.ajiarya.id/posts/linux/cara-menyiapkan-iscsi-initiator/","summary":"Panduan  Install package open-iscsi   Debian Based  sudo apt install -y open-iscsi  RHEL Based  sudo dnf install -y iscsi-initiator-utils # atau  sudo yum install -y iscsi-initiator-utils Konfigurasi IQN initiator  sudo vim /etc/iscsi/initiatorname.iscsi  Tambahkan baris berikut InitiatorName=iqn.2021-08.aa-lio-initiator:lio.initiator01   Konfigurasi iscsi initiator  sudo vim /etc/iscsi/iscsid.conf  Sesuaikan baris berikut node.session.auth.authmethod = CHAP node.session.auth.username = \u0026lt;user\u0026gt; node.session.auth.password = \u0026lt;password\u0026gt;   Restart servis iscsi   Debian Based  sudo systemctl restart iscsid open-iscsi  RHEL Based  sudo systemctl restart iscsid Discover target  sudo iscsiadm -m discovery -t sendtargets -p \u0026lt;ip_iscsi_target\u0026gt; Masuk iSCSI target (Login)  sudo iscsiadm -m node --login Verifikasi  sudo iscsiadm -m session -o show Referensi  Server World - iSCSI Initiator (Debian 11) Server World - iSCSI Initiator (CentOS 8)  ","title":"Cara Menyiapkan ISCSI Initiator (Linux)"},{"content":"Pendahuluan iSCSI Target adalah server yang memiliki sumber daya penyimpanan dan penyimpanan tersebut bisa bisa digunakan oleh iSCSI Initiator\ntargetcli adalah tool manajemen LIO (Linux IO).\nPanduan   Install package targetcli\n Debian Distribution  sudo apt install -y targetcli-fb  RHEL Distribution  sudo dnf install -y targetcli # atau sudo yum install -y targetcli   Buat backstore\nbackstore adalah sumber daya penyimpanan yang akan disediakan dan bisa gunakan oleh iSCSI Initiator. Kita bisa gunakan fileio untuk backstore yang berupa file ataupun block untuk backstore yang berupa device.\n File   Masuk shell targetcli  sudo targetcli (Dalam targetcli) berpindah ke direktori backstores/fileio  cd backstores/fileio (Dalam targetcli) Buat file yang akan dijadikan backstore  # create \u0026lt;nama\u0026gt; \u0026lt;lokasi_file\u0026gt; create file-disk01 /data/file-disk01.img 10G (Dalam targetcli) Verifikasi  cd / ls (Dalam targetcli) Keluar shell  exit  Block   Masuk shell targetcli  sudo targetcli (Dalam targetcli) berpindah ke direktori backstores/block  cd backstores/block (Dalam targetcli) Gunakan device yang akan dijadikan backstore  # create \u0026lt;nama\u0026gt; \u0026lt;lokasi_device\u0026gt; create block-disk01 /dev/sdb (Dalam targetcli) Verifikasi  cd / ls (Dalam targetcli) Keluar shell  exit   Buat iSCSI Portal\n Masuk shell targetcli  sudo targetcli (Dalam targetcli) berpindah ke direktori iscsi  cd iscsi (Dalam targetcli) Buat iscsi  Baca Standar IQN    # Buat Target # iqn.\u0026lt;YYYY-MM\u0026gt;.\u0026lt;reverse_domain\u0026gt;:\u0026lt;nama_target\u0026gt; create iqn.2021-08.aa-lio-target:lio.target01 # Daftarkan backstore untuk dijadikan LUN cd iqn.2021-08.aa-lio-target:lio.target01/tpg1/luns create /backstores/fileio/file-disk01 # Buat hak akses agar initiator bisa terhubung (Access List) cd ../acls create iqn.2021-08.aa-lio-initiator:lio.initiator01 # Setel user dan password untuk initiator cd iqn.2021-08.aa-lio-initiator:lio.initiator01 set auth userid=root set auth password=\u0026lt;password_rahasia\u0026gt;   Referensi  Server World - iSCSI : Configure Target (Targetcli)  ","permalink":"https://blog.ajiarya.id/posts/linux/cara-menyiapkan-iscsi-target-targetcli/","summary":"Pendahuluan iSCSI Target adalah server yang memiliki sumber daya penyimpanan dan penyimpanan tersebut bisa bisa digunakan oleh iSCSI Initiator\ntargetcli adalah tool manajemen LIO (Linux IO).\nPanduan   Install package targetcli\n Debian Distribution  sudo apt install -y targetcli-fb  RHEL Distribution  sudo dnf install -y targetcli # atau sudo yum install -y targetcli   Buat backstore\nbackstore adalah sumber daya penyimpanan yang akan disediakan dan bisa gunakan oleh iSCSI Initiator.","title":"Cara Menyiapkan ISCSI Target - targetcli (Linux)"},{"content":"Pendahuluan Saat kita ingin melakukan Maintenance atau Mematikan server sebaiknya kita menghentikan atau menjeda klaster Ceph yang sedang berjalan\nPanduan Menghentikan atau melakukan pause klaster ceph osd set noout ceph osd set norecover ceph osd set norebalance ceph osd set nobackfill ceph osd set nodown ceph osd set pause Menjalankan atau menghentikan pause klaster ceph osd unset noout ceph osd unset norecover ceph osd unset norebalance ceph osd unset nobackfill ceph osd unset nodown ceph osd unset pause Referensi  Red Hat Ceph Storage 3 - 2.6. Step No. 4 Manual Ceph Command Ceph OSD Map Flags  ","permalink":"https://blog.ajiarya.id/posts/ceph/cara-stop-atau-pause-klaster-ceph/","summary":"Pendahuluan Saat kita ingin melakukan Maintenance atau Mematikan server sebaiknya kita menghentikan atau menjeda klaster Ceph yang sedang berjalan\nPanduan Menghentikan atau melakukan pause klaster ceph osd set noout ceph osd set norecover ceph osd set norebalance ceph osd set nobackfill ceph osd set nodown ceph osd set pause Menjalankan atau menghentikan pause klaster ceph osd unset noout ceph osd unset norecover ceph osd unset norebalance ceph osd unset nobackfill ceph osd unset nodown ceph osd unset pause Referensi  Red Hat Ceph Storage 3 - 2.","title":"Cara Stop atau Pause Klaster Ceph"},{"content":"Lingkungan  Sistem Operasi: CentOS 8 OpenStack: Ussuri Kolla-Ansible: 10.3.0 Kubernetes Image: Fedora CoreOS 32  Panduan  Install Dependensi  sudo dnf install -y python3-devel libffi-devel gcc openssl-devel python3-libselinux Siapkan python3 virtual environment  python3 -m venv kolla source kolla/bin/activate Upgrade package pip  pip install -U pip Install kolla-ansible \u0026amp; ansible  pip install \u0026#39;ansible\u0026lt;2.10\u0026#39; kolla-ansible==10.3.0 Buat direktori /etc/kolla  sudo mkdir -p /etc/kolla sudo chown $USER:$USER /etc/kolla Salin globals.yml dan password.yml ke direktori /etc/kolla  cp -r kolla/share/kolla-ansible/etc_examples/kolla/* /etc/kolla Salin all-in-one file inventory ke direktori sekarang  cp kolla/share/kolla-ansible/ansible/inventory/multinode . Konfigurasi ansible  sudo mkdir /etc/ansible sudo bash -c \u0026#39;cat\u0026lt;\u0026lt;EOF \u0026gt; /etc/ansible/ansible.cfg [defaults] host_key_checking=False pipelining=True forks=100 EOF\u0026#39; Generate password openstack  kolla-genpwd Sunting globals.yml  cat\u0026lt;\u0026lt;EOF \u0026gt; /etc/kolla/globals.yml kolla_base_distro: \u0026#34;centos\u0026#34; kolla_install_type: \u0026#34;binary\u0026#34; openstack_release: \u0026#34;ussuri\u0026#34; kolla_internal_vip_address: \u0026#34;10.10.100.6\u0026#34; kolla_external_vip_address: \u0026#34;10.10.100.7\u0026#34; network_interface: \u0026#34;eth0\u0026#34; neutron_external_interface: \u0026#34;eth1\u0026#34; enable_openstack_core: \u0026#34;yes\u0026#34; enable_cinder: \u0026#34;yes\u0026#34; enable_cinder_backup: \u0026#34;no\u0026#34; enable_magnum: \u0026#34;yes\u0026#34; enable_cluster_user_trust: true enable_cinder_backend_lvm: \u0026#34;yes\u0026#34; enable_neutron_provider_networks: \u0026#34;yes\u0026#34; nova_compute_virt_type: \u0026#34;kvm\u0026#34; EOF Buat LVM untuk OpenStack Cinder  sudo dnf install -y lvm2 sudo pvcreate /dev/vdb sudo vgcreate cinder-volumes /dev/vdb Deploy OpenStack Kolla  sudo dnf install -y epel-release sudo dnf install -y screen screen -R kolla kolla-ansible -i all-in-one bootstrap-servers kolla-ansible -i all-in-one prechecks kolla-ansible -i all-in-one deploy kolla-ansible -i all-in-one post-deploy Install openstack client  source kolla/bin/activate pip install python-openstackclient python-magnumclient python-heatclient Buat flavor untuk instance magnum  source /etc/kolla/admin-openrc.sh sudo chown $USER:$USER /etc/kolla/admin-openrc.sh openstack flavor create m0-kubernetes --disk 20 --vcpu 4 --ram 4096 --public Unduh dan ekstrak image Fedora CoreOS 32  sudo dnf install -y wget wget https://builds.coreos.fedoraproject.org/prod/streams/stable/builds/32.20200629.3.0/x86_64/fedora-coreos-32.20200629.3.0-openstack.x86_64.qcow2.xz unxz fedora-coreos-32.20200629.3.0-openstack.x86_64.qcow2.xz Unggah image ke OpenStack Glance  openstack image create \\  --file fedora-coreos-32.20200629.3.0-openstack.x86_64.qcow2 \\  --disk-format qcow2 \\  --container-format=bare \\  --property os_distro=fedora-coreos \\  --property os_admin_user=core \\  --public \\  Fedora-CoreOS-32 Buat template klaster  openstack coe cluster template create k8s-btech-bicara \\  --image Fedora-CoreOS-32 \\  --external-network public1 \\  --dns-nameserver 8.8.8.8 \\  --flavor m0-kubernetes \\  --master-flavor m0-kubernetes \\  --docker-volume-size 5 \\  --network-driver flannel \\  --coe kubernetes \\  --volume-driver cinder Buat klaster Kubernetes  openstack coe cluster create k8s-cluster-btech-bicara --keypair mykey \\  --cluster-template k8s-btech-bicara \\  --labels keystone_auth_enabled=true,kube_tag=v1.18.6,cloud_provider_enabled=true,cinder_csi_enabled=true,cinder_csi_plugin_tag=v1.18.0 ","permalink":"https://blog.ajiarya.id/posts/openstack/cara-setup-magnum-kolla/","summary":"Lingkungan  Sistem Operasi: CentOS 8 OpenStack: Ussuri Kolla-Ansible: 10.3.0 Kubernetes Image: Fedora CoreOS 32  Panduan  Install Dependensi  sudo dnf install -y python3-devel libffi-devel gcc openssl-devel python3-libselinux Siapkan python3 virtual environment  python3 -m venv kolla source kolla/bin/activate Upgrade package pip  pip install -U pip Install kolla-ansible \u0026amp; ansible  pip install \u0026#39;ansible\u0026lt;2.10\u0026#39; kolla-ansible==10.3.0 Buat direktori /etc/kolla  sudo mkdir -p /etc/kolla sudo chown $USER:$USER /etc/kolla Salin globals.","title":"Cara Setup OpenStack Magnum Dengan Deployment Kolla-Ansible [Kubernetes COE]"},{"content":"Prasyarat  Klaster Ceph  Panduan   Install package ceph-mgr-dashboard pada semua host ceph-mgr\n Debian/Ubuntu  sudo apt install -y ceph-mgr-dashboard  RHEL/CentOS/Rocky 8  sudo dnf install -y ceph-mgr-dashboard  RHEL/CentOS/Rocky 7  sudo yum install -y ceph-mgr-dashboard   Aktifkan module dashboard pada ceph-mgr\n  ceph mgr module enable dashboard Buat TLS untuk ceph dashboard  ceph dashboard create-self-signed-cert Buat user  echo \u0026#34;rahasia123\u0026#34; \u0026gt; password.txt ceph dashboard ac-user-create admin -i password.txt administrator Login ceph dashboard   URL: https://\u0026lt;alamat_ceph-mgr\u0026gt;:8443  ","permalink":"https://blog.ajiarya.id/posts/ceph/cara-deploy-ceph-dashboard-pada-deployment-manual/","summary":"Prasyarat  Klaster Ceph  Panduan   Install package ceph-mgr-dashboard pada semua host ceph-mgr\n Debian/Ubuntu  sudo apt install -y ceph-mgr-dashboard  RHEL/CentOS/Rocky 8  sudo dnf install -y ceph-mgr-dashboard  RHEL/CentOS/Rocky 7  sudo yum install -y ceph-mgr-dashboard   Aktifkan module dashboard pada ceph-mgr\n  ceph mgr module enable dashboard Buat TLS untuk ceph dashboard  ceph dashboard create-self-signed-cert Buat user  echo \u0026#34;rahasia123\u0026#34; \u0026gt; password.","title":"Cara Deploy Ceph Dashboard Pada Deployment Manual"},{"content":"Prasyarat  Windows 10 WSL 2 Docker Desktop WSL 2 Backend  Panduan  Unduh dan install binary file minikube  curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 sudo install minikube-linux-amd64 /usr/local/bin/minikube Jalankan minikube menggunakan driver docker  minikube start --driver=docker Unduh dan install kubectl  curl -LO \u0026#34;https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\u0026#34; sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl Verifikasi status minikube  minikube status kubectl get pods -n kube-system Referensi  Docker Desktop WSL 2 backend Minikube Docker Driver Install Kubectl  ","permalink":"https://blog.ajiarya.id/posts/kubernetes/cara-memasang-minikube-pada-wsl/","summary":"Prasyarat  Windows 10 WSL 2 Docker Desktop WSL 2 Backend  Panduan  Unduh dan install binary file minikube  curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 sudo install minikube-linux-amd64 /usr/local/bin/minikube Jalankan minikube menggunakan driver docker  minikube start --driver=docker Unduh dan install kubectl  curl -LO \u0026#34;https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\u0026#34; sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl Verifikasi status minikube  minikube status kubectl get pods -n kube-system Referensi  Docker Desktop WSL 2 backend Minikube Docker Driver Install Kubectl  ","title":"Cara Memasang Minikube Pada WSL [Docker Driver]"},{"content":"Prasyarat  Kubernetes Cluster  Panduan  Terapkan manifest yang disediakan pada website nginx  kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.0.0/deploy/static/provider/baremetal/deploy.yaml Sunting service ingress-nginx-controller pada namespace ingress-nginx  Isikan dengan IP Node kubernetes yang akan melayani request\nkubectl -n ingress-nginx edit svc ingress-nginx-controller Tambahkan baris berikut\nspec: externalIPs: - \u0026lt;IP_NODE_1\u0026gt; - \u0026lt;IP_NODE_2\u0026gt; - \u0026lt;IP_NODE_N\u0026gt; Referensi  Deploy Nginx Controller on Baremetal Expose Nginx via ExternalIPs  ","permalink":"https://blog.ajiarya.id/posts/kubernetes/cara-memasang-ingress-controller-pada-k8s/","summary":"Prasyarat  Kubernetes Cluster  Panduan  Terapkan manifest yang disediakan pada website nginx  kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.0.0/deploy/static/provider/baremetal/deploy.yaml Sunting service ingress-nginx-controller pada namespace ingress-nginx  Isikan dengan IP Node kubernetes yang akan melayani request\nkubectl -n ingress-nginx edit svc ingress-nginx-controller Tambahkan baris berikut\nspec: externalIPs: - \u0026lt;IP_NODE_1\u0026gt; - \u0026lt;IP_NODE_2\u0026gt; - \u0026lt;IP_NODE_N\u0026gt; Referensi  Deploy Nginx Controller on Baremetal Expose Nginx via ExternalIPs  ","title":"Cara Memasang Nginx Ingress Controller Pada Kubernetes Cluster [External IP]"},{"content":"Prasyarat  Mesin Fedora 34 (Baremetal atau VM) Akun Red Hat  Versi  Sistem Operasi: Fedora 34 Cloud Image CodeReady: 1.31.2+19538dab OpenShift: 4.8.4  Panduan  Update dan Upgrade package  sudo dnf update -y; sudo dnf upgrade -y Install package NetworkManager dan wget  sudo dnf install -y NetworkManager wget Unduh CodeReady dan salin pull secret Tautan Disini  wget https://developers.redhat.com/content-gateway/file/pub/openshift-v4/clients/crc/1.31.2/crc-linux-amd64.tar.xz tar xf crc-linux-amd64.tar.xz cd crc-linux-1.31.2-amd64/ sudo mv crc /usr/local/bin # Verifikasi crc version Setup dan jalankan CodeReady (Tempel pull secret pada proses crc start)  crc setup crc start  Akses CodeReady\n Akses CLI  # Jika ingin melihat kredensial jalankan perintah berikut: # crc console --url --credentials eval $(crc oc-env) oc login -u kubeadmin -p 84C7Q-C3Ecq-aWYXF-V9zR8 https://api.crc.testing:6443  Akses Browser   Siapkan tunnel Akses https://console-openshift-console.apps-crc.testing     Referensi  Dokumentasi CodeReady  ","permalink":"https://blog.ajiarya.id/posts/openshift/cara-memasang-openshift-codeready/","summary":"Prasyarat  Mesin Fedora 34 (Baremetal atau VM) Akun Red Hat  Versi  Sistem Operasi: Fedora 34 Cloud Image CodeReady: 1.31.2+19538dab OpenShift: 4.8.4  Panduan  Update dan Upgrade package  sudo dnf update -y; sudo dnf upgrade -y Install package NetworkManager dan wget  sudo dnf install -y NetworkManager wget Unduh CodeReady dan salin pull secret Tautan Disini  wget https://developers.redhat.com/content-gateway/file/pub/openshift-v4/clients/crc/1.31.2/crc-linux-amd64.tar.xz tar xf crc-linux-amd64.tar.xz cd crc-linux-1.31.2-amd64/ sudo mv crc /usr/local/bin # Verifikasi crc version Setup dan jalankan CodeReady (Tempel pull secret pada proses crc start)  crc setup crc start  Akses CodeReady","title":"Cara Memasang OpenShift CodeReady Pada Fedora 34"},{"content":"Prasyarat  Image yang ingin diubah Binary qemu-img  Panduan Install qemu-img  Ubuntu/Debian  sudo apt install -y qemu-img  RHEL/CentOS/Rocky 7  sudo yum install -y qemu-img  RHEL/CentOS/Rocky 8  sudo dnf install -y qemu-img Perintah qemu-img convert -f \u0026lt;format_sekarang\u0026gt; -O \u0026lt;format_output\u0026gt; \u0026lt;image_sekarang\u0026gt; \u0026lt;image_output\u0026gt; Contoh qcow2 ke raw qemu-img convert -f qcow2 -O raw contoh.qcow2 contoh.img raw ke qcow2 qemu-img convert -f raw -O qcow2 contoh.img contoh.qcow2 vmdk ke qcow2 qemu-img convert -f vmdk -O qcow2 contoh.vmdk contoh.qcow2 Referensi  OpenStack Docs - Image Guide  ","permalink":"https://blog.ajiarya.id/posts/linux/cara-mengubah-format-image-vm/","summary":"Prasyarat  Image yang ingin diubah Binary qemu-img  Panduan Install qemu-img  Ubuntu/Debian  sudo apt install -y qemu-img  RHEL/CentOS/Rocky 7  sudo yum install -y qemu-img  RHEL/CentOS/Rocky 8  sudo dnf install -y qemu-img Perintah qemu-img convert -f \u0026lt;format_sekarang\u0026gt; -O \u0026lt;format_output\u0026gt; \u0026lt;image_sekarang\u0026gt; \u0026lt;image_output\u0026gt; Contoh qcow2 ke raw qemu-img convert -f qcow2 -O raw contoh.qcow2 contoh.img raw ke qcow2 qemu-img convert -f raw -O qcow2 contoh.img contoh.qcow2 vmdk ke qcow2 qemu-img convert -f vmdk -O qcow2 contoh.","title":"Cara Mengubah Format Image VM"},{"content":"Prasyarat  OpenStack User Horizon Instance RHEL/CentOS/Rocky  Panduan   Buka console instance pada horizon\n  Masuk ke boot option dengan cara interupsi proses booting\n Reboot instance dan tekan tombol panah arah apapun di keyboard pada saat proses reboot    Saat masuk boot option pilih kernel dan tekan tombol e pada keyboard\n Cari baris dengan awalan linux /boot/vmlinuz-xxxxxxxx Tambahkan baris berikut rd.break pada baris yang sama dengan linux /boot/vmlinuz-xxxxxxxx Hapus kata berikut console=ttyS0 Lalu tekan Ctrl + x    Reset password root menggunakan perintah passwd\n Jika sudah masuk maka tampilan terminal adalah sebagai berikut  switch_root:/#  Mount ulang /sysroot dengan menggunakan perintah berikut  mount -o remount,rw /sysroot  Jadikan /sysroot sebagai root directory  chroot /sysroot  Lalu ganti password menggunakan perintah passwd  passwd  Relabel filesystem SELinux saat reboot  touch /.autorelabel   Reboot sistem menggunakan perintah berikut (2 kali exit)\n  # Keluar dari chroot exit # Keluar untuk melanjutkan ke boot normal exit Referensi  Reset OpenStack Instance Password Reset Root Password Red Hat What is autorelabel  ","permalink":"https://blog.ajiarya.id/posts/openstack/cara-reset-password-root-instance-centos/","summary":"Prasyarat  OpenStack User Horizon Instance RHEL/CentOS/Rocky  Panduan   Buka console instance pada horizon\n  Masuk ke boot option dengan cara interupsi proses booting\n Reboot instance dan tekan tombol panah arah apapun di keyboard pada saat proses reboot    Saat masuk boot option pilih kernel dan tekan tombol e pada keyboard\n Cari baris dengan awalan linux /boot/vmlinuz-xxxxxxxx Tambahkan baris berikut rd.break pada baris yang sama dengan linux /boot/vmlinuz-xxxxxxxx Hapus kata berikut console=ttyS0 Lalu tekan Ctrl + x    Reset password root menggunakan perintah passwd","title":"Cara Reset Password Root Dari OpenStack Console [RHEL/CentOS/Rocky]"},{"content":"Prasyarat  OpenStack User Horizon Instance Ubuntu  Panduan   Buka console instance pada horizon\n  Masuk ke boot option dengan cara interupsi proses booting\n Reboot instance dan tekan tombol Shift keyboard pada saat proses reboot    Saat masuk boot option pilih kernel dan tekan tombol e pada keyboard\n Cari baris dengan awalan linux /boot/vmlinuz-xxxxxxxx Temukan ro quiet dan ganti dengan rw init=/bin/bash Hapus kata berikut console=ttyS0 Lalu tekan Ctrl + x    Reset password root menggunakan perintah passwd\n Jika sudah masuk maka tampilan terminal adalah sebagai berikut  root@(none):/#  Ganti password  passwd   Reboot sistem menggunakan perintah berikut\n  exec /sbin/init Referensi  Reset OpenStack Instance Password Reset Root Password Ubuntu  ","permalink":"https://blog.ajiarya.id/posts/openstack/cara-reset-password-root-instance-ubuntu/","summary":"Prasyarat  OpenStack User Horizon Instance Ubuntu  Panduan   Buka console instance pada horizon\n  Masuk ke boot option dengan cara interupsi proses booting\n Reboot instance dan tekan tombol Shift keyboard pada saat proses reboot    Saat masuk boot option pilih kernel dan tekan tombol e pada keyboard\n Cari baris dengan awalan linux /boot/vmlinuz-xxxxxxxx Temukan ro quiet dan ganti dengan rw init=/bin/bash Hapus kata berikut console=ttyS0 Lalu tekan Ctrl + x    Reset password root menggunakan perintah passwd","title":"Cara Reset Password Root Dari OpenStack Console [Ubuntu]"},{"content":"Pendahuluan Jika mengalami kerusakan pada ceph monitor kita bisa melakukan hapus dan buat monitor yang rusak tersebut dengan ceph-monitor lainnya masih tersedia bagi cluster\nPanduan  Login sebagai root  sudo -i Hentikan service monitor jika masih berjalan  systemctl stop ceph-mon@\u0026lt;monitor_name\u0026gt; Hapus direktori monitor dan buat ulang direktori  rm -rf /var/lib/ceph/mon/ceph-\u0026lt;monitor_name\u0026gt; mkdir /var/lib/ceph/mon/ceph-\u0026lt;monitor_name\u0026gt; Remove monitor from the cluster  ceph mon rm \u0026lt;monitor_name\u0026gt; Dapatkan keyring dan monmap (monitor map)  ceph auth get mon. -o /tmp/keyring ceph mon getmap -o /tmp/monmap Sunting monmap (monitor map)  monmaptool /tmp/monmap --add \u0026lt;monitor_name\u0026gt; \u0026lt;monitor_ip\u0026gt; Buat ulang monitor yang telah dihapus  ceph-mon -i \u0026lt;monitor_name\u0026gt; --cluster ceph --mkfs --monmap /tmp/monmap --keyring /tmp/keyring Ganti pemilik direktori monitor menjadi ceph  chown -R ceph:ceph /var/lib/ceph/mon/ceph-\u0026lt;monitor_name\u0026gt; Jalankan service  systemctl daemon-reload systemctl start ceph-mon@\u0026lt;monitor_name\u0026gt; Referensi  Ceph Docs - Adding/Removing Monitor  ","permalink":"https://blog.ajiarya.id/posts/ceph/cara-membuat-ulang-ceph-mon/","summary":"Pendahuluan Jika mengalami kerusakan pada ceph monitor kita bisa melakukan hapus dan buat monitor yang rusak tersebut dengan ceph-monitor lainnya masih tersedia bagi cluster\nPanduan  Login sebagai root  sudo -i Hentikan service monitor jika masih berjalan  systemctl stop ceph-mon@\u0026lt;monitor_name\u0026gt; Hapus direktori monitor dan buat ulang direktori  rm -rf /var/lib/ceph/mon/ceph-\u0026lt;monitor_name\u0026gt; mkdir /var/lib/ceph/mon/ceph-\u0026lt;monitor_name\u0026gt; Remove monitor from the cluster  ceph mon rm \u0026lt;monitor_name\u0026gt; Dapatkan keyring dan monmap (monitor map)  ceph auth get mon.","title":"Cara Membuat Ulang Ceph Monitor Yang Rusak [Manual Deployment]"},{"content":"Panduan Parameter yang bisa digunakan  -d true jika direktori ada -e true jika file ada -v true jika variabel memiliki nilai  Contoh 1: Periksa Direktori  Script  #!/bin/bash if [[ -d halo ]]; then echo \u0026#34;Direktori ada\u0026#34; else echo \u0026#34;Direktori tidak ada\u0026#34; fi Contoh 2: Periksa File  Script  #!/bin/bash if [[ -e halo.txt ]]; then echo \u0026#34;File ada\u0026#34; else echo \u0026#34;File tidak ada\u0026#34; fi Contoh 3: Periksa Variabel  Script  #!/bin/bash  export VAR1=\u0026#34;Halo Dunia\u0026#34; if [[ -v VAR1 ]]; then echo \u0026#34;Variabel ada\u0026#34; echo $VAR1 else echo \u0026#34;Variabel tidak ada\u0026#34; echo $VAR1 fi Referensi  GNU Org - Bash Manual  ","permalink":"https://blog.ajiarya.id/posts/bash/cara-melakukan-percabangan-pada-bash-bagian-2/","summary":"Panduan Parameter yang bisa digunakan  -d true jika direktori ada -e true jika file ada -v true jika variabel memiliki nilai  Contoh 1: Periksa Direktori  Script  #!/bin/bash if [[ -d halo ]]; then echo \u0026#34;Direktori ada\u0026#34; else echo \u0026#34;Direktori tidak ada\u0026#34; fi Contoh 2: Periksa File  Script  #!/bin/bash if [[ -e halo.txt ]]; then echo \u0026#34;File ada\u0026#34; else echo \u0026#34;File tidak ada\u0026#34; fi Contoh 3: Periksa Variabel  Script  #!","title":"Cara Melakukan Percabangan Dasar Bash - Bagian 2 [Periksa Direktori, File, \u0026 Variabel]"},{"content":"Prasyarat  Podman  Panduan Sebagai contoh kita akan membuat container nginx pada non-root user bernama student\n Buat direktori untuk menyimpan konten  mkdir website echo \u0026#39;\u0026lt;h1\u0026gt;Halo Dunia!\u0026lt;/h1\u0026gt;\u0026#39; \u0026gt; website/index.html Buat container nginx  podman run -d --name websiteku -p 8080:80 -v ~/website:/usr/share/nginx/html:Z nginx Verifikasi container  podman ps curl localhost:8080  Contoh output  [student@podman-host ~]$ podman ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 109ed419f29e docker.io/library/nginx:latest nginx -g daemon o... About a minute ago Up About a minute ago 0.0.0.0:8080-\u0026gt;80/tcp websiteku [student@podman-host ~]$ curl localhost:8080 \u0026lt;h1\u0026gt;Halo Dunia!\u0026lt;/h1\u0026gt; Buat direktori untuk menyimpan service systemd container  mkdir -p ~/.config/systemd/user/ Generate service systemd  cd ~/.config/systemd/user/ podman generate systemd --name websiteku --files --new Hentikan dan hapus container yang telah dibuat  podman stop websiteku podman rm websiteku Jalankan dan enable service container-websiteku  systemctl --user daemon-reload systemctl --user enable --now container-websiteku Aktifkan linger pada user student  # Jalankan sebagai user student loginctl enable-linger  Catatan!\nlinger berfungsi agar systemd service user yang telah dienable dapat berjalan saat system boot\n ","permalink":"https://blog.ajiarya.id/posts/podman/cara-membuat-container-podman-bisa-dikelola-sebagai-service/","summary":"Prasyarat  Podman  Panduan Sebagai contoh kita akan membuat container nginx pada non-root user bernama student\n Buat direktori untuk menyimpan konten  mkdir website echo \u0026#39;\u0026lt;h1\u0026gt;Halo Dunia!\u0026lt;/h1\u0026gt;\u0026#39; \u0026gt; website/index.html Buat container nginx  podman run -d --name websiteku -p 8080:80 -v ~/website:/usr/share/nginx/html:Z nginx Verifikasi container  podman ps curl localhost:8080  Contoh output  [student@podman-host ~]$ podman ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 109ed419f29e docker.io/library/nginx:latest nginx -g daemon o.","title":"Cara Membuat Rootless Container Podman Bisa Dikelola Sebagai Service"},{"content":"Pendahuluan Remote Port Forwarding adalah salah satu cara agar kita bisa menyediakan service atau port yang ada pada localhost agar bisa digunakan oleh remote host.\nSebagai contoh kita akan menggunakan squid3 yang tersedia pada localhost yang kemudian akan diakses oleh remote host\nPanduan ssh -R [remote_address_bind]:[remote_port_bind]:[local_address_bind]:[local_port_bind] \u0026lt;remote_host\u0026gt; Contoh laptopku menjalankan proxy server yang tersedia pada alamat 0.0.0.0:3128 lalu saya ingin mencoba mengakses proxy server tersebut dari home-lab pada alamat 127.0.0.1:8080\n Proxy Server Port  laptopku :: ~ » ss -plunt Netid State Recv-Q Send-Q Local Address:Port Peer Address:Port Process tcp LISTEN 0 4096 *:3128 *:* Jalankan perintah ssh remote forward  ssh -R 8080:localhost:3128 student@home-lab Verifikasi port  Pastikan ada port 8080 yang listen dengan proses sshd\nstudent@home-lab:~$ sudo ss -plunt Netid State Recv-Q Send-Q Local Address:Port Peer Address:Port Process tcp LISTEN 0 128 127.0.0.1:8080 0.0.0.0:* users:((\u0026#34;sshd\u0026#34;,pid=1740,fd=11)) tcp LISTEN 0 128 [::1]:8080 [::]:* users:((\u0026#34;sshd\u0026#34;,pid=1740,fd=10)) Coba gunakan proxy  export http_proxy=localhost:8080 export https_proxy=localhost:8080 curl -v google.com ","permalink":"https://blog.ajiarya.id/posts/linux/cara-ssh-remote-forwarding-port/","summary":"Pendahuluan Remote Port Forwarding adalah salah satu cara agar kita bisa menyediakan service atau port yang ada pada localhost agar bisa digunakan oleh remote host.\nSebagai contoh kita akan menggunakan squid3 yang tersedia pada localhost yang kemudian akan diakses oleh remote host\nPanduan ssh -R [remote_address_bind]:[remote_port_bind]:[local_address_bind]:[local_port_bind] \u0026lt;remote_host\u0026gt; Contoh laptopku menjalankan proxy server yang tersedia pada alamat 0.0.0.0:3128 lalu saya ingin mencoba mengakses proxy server tersebut dari home-lab pada alamat 127.0.0.1:8080","title":"Cara Remote Port Forwarding SSH"},{"content":"Prasyarat  Minimal 3 Nodes dengan 3 disk tambahan  Panduan  Login sebagai root  sudo -i Tambahkan host pada file /etc/hosts  vim /etc/hosts  /etc/hosts  127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4 ::1 localhost localhost.localdomain localhost6 localhost6.localdomain6 192.168.10.201 rocky-ceph-node01 192.168.10.202 rocky-ceph-node02 192.168.10.203 rocky-ceph-node03 Update dan Upgrade package  dnf update; dnf upgrade Install python3, lvm2, dan podman  dnf install -y python3 lvm2 podman Unduh cephadm pada node pertama  curl --silent --remote-name --location https://github.com/ceph/ceph/raw/pacific/src/cephadm/cephadm chmod +x cephadm Pilih versi rilis lalu install cephadm dan ceph-common  ./cephadm add-repo --release octopus ./cephadm install # Install ceph-common (Agar bisa menjalankan: perintah ceph, rbd) dnf install -y ceph-common # Verifikasi which cephadm Bootstrap monitor pada node pertama  cephadm bootstrap --mon-ip 192.168.10.201 Tambahkan ssh key cephadm ke semua node  # Pada node pertama cat /etc/ceph/ceph.pub # Pada semua node # Salin dan tempel konten ceph.pub ke ~/.ssh/authorized_keys vim ~/.ssh/authorized_keys Tambahkan node lainnya sebagai host ceph  # List host ceph orch host ls # Perbarui alamat dan tambahkan host label pada node pertama ceph orch host set-addr rocky-ceph-node01 192.168.10.201 ceph orch host label add rocky-ceph-node01 _admin # Tambahkan label _admin pada node lainnya ceph orch host add rocky-ceph-node02 192.168.10.202 _admin ceph orch host add rocky-ceph-node03 192.168.10.203 _admin # Tambahkan label osd-node pada semua node ceph orch host label add rocky-ceph-node01 osd-node ceph orch host label add rocky-ceph-node02 osd-node ceph orch host label add rocky-ceph-node03 osd-node # Verifikasi host ceph orch host ls  Catatan!\nlabel _admin akan membuat host bisa menjalankan cephadm shell\n Tambahkan ceph-mon \u0026amp; ceph-mgr ke node lainnya  ceph orch apply mon --placement=\u0026#34;rocky-ceph-node01,rocky-ceph-node02,rocky-ceph-node03\u0026#34; ceph orch apply mgr --placement=\u0026#34;rocky-ceph-node01,rocky-ceph-node02,rocky-ceph-node03\u0026#34; # Verifikasi ceph orch ps ceph -s Deploy ceph-osd pada semua node  vim deploy-osd-node.yaml  deploy-osd-node.yaml  service_type: osd service_id: demo-osd # service_id bisa diisi secara bebas placement: label: \u0026#34;osd-node\u0026#34; data_devices: paths: - /dev/vdb - /dev/vdc - /dev/vdd Terapkan yaml yang sudah dibuat\nceph orch apply -i deploy-osd-node.yaml Verifikasi status Ceph Cluster  ceph -s ceph osd tree Referensi  Dokumentasi Ceph - cephadm  ","permalink":"https://blog.ajiarya.id/posts/ceph/cara-deploy-ceph-menggunakan-cephadm/","summary":"Prasyarat  Minimal 3 Nodes dengan 3 disk tambahan  Panduan  Login sebagai root  sudo -i Tambahkan host pada file /etc/hosts  vim /etc/hosts  /etc/hosts  127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4 ::1 localhost localhost.localdomain localhost6 localhost6.localdomain6 192.168.10.201 rocky-ceph-node01 192.168.10.202 rocky-ceph-node02 192.168.10.203 rocky-ceph-node03 Update dan Upgrade package  dnf update; dnf upgrade Install python3, lvm2, dan podman  dnf install -y python3 lvm2 podman Unduh cephadm pada node pertama  curl --silent --remote-name --location https://github.","title":"Cara Deploy Ceph Cluster Menggunakan cephadm Pada Rocky Linux 8"},{"content":"Panduan  Periksa versi ceph yang sedang digunakan  ceph versions Lihat rilis ceph dan baca catatan rilis (release note)  Kunjungi Ceph Release\nLakukan upgrade  ceph orch upgrade start --ceph-version \u0026lt;versi_ceph\u0026gt; # Contoh # ceph orch upgrade start --ceph-version 16.2.5 Pantau proses upgrade  Gunakan perintah-perintah dibawah untuk melakukan pengecekan pada proses upgrade\nceph orch upgrade status ceph -W cephadm ceph orch ps ceph versions ceph versions saat proses upgrade sedang berlangsung\nVerifikasi upgrade  ceph -s ceph versions ceph versions saat proses upgrade selesai\nReferensi  Ceph Release cephadm upgrade guide  ","permalink":"https://blog.ajiarya.id/posts/ceph/cara-upgrade-cluster-cephadm/","summary":"Panduan  Periksa versi ceph yang sedang digunakan  ceph versions Lihat rilis ceph dan baca catatan rilis (release note)  Kunjungi Ceph Release\nLakukan upgrade  ceph orch upgrade start --ceph-version \u0026lt;versi_ceph\u0026gt; # Contoh # ceph orch upgrade start --ceph-version 16.2.5 Pantau proses upgrade  Gunakan perintah-perintah dibawah untuk melakukan pengecekan pada proses upgrade\nceph orch upgrade status ceph -W cephadm ceph orch ps ceph versions ceph versions saat proses upgrade sedang berlangsung","title":"Cara Upgrade Cluster Ceph Yang Menggunakan cephadm"},{"content":"Contoh SSH Config host \u0026lt;nama_pintas\u0026gt; # Nama pintasan hostname \u0026lt;alamat_tujuan\u0026gt; # Bisa IP Address ataupun domain user \u0026lt;user\u0026gt; # Nama user untuk remote port \u0026lt;port\u0026gt; # Port yang digunakan untuk SSH Panduan  Buat file ssh config  vim ~/.ssh/config  ~/.ssh/config  host home-lab hostname 1.tcp.jp.ngrok.io user ubuntu port 2222 Lakukan SSH  ssh home-lab  Catatan\nCara manual jika tanpa menggunakan ssh config: ssh ubuntu@1.tcp.jp.ngrok.io -p2222\n ","permalink":"https://blog.ajiarya.id/posts/linux/cara-konfigurasi-ssh-config/","summary":"Contoh SSH Config host \u0026lt;nama_pintas\u0026gt; # Nama pintasan hostname \u0026lt;alamat_tujuan\u0026gt; # Bisa IP Address ataupun domain user \u0026lt;user\u0026gt; # Nama user untuk remote port \u0026lt;port\u0026gt; # Port yang digunakan untuk SSH Panduan  Buat file ssh config  vim ~/.ssh/config  ~/.ssh/config  host home-lab hostname 1.tcp.jp.ngrok.io user ubuntu port 2222 Lakukan SSH  ssh home-lab  Catatan\nCara manual jika tanpa menggunakan ssh config: ssh ubuntu@1.tcp.jp.ngrok.io -p2222\n ","title":"Cara Konfigurasi SSH Config"},{"content":"Panduan  Tambahkan host pada file /etc/hosts  vim /etc/hosts  /etc/hosts  127.0.0.1 localhost 192.168.10.71 elasticsearch-node01 192.168.10.72 elasticsearch-node02 192.168.10.73 elasticsearch-node03 Unduh dan install package elasticsearch  wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.14.0-amd64.deb dpkg -i elasticsearch-7.14.0-amd64.deb Konfigurasi elasticsearch   /etc/elasticsearch/elasticsearch.yml  cluster.name: elasticsearch-demo node.name: elasticsearch-node01 path.data: /var/lib/elasticsearch path.logs: /var/log/elasticsearch network.host: 0.0.0.0 http.port: 9200 cluster.initial_master_nodes: [\u0026#34;elasticsearch-node01\u0026#34;, \u0026#34;elasticsearch-node02\u0026#34;, \u0026#34;elasticsearch-node03\u0026#34;] node.master: true node.data: true discovery.zen.ping.unicast.hosts: [\u0026#34;192.168.10.71\u0026#34; , \u0026#34;192.168.10.72\u0026#34;, \u0026#34;192.168.10.73\u0026#34;] discovery.zen.minimum_master_nodes: 2 xpack.security.enabled: true xpack.security.transport.ssl.enabled: true xpack.security.transport.ssl.verification_mode: certificate xpack.security.transport.ssl.keystore.path: /etc/elasticsearch/elastic-certificates.p12 xpack.security.transport.ssl.truststore.path: /etc/elasticsearch/elastic-certificates.p12 Buat sertifikat SSL dari salah satu node. Sebagai contoh dari elasticsearch-node01  /usr/share/elasticsearch/bin/elasticsearch-certutil ca /usr/share/elasticsearch/bin/elasticsearch-certutil cert --ca elastic-stack-ca.p12 mv /usr/share/elasticsearch/elastic-certificates.p12 /etc/elasticsearch/elastic-certificates.p12 chown elasticsearch:elasticsearch /etc/elasticsearch/elastic-certificates.p12 Distribusikan sertifikat ke semua node  scp /etc/elasticsearch/elastic-certificates.p12 \\  elasticsearch-node02:/etc/elasticsearch/elastic-certificates.p12 scp /etc/elasticsearch/elastic-certificates.p12 \\  elasticsearch-node03:/etc/elasticsearch/elastic-certificates.p12 ssh elasticsearch-node02 chown elasticsearch:elasticsearch /etc/elasticsearch/elastic-certificates.p12 ssh elasticsearch-node03 chown elasticsearch:elasticsearch /etc/elasticsearch/elastic-certificates.p12 Jalankan dan enable service elasticsearch  systemctl enable --now elasticsearch Setup password elasticsearch dari salah satu node  /usr/share/elasticsearch/bin/elasticsearch-setup-passwords auto  Catatan\nJangan lupa menyimpan password!\n Verifikasi  curl -u elastic:$ELASTIC_PASSWORD http://192.168.10.71:9200/_cluster/health?pretty ","permalink":"https://blog.ajiarya.id/posts/elk/elasticsearch/cara-membuat-cluster-elasticsearch-7/","summary":"Panduan  Tambahkan host pada file /etc/hosts  vim /etc/hosts  /etc/hosts  127.0.0.1 localhost 192.168.10.71 elasticsearch-node01 192.168.10.72 elasticsearch-node02 192.168.10.73 elasticsearch-node03 Unduh dan install package elasticsearch  wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.14.0-amd64.deb dpkg -i elasticsearch-7.14.0-amd64.deb Konfigurasi elasticsearch   /etc/elasticsearch/elasticsearch.yml  cluster.name: elasticsearch-demo node.name: elasticsearch-node01 path.data: /var/lib/elasticsearch path.logs: /var/log/elasticsearch network.host: 0.0.0.0 http.port: 9200 cluster.initial_master_nodes: [\u0026#34;elasticsearch-node01\u0026#34;, \u0026#34;elasticsearch-node02\u0026#34;, \u0026#34;elasticsearch-node03\u0026#34;] node.master: true node.data: true discovery.zen.ping.unicast.hosts: [\u0026#34;192.168.10.71\u0026#34; , \u0026#34;192.168.10.72\u0026#34;, \u0026#34;192.168.10.73\u0026#34;] discovery.zen.minimum_master_nodes: 2 xpack.security.enabled: true xpack.security.transport.ssl.enabled: true xpack.security.transport.ssl.verification_mode: certificate xpack.","title":"Cara Membuat Cluster Elasticsearch 7 beserta module security xpack [Debian/Ubuntu]"},{"content":"Prasyarat  Terraform python-tfgen Storage Pool (Baca disini untuk cara membuat Storage Pool)  Panduan  Buat yaml dengan kind: image lalu isikan dengan daftar image yang diinginkan   image.yaml  kind: image uri: \u0026quot;qemu:///system\u0026quot; spec: - name: debian-bullseye url: \u0026quot;https://cdimage.debian.org/images/cloud/bullseye/latest/debian-11-genericcloud-amd64.qcow2\u0026quot; pool: images - name: ubuntu-focal url: \u0026quot;https://cloud-images.ubuntu.com/focal/current/focal-server-cloudimg-amd64.img\u0026quot; pool: images Buat HCL berdasarkan yaml yang telah dibuat  ./tfgen.py -f image.yaml -o image  image/main.tf (Hasil tfgen)  terraform { required_providers { libvirt = { source = \u0026#34;dmacvicar/libvirt\u0026#34; } } } provider \u0026#34;libvirt\u0026#34; { uri = \u0026#34;qemu:///system\u0026#34; } resource \u0026#34;libvirt_volume\u0026#34; \u0026#34;debian-bullseye\u0026#34; { name = \u0026#34;debian-bullseye\u0026#34; source = \u0026#34;https://cdimage.debian.org/images/cloud/bullseye/latest/debian-11-genericcloud-amd64.qcow2\u0026#34; pool = \u0026#34;images\u0026#34; } resource \u0026#34;libvirt_volume\u0026#34; \u0026#34;ubuntu-focal\u0026#34; { name = \u0026#34;ubuntu-focal\u0026#34; source = \u0026#34;https://cloud-images.ubuntu.com/focal/current/focal-server-cloudimg-amd64.img\u0026#34; pool = \u0026#34;images\u0026#34; } Berpindah ke direktori yang dihasilkan python-tfgen  cd image/ Jalankan inisiasi terraform  terraform init Jalankan terraform untuk membuat image  terraform apply  Tips!\nGunakan terraform apply -auto-approve untuk melewati prompt persetujuan.\n Verifikasi image yang telah terbuat  virsh vol-list images Panduan Menghapus terraform destroy ","permalink":"https://blog.ajiarya.id/posts/python-tfgen/cara-membuat-image-dengan-python-tfgen/","summary":"Prasyarat  Terraform python-tfgen Storage Pool (Baca disini untuk cara membuat Storage Pool)  Panduan  Buat yaml dengan kind: image lalu isikan dengan daftar image yang diinginkan   image.yaml  kind: image uri: \u0026quot;qemu:///system\u0026quot; spec: - name: debian-bullseye url: \u0026quot;https://cdimage.debian.org/images/cloud/bullseye/latest/debian-11-genericcloud-amd64.qcow2\u0026quot; pool: images - name: ubuntu-focal url: \u0026quot;https://cloud-images.ubuntu.com/focal/current/focal-server-cloudimg-amd64.img\u0026quot; pool: images Buat HCL berdasarkan yaml yang telah dibuat  ./tfgen.py -f image.yaml -o image  image/main.tf (Hasil tfgen)  terraform { required_providers { libvirt = { source = \u0026#34;dmacvicar/libvirt\u0026#34; } } } provider \u0026#34;libvirt\u0026#34; { uri = \u0026#34;qemu:///system\u0026#34; } resource \u0026#34;libvirt_volume\u0026#34; \u0026#34;debian-bullseye\u0026#34; { name = \u0026#34;debian-bullseye\u0026#34; source = \u0026#34;https://cdimage.","title":"Cara Membuat Image Libvirt Menggunakan python-tfgen"},{"content":"Prasyarat  Terraform python-tfgen  Panduan  Buat yaml dengan kind: network lalu isikan dengan daftar network yang diinginkan   network.yaml  kind: network uri: \u0026quot;qemu:///system\u0026quot; spec: - name: home-lab-network mode: nat bridge: home-lab-bridge dhcp: true addresses4: \u0026quot;192.168.100.0/24\u0026quot; Buat HCL berdasarkan yaml yang telah dibuat  ./tfgen.py -f network.yaml -o network  image/main.tf (Hasil tfgen)  terraform { required_providers { libvirt = { source = \u0026#34;dmacvicar/libvirt\u0026#34; } } } provider \u0026#34;libvirt\u0026#34; { uri = \u0026#34;qemu:///system\u0026#34; } resource \u0026#34;libvirt_network\u0026#34; \u0026#34;home-lab-network\u0026#34; { name = \u0026#34;home-lab-network\u0026#34; mode = \u0026#34;nat\u0026#34; bridge = \u0026#34;home-lab-bridge\u0026#34; mtu = 1500 autostart = true addresses = [\u0026#34;192.168.100.0/24\u0026#34;] dhcp { enabled = true } } Berpindah ke direktori yang dihasilkan python-tfgen  cd network/ Jalankan inisiasi terraform  terraform init Jalankan terraform untuk membuat network  terraform apply  Tips!\nGunakan terraform apply -auto-approve untuk melewati prompt persetujuan.\n Verifikasi network yang telah terbuat  virsh net-list Panduan Menghapus terraform destroy ","permalink":"https://blog.ajiarya.id/posts/python-tfgen/cara-membuat-network-dengan-python-tfgen/","summary":"Prasyarat  Terraform python-tfgen  Panduan  Buat yaml dengan kind: network lalu isikan dengan daftar network yang diinginkan   network.yaml  kind: network uri: \u0026quot;qemu:///system\u0026quot; spec: - name: home-lab-network mode: nat bridge: home-lab-bridge dhcp: true addresses4: \u0026quot;192.168.100.0/24\u0026quot; Buat HCL berdasarkan yaml yang telah dibuat  ./tfgen.py -f network.yaml -o network  image/main.tf (Hasil tfgen)  terraform { required_providers { libvirt = { source = \u0026#34;dmacvicar/libvirt\u0026#34; } } } provider \u0026#34;libvirt\u0026#34; { uri = \u0026#34;qemu:///system\u0026#34; } resource \u0026#34;libvirt_network\u0026#34; \u0026#34;home-lab-network\u0026#34; { name = \u0026#34;home-lab-network\u0026#34; mode = \u0026#34;nat\u0026#34; bridge = \u0026#34;home-lab-bridge\u0026#34; mtu = 1500 autostart = true addresses = [\u0026#34;192.","title":"Cara Membuat Network Libvirt Menggunakan python-tfgen"},{"content":"Prasyarat  Terraform python-tfgen  Panduan  Buat direktori untuk penyimpanan data  mkdir -p /data/images mkdir -p /data/vms  Tips!\nMount direktori ke drive dengan kapasitas besar atau kecepatan tinggi.\n Buat yaml dengan kind: pool   pool.yaml  kind: pool uri: \u0026quot;qemu:///system\u0026quot; spec: - name: images path: /data/images - name: vms path: /data/vms Buat HCL berdasarkan yaml yang telah dibuat  ./tfgen.py -f pool.yaml -o pool  pool/main.tf (Hasil tfgen)  terraform { required_providers { libvirt = { source = \u0026#34;dmacvicar/libvirt\u0026#34; } } } provider \u0026#34;libvirt\u0026#34; { uri = \u0026#34;qemu:///system\u0026#34; } resource \u0026#34;libvirt_pool\u0026#34; \u0026#34;images\u0026#34; { name = \u0026#34;images\u0026#34; type = \u0026#34;dir\u0026#34; path = \u0026#34;/data/images\u0026#34; } resource \u0026#34;libvirt_pool\u0026#34; \u0026#34;vms\u0026#34; { name = \u0026#34;vms\u0026#34; type = \u0026#34;dir\u0026#34; path = \u0026#34;/data/vms\u0026#34; } Berpindah ke direktori yang dihasilkan python-tfgen  cd pool/ Jalankan inisiasi terraform  terraform init Jalankan terraform untuk membuat storage pool  terraform apply  Tips!\nGunakan terraform apply -auto-approve untuk melewati prompt persetujuan.\n Verifikasi storage pool yang telah terbuat  virsh pool-list Panduan Menghapus terraform destroy ","permalink":"https://blog.ajiarya.id/posts/python-tfgen/cara-membuat-pool-dengan-python-tfgen/","summary":"Prasyarat  Terraform python-tfgen  Panduan  Buat direktori untuk penyimpanan data  mkdir -p /data/images mkdir -p /data/vms  Tips!\nMount direktori ke drive dengan kapasitas besar atau kecepatan tinggi.\n Buat yaml dengan kind: pool   pool.yaml  kind: pool uri: \u0026quot;qemu:///system\u0026quot; spec: - name: images path: /data/images - name: vms path: /data/vms Buat HCL berdasarkan yaml yang telah dibuat  ./tfgen.py -f pool.yaml -o pool  pool/main.","title":"Cara Membuat Storage Pool Libvirt Menggunakan python-tfgen"},{"content":"Prasyarat  Terraform python-tfgen Storage Pool (Baca disini untuk cara membuat Storage Pool) Image (Baca disini untuk cara membuat Image) Network (Baca disini untuk cara membuat Network)  Panduan  Buat yaml dengan kind: vm lalu isikan dengan daftar image yang diinginkan   image.yaml  kind: vm uri: \u0026quot;qemu:///system\u0026quot; spec: - name: vm1 hostname: vm1 nested_enabled: true os: ubuntu vcpus: 2 memory: 2G console: vnc cloud_data: users: - name: root public_key: - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDBpZKhFbJ9r/gEef9KYo13VoEgBOkyMw06aOCzltT8wsjYPRMYzb2cbuiJBqJq5sXBrpaunTh5M7F9TyHQxhZnGgGVdutX7Q3RTOxWCHNMOxnrN7gQAHQ0kdqegrvUKNB7ym/2G3baz7pmxXf+I1Tw5AChJ8kIBDB9DnzVdtnMYxT0nivY1f6gSR2cgStEsuSbZDlBQ5Lt6W+sUyNkffddpZl0+QHAFM6UFTJNcuwMBqQG75/ZcwqLkQKU6pg0kZnDgmElXtJUKu141PJ0EbhkeOsh+zjYuwScotQYbN/MLN8fAhlQLFOwX/g3o6M9A49jyHVglQCxP2mI+d3Fra+ykrcQ7eTkPncwCCEmZYLjonQl3qhHHcbM7He1kOnORdVC/f/Uz4VsX+cMn5WGs1P+qyZKRAvw6egqWAkS0GPfEjdkhqLQ4WU9mC26aaaQfBqmMos1XZ/nRTuGAc6qb0SOkz5XN0g5ISNmCUpsnxO4YocmWP/sNDRPWBIzcycZE6s= student@home-lab base_image: storage_pool: images name: ubuntu-focal disks: storage_pool: vms disks: - name: vm1-vda.qcow2 size: 10G networks: - name: home-lab-network address: 192.168.100.10/24 mtu: 1500 gateway: 192.168.10.1 dns: [8.8.8.8, 8.8.4.4] Buat HCL berdasarkan yaml yang telah dibuat  ./tfgen.py -f vm.yaml -o vm Berpindah ke direktori yang dihasilkan python-tfgen  cd vm/ Jalankan inisiasi terraform  terraform init Jalankan terraform untuk membuat VM  terraform apply  Tips!\nGunakan terraform apply -auto-approve untuk melewati prompt persetujuan.\n Verifikasi VM yang telah terbuat  virsh list SSH VM  ssh root@192.168.100.10 Panduan Menghapus terraform destroy ","permalink":"https://blog.ajiarya.id/posts/python-tfgen/cara-membuat-vm-dengan-python-tfgen/","summary":"Prasyarat  Terraform python-tfgen Storage Pool (Baca disini untuk cara membuat Storage Pool) Image (Baca disini untuk cara membuat Image) Network (Baca disini untuk cara membuat Network)  Panduan  Buat yaml dengan kind: vm lalu isikan dengan daftar image yang diinginkan   image.yaml  kind: vm uri: \u0026quot;qemu:///system\u0026quot; spec: - name: vm1 hostname: vm1 nested_enabled: true os: ubuntu vcpus: 2 memory: 2G console: vnc cloud_data: users: - name: root public_key: - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDBpZKhFbJ9r/gEef9KYo13VoEgBOkyMw06aOCzltT8wsjYPRMYzb2cbuiJBqJq5sXBrpaunTh5M7F9TyHQxhZnGgGVdutX7Q3RTOxWCHNMOxnrN7gQAHQ0kdqegrvUKNB7ym/2G3baz7pmxXf+I1Tw5AChJ8kIBDB9DnzVdtnMYxT0nivY1f6gSR2cgStEsuSbZDlBQ5Lt6W+sUyNkffddpZl0+QHAFM6UFTJNcuwMBqQG75/ZcwqLkQKU6pg0kZnDgmElXtJUKu141PJ0EbhkeOsh+zjYuwScotQYbN/MLN8fAhlQLFOwX/g3o6M9A49jyHVglQCxP2mI+d3Fra+ykrcQ7eTkPncwCCEmZYLjonQl3qhHHcbM7He1kOnORdVC/f/Uz4VsX+cMn5WGs1P+qyZKRAvw6egqWAkS0GPfEjdkhqLQ4WU9mC26aaaQfBqmMos1XZ/nRTuGAc6qb0SOkz5XN0g5ISNmCUpsnxO4YocmWP/sNDRPWBIzcycZE6s= student@home-lab base_image: storage_pool: images name: ubuntu-focal disks: storage_pool: vms disks: - name: vm1-vda.","title":"Cara Membuat VM Libvirt Menggunakan python-tfgen"},{"content":"Pendahuluan Apa yang membuat kita malas untuk belajar atau mempraktikan ilmu IT? Membuat Lab! Tenang semua itu bisa dibuat tidak membosankan dan bisa dilakukan dengan cepat.\nSaya menggunakan KVM Host untuk melakukan riset ataupun belajar hal baru, sehingga intensitas saya dalam membuat VM itu bisa dibilang sangat sering dan saya rasa membuat VM adalah hal membosankan yang berulang-ulang sehingga saya membuat sebuah tools agar mempermudah dan mempercepat pembuatan VM.\nPanduan  Unduh Terraform  wget https://releases.hashicorp.com/terraform/1.0.4/terraform_1.0.4_linux_amd64.zip Install Unzip  # Debian/Ubuntu sudo apt install -y unzip # CentOS / RHEL / Rocky sudo dnf install -y unzip ## atau ## sudo yum install -y unzip Ekstrak file zip dan pindahkan binary file terraform  unzip terraform_1.0.4_linux_amd64.zip mv terraform /usr/local/bin Daftar Panduan python-tfgen Blog  Pool Image Network VM  Sumber Kode GitHub python-tfgen\n","permalink":"https://blog.ajiarya.id/posts/linux/cara-menggunakan-terraform-libvirt-provider/","summary":"Pendahuluan Apa yang membuat kita malas untuk belajar atau mempraktikan ilmu IT? Membuat Lab! Tenang semua itu bisa dibuat tidak membosankan dan bisa dilakukan dengan cepat.\nSaya menggunakan KVM Host untuk melakukan riset ataupun belajar hal baru, sehingga intensitas saya dalam membuat VM itu bisa dibilang sangat sering dan saya rasa membuat VM adalah hal membosankan yang berulang-ulang sehingga saya membuat sebuah tools agar mempermudah dan mempercepat pembuatan VM.\nPanduan  Unduh Terraform  wget https://releases.","title":"Cara Menggunakan Terraform Libvirt Provider Dengan Bantuan python-tfgen"},{"content":"Referensi Sewa Server  Hetzner Robot - Server Auction  Prasyarat  Server Sistem Operasi CentOS 8 atau Rocky 8 terinstall  Panduan  Update \u0026amp; Upgrade Package  sudo dnf update sudo dnf upgrade Install grup package untuk host virtualisasi  sudo dnf groupinstall -y \u0026#34;Virtualization Host\u0026#34; Jalankan dan enable servis libvirt  sudo systemctl enable --now libvirtd Install cockpit plugin untuk VM  sudo dnf install -y cockpit-machines Jalankan dan enable servis cockpit  sudo systemctl enable --now cockpit.socket Buka port tcp/9090 firewall  sudo firewall-cmd --permanent --zone=public --add-service=cockpit sudo firewall-cmd --reload Referensi  Cockpit Project - CentOS  Baca juga  Cara membuat Guest KVM dengan menggunakan Terraform Libvirt Provider  ","permalink":"https://blog.ajiarya.id/posts/linux/cara-menyiapkan-home-lab-centos-rocky/","summary":"Referensi Sewa Server  Hetzner Robot - Server Auction  Prasyarat  Server Sistem Operasi CentOS 8 atau Rocky 8 terinstall  Panduan  Update \u0026amp; Upgrade Package  sudo dnf update sudo dnf upgrade Install grup package untuk host virtualisasi  sudo dnf groupinstall -y \u0026#34;Virtualization Host\u0026#34; Jalankan dan enable servis libvirt  sudo systemctl enable --now libvirtd Install cockpit plugin untuk VM  sudo dnf install -y cockpit-machines Jalankan dan enable servis cockpit  sudo systemctl enable --now cockpit.","title":"Cara Menyiapkan Home Lab Linux [CentOS/Rocky 8]"},{"content":"Debian Cockpit\nUbuntu Cockpit\nReferensi Sewa Server  Hetzner Robot - Server Auction  Prasyarat  Server Sistem Operasi Debian 11 (Bullseye) atau Ubuntu 20.04 (Focal) terinstall  Panduan  Update \u0026amp; Upgrade package  sudo apt update sudo apt upgrade Install package-package untuk host virtualisasi  sudo apt install cockpit cockpit-machines qemu-system-x86 libvirt-daemon-system libvirt-clients bridge-utils Jalankan dan enable servis libvirt  sudo systemctl enable --now libvirtd Jalankan dan enable servis cockpit  sudo systemctl enable --now cockpit.socket Referensi  Cockpit Project - Debian Cockpit Project - Ubuntu  Baca juga  Cara membuat Guest KVM dengan menggunakan Terraform Libvirt Provider  ","permalink":"https://blog.ajiarya.id/posts/linux/cara-menyiapkan-home-lab-debian-ubuntu/","summary":"Debian Cockpit\nUbuntu Cockpit\nReferensi Sewa Server  Hetzner Robot - Server Auction  Prasyarat  Server Sistem Operasi Debian 11 (Bullseye) atau Ubuntu 20.04 (Focal) terinstall  Panduan  Update \u0026amp; Upgrade package  sudo apt update sudo apt upgrade Install package-package untuk host virtualisasi  sudo apt install cockpit cockpit-machines qemu-system-x86 libvirt-daemon-system libvirt-clients bridge-utils Jalankan dan enable servis libvirt  sudo systemctl enable --now libvirtd Jalankan dan enable servis cockpit  sudo systemctl enable --now cockpit.","title":"Cara Menyiapkan Home Lab Linux [Debian Bullseye/Ubuntu Focal]"},{"content":"Panduan  Gunakan kata kunci set pada bash dengan opsi -v  #!/bin/bash  # Tambahkan set -v pada script set -v Contoh  read.sh  #!/bin/bash  # Baris berikut akan membuat bash script menjadi verbose set -v echo \u0026#34;Siapa namamu?\u0026#34; read NAMA echo \u0026#34;Berapa umurmu? (Dalam Tahun)\u0026#34; read UMUR # tampilkan nama echo \u0026#34;${NAMA}\u0026#34; # tampilkan umur echho \u0026#34;${UMUR}Tahun\u0026#34; # Sapa nama echo \u0026#34;Halo, ${NAMA}!\u0026#34; Ketika menjalankan read.sh\n[student@debug-bash bash]$ bash read.sh echo \u0026#34;Siapa namamu?\u0026#34; Siapa namamu? read NAMA Dumbledore \u0026lt;- ini input echo \u0026#34;Berapa umurmu? (Dalam Tahun)\u0026#34; Berapa umurmu? (Dalam Tahun) read UMUR 150 \u0026lt;- ini input # tampilkan nama echo \u0026#34;${NAMA}\u0026#34; Dumbledore # tampilkan umur echho \u0026#34;${UMUR}Tahun\u0026#34; \u0026lt;- Ini penyebab error pada script (typo) read.sh: line 16: echho: command not found \u0026lt;- Ini pesan error ketika menjalankan script # Sapa nama echo \u0026#34;Halo, ${NAMA}!\u0026#34; Halo, Dumbledore! ","permalink":"https://blog.ajiarya.id/posts/bash/cara-debug-bash/","summary":"Panduan  Gunakan kata kunci set pada bash dengan opsi -v  #!/bin/bash  # Tambahkan set -v pada script set -v Contoh  read.sh  #!/bin/bash  # Baris berikut akan membuat bash script menjadi verbose set -v echo \u0026#34;Siapa namamu?\u0026#34; read NAMA echo \u0026#34;Berapa umurmu? (Dalam Tahun)\u0026#34; read UMUR # tampilkan nama echo \u0026#34;${NAMA}\u0026#34; # tampilkan umur echho \u0026#34;${UMUR}Tahun\u0026#34; # Sapa nama echo \u0026#34;Halo, ${NAMA}!\u0026#34; Ketika menjalankan read.sh","title":"Cara Debug Bash Script"},{"content":"Pendahuluan Jika kita ingin melakukan pengecekan terhadap suatu variabel maka kita membutuhkan yang namanya percabangan sebagai contoh, jika (if) variabel umur kurang dari 5 maka sama dengan balita, untuk melakukan hal tersebut berikut contoh singkatnya\n balita.sh  #!/bin/bash  export umur=4 # Cara 1 echo \u0026#34;Menjalankan cara 1\u0026#34; if [[ umur -lt 5 ]]; then echo \u0026#34;Kamu balita!\u0026#34; fi # Cara 2 echo \u0026#34;Menjalankan cara 2\u0026#34; if (( umur \u0026gt;= 5 )); then echo \u0026#34;Kamu balita!\u0026#34; fi Jika kita menjankankan contoh diatas maka keluarannya adalah seperti berikut\n[student@debug-bash bash]$ bash balita.sh Kamu balita! Panduan  Penggunaan IF, ELIF, \u0026amp; ELSE  #!/bin/bash echo -n \u0026#34;Masukkan umur kamu \u0026#34; read umur # Cara 1 echo \u0026#34;Menjalankan cara 1\u0026#34; if [[ umur -eq 0 ]]; then echo \u0026#34;kamu baru lahir!\u0026#34; elif [[ umur -ge 20 ]]; then echo \u0026#34;kamu sudah dewasa!\u0026#34; else echo \u0026#34;aku tidak mengerti\u0026#34; fi # Cara 2 echo \u0026#34;Menjalankan cara 2\u0026#34; if (( umur == 0 )); then echo \u0026#34;kamu baru lahir!\u0026#34; elif (( umur \u0026gt;= 20 )); then echo \u0026#34;kamu sudah dewasa!\u0026#34; else echo \u0026#34;aku tidak mengerti\u0026#34; fi Catatan Khusus numerik Syntax  [[ a \u0026lt;operator\u0026gt; b ]]  Contoh  [[ a -eq b ]]  Operator  -eq = sama dengan -ne = tidak sama dengan -lt = kurang dari -le = kurang dari atau sama dengan -gt = lebih dari -ge = lebih dari atau sama dengan   Tips\nAgar mudah mengingat berikut caranya\n eq = equal ne = not equal lt = less than le = less equal gt = greater than ge = greater equal   Bisa numerik dan string Syntax  (( a \u0026lt;operator\u0026gt; b ))  Contoh  (( a == b ))  Operator  == = sama dengan != = tidak sama dengan \u0026lt; = kurang dari \u0026lt;= = kurang dari atau sama dengan \u0026gt; = lebih dari \u0026gt;= = lebih dari atau sama dengan  Referensi  GNU Bash Manual - Bash Conditional Expressions GNU Bash Manual - Shell Aritmetic  ","permalink":"https://blog.ajiarya.id/posts/bash/cara-melakukan-percabangan-pada-bash-bagian-1/","summary":"Pendahuluan Jika kita ingin melakukan pengecekan terhadap suatu variabel maka kita membutuhkan yang namanya percabangan sebagai contoh, jika (if) variabel umur kurang dari 5 maka sama dengan balita, untuk melakukan hal tersebut berikut contoh singkatnya\n balita.sh  #!/bin/bash  export umur=4 # Cara 1 echo \u0026#34;Menjalankan cara 1\u0026#34; if [[ umur -lt 5 ]]; then echo \u0026#34;Kamu balita!\u0026#34; fi # Cara 2 echo \u0026#34;Menjalankan cara 2\u0026#34; if (( umur \u0026gt;= 5 )); then echo \u0026#34;Kamu balita!","title":"Cara Melakukan Percabangan Dasar Bash - Bagian 1 [Operator Aritmatika]"},{"content":"Pendahuluan Ketika kita ingin mengakses sebuah layanan pada remote host yang hanya listen pada address 127.0.0.1 kita tidak bisa menggunakan fitur Dynamic Port Forwarding sebagai alternatif kita bisa menggunakan fitur Local Port Forwarding\nPanduan ssh -L [local_address_bind]:[local_port_bind]:[remote_address_bind]:[remote_port_bind] \u0026lt;remote_host\u0026gt; Contoh serverku menjalankan web server yang hanya listen pada address 127.0.0.1:80 lalu saya ingin mencoba mengakses web server tersebut dari laptopku pada address 192.168.10.10:8080\n Jalankan web server menggunakan python pada serverku  # Perintah python [root@serverku ~]# python3 -m http.server --bind 127.0.0.1 80 # Periksa port  [root@serverku ~]# ss -plunt  Netid State Recv-Q Send-Q Local Address:Port Peer Address:Port tcp LISTEN 0 5 127.0.0.1:80 0.0.0.0:* users:((\u0026#34;python3\u0026#34;,pid=1999160,fd=3)) # curl port [root@serverku ~]# curl 127.0.0.1:80 \u0026lt;h1\u0026gt;Hello from serverku\u0026lt;/h1\u0026gt; Lakukan SSH dari laptopku ke serverku  laptopku :: ~ » ssh -L 192.168.10.10:8080:127.0.0.1:80 serverku Periksa port yang listen pada laptopku  laptopku :: ~ » ss -plunt Netid State Recv-Q Send-Q Local Address:Port Peer Address:Port Process tcp LISTEN 0 128 192.168.10.10:8080 0.0.0.0:* users:((\u0026#34;ssh\u0026#34;,pid=8675,fd=4)) Uji coba curl ke 192.168.10.10:8080  laptopku :: ~ » curl 172.21.149.107:8080 \u0026lt;h1\u0026gt;Hello from serverku\u0026lt;/h1\u0026gt; ","permalink":"https://blog.ajiarya.id/posts/linux/cara-ssh-local-forwarding-port/","summary":"Pendahuluan Ketika kita ingin mengakses sebuah layanan pada remote host yang hanya listen pada address 127.0.0.1 kita tidak bisa menggunakan fitur Dynamic Port Forwarding sebagai alternatif kita bisa menggunakan fitur Local Port Forwarding\nPanduan ssh -L [local_address_bind]:[local_port_bind]:[remote_address_bind]:[remote_port_bind] \u0026lt;remote_host\u0026gt; Contoh serverku menjalankan web server yang hanya listen pada address 127.0.0.1:80 lalu saya ingin mencoba mengakses web server tersebut dari laptopku pada address 192.168.10.10:8080\n Jalankan web server menggunakan python pada serverku  # Perintah python [root@serverku ~]# python3 -m http.","title":"Cara Local Port Forwarding SSH"},{"content":"Panduan Periksa versi yang tersedia untuk diinstall sudo dnf module list container-tools  Contoh keluaran pada Rocky Linux  [student@rocky ~]$ sudo dnf module list container-tools Last metadata expiration check: 0:23:42 ago on Tue Aug 10 15:24:06 2021. Rocky Linux 8 - AppStream Name Stream Profiles Summary container-tools rhel8 [d] common [d] Most recent (rolling) versions of podman, buildah, skopeo, runc, conmon, runc, conmon, CRIU, Udica, etc as well as dependencies such as container-selinux built and tested together, and updated as frequently as every 12 weeks. container-tools 1.0 common [d] Stable versions of podman 1.0, buildah 1.5, skopeo 0.1, runc, conmon, CRIU, Udica, etc as well as dependencies such as container-selinux built and tested together, and supported for 24 months. container-tools 2.0 common [d] Stable versions of podman 1.6, buildah 1.11, skopeo 0.1, runc, conmon, etc as well as dependencies such as container-selinux built and tested together, and supported as documented on the Application Stream lifecycle page. container-tools 3.0 common [d] Stable versions of podman 3.0, buildah 1.19, skopeo 1.2, runc, conmon, etc as well as dependencies such as container-selinux built and tested together, and supported as documented on the Application Stream lifecycle page. Install container-tools sudo dnf module install container-tools:\u0026lt;stream\u0026gt;/\u0026lt;profile\u0026gt;  Contoh install versi 3.0 dengan profil common  sudo dnf module install container-tools:3.0/common ","permalink":"https://blog.ajiarya.id/posts/podman/cara-install-container-tools/","summary":"Panduan Periksa versi yang tersedia untuk diinstall sudo dnf module list container-tools  Contoh keluaran pada Rocky Linux  [student@rocky ~]$ sudo dnf module list container-tools Last metadata expiration check: 0:23:42 ago on Tue Aug 10 15:24:06 2021. Rocky Linux 8 - AppStream Name Stream Profiles Summary container-tools rhel8 [d] common [d] Most recent (rolling) versions of podman, buildah, skopeo, runc, conmon, runc, conmon, CRIU, Udica, etc as well as dependencies such as container-selinux built and tested together, and updated as frequently as every 12 weeks.","title":"Cara Install Podman, Skopeo, dan Buildah Pada Linux (CentOS/Rocky)"},{"content":"Pendahuluan Cara ini digunakan agar kita tidak melakukan hal yang membosankan seperti kejadian berikut\n Conor ingin mengirimkan file dari host1 ke host2 dan hal yang dilakukannya adalah mengirimkan file dari host1 ke localhost terlebih dahulu dan lalu mengirimkan file dari localhost ke host2\n  Conor menyalin file file100Giga dari host1 ke localhost (Misal 15 menit)  scp host1:file100Giga file100Giga Conor menyalin file file100Giga dari localhost ke host2 (Misal 15 menit)  scp file100Giga host1:file100Giga Total waktu yang dihabiskan 30 menit untuk memindahkan file dari host1 ke host2, agar lebih efisien waktu kita bisa memanfaatkan opsi -3 pada scp. Ikuti panduan berikut\nPrasyarat  localhost bisa mengakses kedua remote host  Panduan scp -3 \u0026lt;user\u0026gt;@\u0026lt;remote_host_1\u0026gt;:/file/yang/ingin/dikirimkan \u0026lt;user\u0026gt;@\u0026lt;remote_host_2\u0026gt;:/lokasi/pengiriman/file  Contoh penggunaan Mengirimkan file dari user student pada 192.168.10.10 ke user student pada 192.168.10.20  scp -3 student@192.168.10.10:/home/student/filecontoh student@192.168.10.20:/home/student/filecontoh-copy Referensi  man scp(1)  ","permalink":"https://blog.ajiarya.id/posts/linux/cara-scp-antar-dua-remote-host/","summary":"Pendahuluan Cara ini digunakan agar kita tidak melakukan hal yang membosankan seperti kejadian berikut\n Conor ingin mengirimkan file dari host1 ke host2 dan hal yang dilakukannya adalah mengirimkan file dari host1 ke localhost terlebih dahulu dan lalu mengirimkan file dari localhost ke host2\n  Conor menyalin file file100Giga dari host1 ke localhost (Misal 15 menit)  scp host1:file100Giga file100Giga Conor menyalin file file100Giga dari localhost ke host2 (Misal 15 menit)  scp file100Giga host1:file100Giga Total waktu yang dihabiskan 30 menit untuk memindahkan file dari host1 ke host2, agar lebih efisien waktu kita bisa memanfaatkan opsi -3 pada scp.","title":"Cara SCP Antar Dua Host Remote"},{"content":"Panduan Menambahkan repository dan public signing key source /etc/os-release sudo dnf install https://zfsonlinux.org/epel/zfs-release.el${VERSION_ID/./_}.noarch.rpm sudo rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-zfsonlinux Install package ZFS sudo yum-config-manager --disable zfs sudo yum-config-manager --enable zfs-kmod sudo dnf install epel-release kernel-devel zfs Verifikasi versi modinfo zfs | grep version Referensi  OpenZFS Docs  ","permalink":"https://blog.ajiarya.id/posts/zfs/cara-install-zfs-centos/","summary":"Panduan Menambahkan repository dan public signing key source /etc/os-release sudo dnf install https://zfsonlinux.org/epel/zfs-release.el${VERSION_ID/./_}.noarch.rpm sudo rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-zfsonlinux Install package ZFS sudo yum-config-manager --disable zfs sudo yum-config-manager --enable zfs-kmod sudo dnf install epel-release kernel-devel zfs Verifikasi versi modinfo zfs | grep version Referensi  OpenZFS Docs  ","title":"Cara Install ZFS Pada Linux [CentOS/Rocky]"},{"content":"Panduan Menambahkan backports repository Tambahkan repository sudo vi /etc/apt/sources.list.d/buster-backports.list  /etc/apt/sources.list.d/buster-backports.list  deb http://deb.debian.org/debian buster-backports main contrib deb-src http://deb.debian.org/debian buster-backports main contrib Tambahkan konfigurasi APT sudo vi /etc/apt/preferences.d/90_zfs  /etc/apt/preferences.d/90_zfs  Package: libnvpair1linux libuutil1linux libzfs2linux libzpool2linux spl-dkms zfs-dkms zfs-test zfsutils-linux zfsutils-linux-dev zfs-zed Pin: release n=buster-backports Pin-Priority: 990 Install package ZFS Install package sudo apt update sudo apt install dpkg-dev linux-headers-$(uname -r) linux-image-amd64 sudo apt install zfs-dkms zfsutils-linux Buat konfigurasi ZFS untuk kernel module load sudo sh -c \u0026#34;echo zfs\u0026gt; /etc/modules-load.d/zfs.conf\u0026#34; Verifikasi versi modinfo zfs | grep version Referensi  OpenZFS Docs  ","permalink":"https://blog.ajiarya.id/posts/zfs/cara-install-zfs-debian/","summary":"Panduan Menambahkan backports repository Tambahkan repository sudo vi /etc/apt/sources.list.d/buster-backports.list  /etc/apt/sources.list.d/buster-backports.list  deb http://deb.debian.org/debian buster-backports main contrib deb-src http://deb.debian.org/debian buster-backports main contrib Tambahkan konfigurasi APT sudo vi /etc/apt/preferences.d/90_zfs  /etc/apt/preferences.d/90_zfs  Package: libnvpair1linux libuutil1linux libzfs2linux libzpool2linux spl-dkms zfs-dkms zfs-test zfsutils-linux zfsutils-linux-dev zfs-zed Pin: release n=buster-backports Pin-Priority: 990 Install package ZFS Install package sudo apt update sudo apt install dpkg-dev linux-headers-$(uname -r) linux-image-amd64 sudo apt install zfs-dkms zfsutils-linux Buat konfigurasi ZFS untuk kernel module load sudo sh -c \u0026#34;echo zfs\u0026gt; /etc/modules-load.","title":"Cara Install ZFS Pada Linux [Debian]"},{"content":"Ubuntu Install package ZFS sudo apt update sudo apt install zfsutils-linux Verifikasi versi modinfo zfs | grep version Referensi  OpenZFS Docs  ","permalink":"https://blog.ajiarya.id/posts/zfs/cara-install-zfs-ubuntu/","summary":"Ubuntu Install package ZFS sudo apt update sudo apt install zfsutils-linux Verifikasi versi modinfo zfs | grep version Referensi  OpenZFS Docs  ","title":"Cara Install ZFS Pada Linux [Ubuntu]"},{"content":"Panduan Perintah mengganti password user sendiri curl -u \u0026lt;user\u0026gt; -XPUT \\  \u0026#39;http://localhost:9200/_xpack/security/user/_password?pretty\u0026#39; \\  -H \u0026#39;Content-Type: application/json\u0026#39; -d\u0026#39; { \u0026#34;password\u0026#34;: \u0026#34;\u0026lt;password\u0026gt;\u0026#34; }\u0026#39; Contoh mengganti password user sendiri curl -u elastic -XPUT \\  \u0026#39;http://localhost:9200/_xpack/security/user/_password?pretty\u0026#39; \\  -H \u0026#39;Content-Type: application/json\u0026#39; -d\u0026#39; { \u0026#34;password\u0026#34;: \u0026#34;sangatrahasia\u0026#34; }\u0026#39; Contoh output [root@rocky ~]# curl -u elastic -XPUT \\ \u0026gt; \u0026#39;http://localhost:9200/_xpack/security/user/_password?pretty\u0026#39; \\ \u0026gt; -H \u0026#39;Content-Type: application/json\u0026#39; -d\u0026#39; \u0026gt; { \u0026#34;password\u0026#34;: \u0026#34;sangatrahasia\u0026#34; }\u0026#39; Enter host password for user \u0026#39;elastic\u0026#39;: { } Perintah mengganti password user lain (Admin) curl -u \u0026lt;user_admin\u0026gt; -XPUT \\  \u0026#39;http://localhost:9200/_xpack/security/user/\u0026lt;user_lain\u0026gt;/_password?pretty\u0026#39; \\  -H \u0026#39;Content-Type: application/json\u0026#39; -d\u0026#39; { \u0026#34;password\u0026#34;: \u0026#34;\u0026lt;password\u0026gt;\u0026#34; }\u0026#39; Contoh mengganti password user lain (Admin) curl -u elastic -XPUT \\  \u0026#39;http://localhost:9200/_xpack/security/user/kibana/_password?pretty\u0026#39; \\  -H \u0026#39;Content-Type: application/json\u0026#39; -d\u0026#39; { \u0026#34;password\u0026#34;: \u0026#34;inipasswordkibana\u0026#34; }\u0026#39; Contoh output [root@rocky ~]# curl -u elastic -XPUT \\ \u0026gt; \u0026#39;http://localhost:9200/_xpack/security/user/kibana/_password?pretty\u0026#39; \\ \u0026gt; -H \u0026#39;Content-Type: application/json\u0026#39; -d\u0026#39; \u0026gt; { \u0026#34;password\u0026#34;: \u0026#34;inipasswordkibana\u0026#34; }\u0026#39; Enter host password for user \u0026#39;elastic\u0026#39;: { } Referensi\n Elasticsearch Guide  ","permalink":"https://blog.ajiarya.id/posts/elk/elasticsearch/cara-ganti-password-elasticsearch/","summary":"Panduan Perintah mengganti password user sendiri curl -u \u0026lt;user\u0026gt; -XPUT \\  \u0026#39;http://localhost:9200/_xpack/security/user/_password?pretty\u0026#39; \\  -H \u0026#39;Content-Type: application/json\u0026#39; -d\u0026#39; { \u0026#34;password\u0026#34;: \u0026#34;\u0026lt;password\u0026gt;\u0026#34; }\u0026#39; Contoh mengganti password user sendiri curl -u elastic -XPUT \\  \u0026#39;http://localhost:9200/_xpack/security/user/_password?pretty\u0026#39; \\  -H \u0026#39;Content-Type: application/json\u0026#39; -d\u0026#39; { \u0026#34;password\u0026#34;: \u0026#34;sangatrahasia\u0026#34; }\u0026#39; Contoh output [root@rocky ~]# curl -u elastic -XPUT \\ \u0026gt; \u0026#39;http://localhost:9200/_xpack/security/user/_password?pretty\u0026#39; \\ \u0026gt; -H \u0026#39;Content-Type: application/json\u0026#39; -d\u0026#39; \u0026gt; { \u0026#34;password\u0026#34;: \u0026#34;sangatrahasia\u0026#34; }\u0026#39; Enter host password for user \u0026#39;elastic\u0026#39;: { } Perintah mengganti password user lain (Admin) curl -u \u0026lt;user_admin\u0026gt; -XPUT \\  \u0026#39;http://localhost:9200/_xpack/security/user/\u0026lt;user_lain\u0026gt;/_password?","title":"Cara Mengganti Password User Elasticsearch"},{"content":"Perulangan Pada Bash Perulangan atau Looping adalah cara mudah untuk menyelesaikan pekerjaan yang sifatnya berulang-ulang, semisal ingin membuat 10 user maka kita tidak perlu menjalankan perintah useradd 10 kali melainkan kita membuat Bash Script sebagai berikut\n Buat file dengan nama buat-user.sh  #!/bin/bash for i in {1..10}; do sudo useradd user$i done  Hasil Bash Script  # Jalankan Script yang telah dibuat student@latihan-bash:~$ bash buat-user.sh # Verifikasi student@latihan-bash:~$ getent passwd | grep user user1:x:1002:1002::/home/user1:/bin/sh user2:x:1003:1003::/home/user2:/bin/sh user3:x:1004:1004::/home/user3:/bin/sh user4:x:1005:1005::/home/user4:/bin/sh user5:x:1006:1006::/home/user5:/bin/sh user6:x:1007:1007::/home/user6:/bin/sh user7:x:1008:1008::/home/user7:/bin/sh user8:x:1009:1009::/home/user8:/bin/sh user9:x:1010:1010::/home/user9:/bin/sh user10:x:1011:1011::/home/user10:/bin/sh Panduan Perulangan tak terbatas #!/bin/bash while true; do \u0026lt;perintah\u0026gt; done  Contoh 1  #!/bin/bash # set variabel angka sebagai 0 export angka=0 # Perulangan tak terhingga while true; do echo $angka sleep 1 ((angka++)) done  Hasil Contoh 1  student@latihan-bash:~$ bash contoh1.sh 0 1 2 3 4 5 \u0026lt;akan bertambah terus sampai skrip distop\u0026gt; Perulangan dengan kisaran angka #!/bin/bash for i in {1..3}; do \u0026lt;perintah\u0026gt; done  Contoh 2  #!/bin/bash for i in {1..3}; do echo $i done  Hasil Contoh 2  student@latihan-bash:~$ bash contoh2.sh 1 2 3 Perulangan dengan daftar kata #!/bin/bash for \u0026lt;nama variabel\u0026gt; in \u0026lt;nilai 1\u0026gt; \u0026lt;nilai 2\u0026gt; \u0026lt;nilai x\u0026gt;; do echo \u0026lt;nama variabel\u0026gt; done  Contoh 3  #!/bin/bash for kota in Jakarta Bandung Surabaya; do echo $kota done  Hasil Contoh 3  student@latihan-bash:~$ bash contoh3.sh Jakarta Bandung Surabaya ","permalink":"https://blog.ajiarya.id/posts/bash/cara-looping-pada-bash/","summary":"Perulangan Pada Bash Perulangan atau Looping adalah cara mudah untuk menyelesaikan pekerjaan yang sifatnya berulang-ulang, semisal ingin membuat 10 user maka kita tidak perlu menjalankan perintah useradd 10 kali melainkan kita membuat Bash Script sebagai berikut\n Buat file dengan nama buat-user.sh  #!/bin/bash for i in {1..10}; do sudo useradd user$i done  Hasil Bash Script  # Jalankan Script yang telah dibuat student@latihan-bash:~$ bash buat-user.sh # Verifikasi student@latihan-bash:~$ getent passwd | grep user user1:x:1002:1002::/home/user1:/bin/sh user2:x:1003:1003::/home/user2:/bin/sh user3:x:1004:1004::/home/user3:/bin/sh user4:x:1005:1005::/home/user4:/bin/sh user5:x:1006:1006::/home/user5:/bin/sh user6:x:1007:1007::/home/user6:/bin/sh user7:x:1008:1008::/home/user7:/bin/sh user8:x:1009:1009::/home/user8:/bin/sh user9:x:1010:1010::/home/user9:/bin/sh user10:x:1011:1011::/home/user10:/bin/sh Panduan Perulangan tak terbatas #!","title":"Cara Melakukan Perulangan Pada Bash"},{"content":"Panduan juju refresh [options] \u0026lt;application\u0026gt; Perbarui ke versi terbaru juju refresh \u0026lt;application\u0026gt;  Contoh  juju refresh prometheus Perbarui ke versi revision spesifik juju refresh --revision \u0026lt;revision number\u0026gt; \u0026lt;application\u0026gt;  Contoh  juju refresh --revision 22 prometheus Perbarui ke versi channel spesifik juju refresh --channel \u0026lt;channel\u0026gt; \u0026lt;application\u0026gt;  Contoh  juju refresh --channel latest/stable prometheus ","permalink":"https://blog.ajiarya.id/posts/juju/cara-upgrade-juju-charm/","summary":"Panduan juju refresh [options] \u0026lt;application\u0026gt; Perbarui ke versi terbaru juju refresh \u0026lt;application\u0026gt;  Contoh  juju refresh prometheus Perbarui ke versi revision spesifik juju refresh --revision \u0026lt;revision number\u0026gt; \u0026lt;application\u0026gt;  Contoh  juju refresh --revision 22 prometheus Perbarui ke versi channel spesifik juju refresh --channel \u0026lt;channel\u0026gt; \u0026lt;application\u0026gt;  Contoh  juju refresh --channel latest/stable prometheus ","title":"Cara Memperbarui Juju Charm"},{"content":"Pendahuluan Ketika kita menggunakan layanan VPS ataupun Public Cloud kita bisa memeriksa jenis virtualisasi yang diberikan oleh penyedia layanan dengan menggunakan perintah dmidecode pada sistem operasi Linux.\nPanduan sudo dmidecode -s system-product-name  Contoh pada virtualisasi KVM  student@machine:~$ sudo dmidecode -s system-product-name KVM  Contoh pada virtualisasi OpenStack  student@machine:~$ sudo dmidecode -s system-product-name OpenStack Compute ","permalink":"https://blog.ajiarya.id/posts/linux/cara-memeriksa-jenis-virtualiasasi/","summary":"Pendahuluan Ketika kita menggunakan layanan VPS ataupun Public Cloud kita bisa memeriksa jenis virtualisasi yang diberikan oleh penyedia layanan dengan menggunakan perintah dmidecode pada sistem operasi Linux.\nPanduan sudo dmidecode -s system-product-name  Contoh pada virtualisasi KVM  student@machine:~$ sudo dmidecode -s system-product-name KVM  Contoh pada virtualisasi OpenStack  student@machine:~$ sudo dmidecode -s system-product-name OpenStack Compute ","title":"Cara Mengetahui Virtualisasi Yang Digunakan oleh VM Linux"},{"content":"Prasyarat  Baremetal atau Virtualisasi yang mendukung Nested Virtualization  Panduan 1. Pasang Repository Kata Container ARCH=$(arch) BRANCH=\u0026quot;${BRANCH:-master}\u0026quot; sudo sh -c \u0026quot;echo 'deb http://download.opensuse.org/repositories/home:/katacontainers:/releases:/${ARCH}:/${BRANCH}/xUbuntu_$(lsb_release -rs)/ /' \u0026gt; /etc/apt/sources.list.d/kata-containers.list\u0026quot; curl -sL http://download.opensuse.org/repositories/home:/katacontainers:/releases:/${ARCH}:/${BRANCH}/xUbuntu_$(lsb_release -rs)/Release.key | sudo apt-key add - sudo -E apt-get update sudo -E apt-get -y install kata-runtime kata-proxy kata-shim 2. Periksa kemampuan host untuk menjalankan Kata Container kata-runtime kata-check Keluaran yang diharapkan\nstudent@kata-host:~$ kata-runtime kata-check No newer release available System is capable of running Kata Containers 3. Pasang Containerd sudo apt-get -y install containerd 4. Coba jalankan sebuah container menggunakan Kata Container sudo ctr run --runtime io.containerd.run.kata.v2 -t --rm docker.io/library/busybox:latest kata-demo sh 5. Periksa proses container htop Gambar Kata Process\nReferensi  https://github.com/kata-containers/documentation/blob/master/how-to/containerd-kata.md  ","permalink":"https://blog.ajiarya.id/posts/kata/install-kata/","summary":"Prasyarat  Baremetal atau Virtualisasi yang mendukung Nested Virtualization  Panduan 1. Pasang Repository Kata Container ARCH=$(arch) BRANCH=\u0026quot;${BRANCH:-master}\u0026quot; sudo sh -c \u0026quot;echo 'deb http://download.opensuse.org/repositories/home:/katacontainers:/releases:/${ARCH}:/${BRANCH}/xUbuntu_$(lsb_release -rs)/ /' \u0026gt; /etc/apt/sources.list.d/kata-containers.list\u0026quot; curl -sL http://download.opensuse.org/repositories/home:/katacontainers:/releases:/${ARCH}:/${BRANCH}/xUbuntu_$(lsb_release -rs)/Release.key | sudo apt-key add - sudo -E apt-get update sudo -E apt-get -y install kata-runtime kata-proxy kata-shim 2. Periksa kemampuan host untuk menjalankan Kata Container kata-runtime kata-check Keluaran yang diharapkan\nstudent@kata-host:~$ kata-runtime kata-check No newer release available System is capable of running Kata Containers 3.","title":"Memasang Kata Container dengan Containerd Pada Ubuntu 20.04"}]