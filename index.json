[{"content":"Prasyarat  Klaster Ceph  Panduan   Install package ceph-mgr-dashboard pada semua host ceph-mgr\n Debian/Ubuntu  sudo apt install -y ceph-mgr-dashboard  RHEL/CentOS/Rocky 8  sudo dnf install -y ceph-mgr-dashboard  RHEL/CentOS/Rocky 7  sudo yum install -y ceph-mgr-dashboard   Aktifkan module dashboard pada ceph-mgr\n  ceph mgr module enable dashboard Buat TLS untuk ceph dashboard  ceph dashboard create-self-signed-cert Buat user  echo \u0026#34;rahasia123\u0026#34; \u0026gt; password.txt ceph dashboard ac-user-create admin -i password.txt administrator Login ceph dashboard   URL: https://\u0026lt;alamat_ceph-mgr\u0026gt;:8443  ","permalink":"https://blog.ajiarya.id/posts/ceph/cara-deploy-ceph-dashboard-pada-deployment-manual/","summary":"Prasyarat  Klaster Ceph  Panduan   Install package ceph-mgr-dashboard pada semua host ceph-mgr\n Debian/Ubuntu  sudo apt install -y ceph-mgr-dashboard  RHEL/CentOS/Rocky 8  sudo dnf install -y ceph-mgr-dashboard  RHEL/CentOS/Rocky 7  sudo yum install -y ceph-mgr-dashboard   Aktifkan module dashboard pada ceph-mgr\n  ceph mgr module enable dashboard Buat TLS untuk ceph dashboard  ceph dashboard create-self-signed-cert Buat user  echo \u0026#34;rahasia123\u0026#34; \u0026gt; password.","title":"Cara Deploy Ceph Dashboard Pada Deployment Manual"},{"content":"Prasyarat  Windows 10 WSL 2 Docker Desktop WSL 2 Backend  Panduan  Unduh dan install binary file minikube  curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 sudo install minikube-linux-amd64 /usr/local/bin/minikube Jalankan minikube menggunakan driver docker  minikube start --driver=docker Unduh dan install kubectl  curl -LO \u0026#34;https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\u0026#34; sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl Verifikasi status minikube  minikube status kubectl get pods -n kube-system Referensi  Docker Desktop WSL 2 backend Minikube Docker Driver Install Kubectl  ","permalink":"https://blog.ajiarya.id/posts/kubernetes/cara-memasang-minikube-pada-wsl/","summary":"Prasyarat  Windows 10 WSL 2 Docker Desktop WSL 2 Backend  Panduan  Unduh dan install binary file minikube  curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 sudo install minikube-linux-amd64 /usr/local/bin/minikube Jalankan minikube menggunakan driver docker  minikube start --driver=docker Unduh dan install kubectl  curl -LO \u0026#34;https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl\u0026#34; sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl Verifikasi status minikube  minikube status kubectl get pods -n kube-system Referensi  Docker Desktop WSL 2 backend Minikube Docker Driver Install Kubectl  ","title":"Cara Memasang Minikube Pada WSL [Docker Driver]"},{"content":"Prasyarat  Kubernetes Cluster  Panduan  Terapkan manifest yang disediakan pada website nginx  kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.0.0/deploy/static/provider/baremetal/deploy.yaml Sunting service ingress-nginx-controller pada namespace ingress-nginx  Isikan dengan IP Node kubernetes yang akan melayani request\nkubectl -n ingress-nginx edit svc ingress-nginx-controller Tambahkan baris berikut\nspec: externalIPs: - \u0026lt;IP_NODE_1\u0026gt; - \u0026lt;IP_NODE_2\u0026gt; - \u0026lt;IP_NODE_N\u0026gt; Referensi  Deploy Nginx Controller on Baremetal Expose Nginx via ExternalIPs  ","permalink":"https://blog.ajiarya.id/posts/kubernetes/cara-memasang-ingress-controller-pada-k8s/","summary":"Prasyarat  Kubernetes Cluster  Panduan  Terapkan manifest yang disediakan pada website nginx  kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.0.0/deploy/static/provider/baremetal/deploy.yaml Sunting service ingress-nginx-controller pada namespace ingress-nginx  Isikan dengan IP Node kubernetes yang akan melayani request\nkubectl -n ingress-nginx edit svc ingress-nginx-controller Tambahkan baris berikut\nspec: externalIPs: - \u0026lt;IP_NODE_1\u0026gt; - \u0026lt;IP_NODE_2\u0026gt; - \u0026lt;IP_NODE_N\u0026gt; Referensi  Deploy Nginx Controller on Baremetal Expose Nginx via ExternalIPs  ","title":"Cara Memasang Nginx Ingress Controller Pada Kubernetes Cluster [External IP]"},{"content":"Prasyarat  OpenStack User Horizon Instance RHEL/CentOS/Rocky  Panduan   Buka console instance pada horizon\n  Masuk ke boot option dengan cara interupsi proses booting\n Reboot instance dan tekan tombol panah arah apapun di keyboard pada saat proses reboot    Saat masuk boot option pilih kernel dan tekan tombol e pada keyboard\n Cari baris dengan awalan linux /boot/vmlinuz-xxxxxxxx Tambahkan baris berikut rd.break pada baris yang sama dengan linux /boot/vmlinuz-xxxxxxxx Hapus kata berikut console=ttyS0 Lalu tekan Ctrl + x    Reset password root menggunakan perintah passwd\n Jika sudah masuk maka tampilan terminal adalah sebagai berikut  switch_root:/#  Mount ulang /sysroot dengan menggunakan perintah berikut  mount -o remount,rw /sysroot  Jadikan /sysroot sebagai root directory  chroot /sysroot  Lalu ganti password menggunakan perintah passwd  passwd  Relabel filesystem SELinux saat reboot  touch /.autorelabel   Jika sudah reboot sistem menggunakan perintah berikut (2 kali exit)\n  # Keluar dari chroot exit # Keluar untuk melanjutkan ke boot normal exit Referensi  Reset OpenStack Instance Password Reset Root Password Red Hat What is autorelabel  ","permalink":"https://blog.ajiarya.id/posts/openstack/cara-reset-password-root-instance-centos/","summary":"Prasyarat  OpenStack User Horizon Instance RHEL/CentOS/Rocky  Panduan   Buka console instance pada horizon\n  Masuk ke boot option dengan cara interupsi proses booting\n Reboot instance dan tekan tombol panah arah apapun di keyboard pada saat proses reboot    Saat masuk boot option pilih kernel dan tekan tombol e pada keyboard\n Cari baris dengan awalan linux /boot/vmlinuz-xxxxxxxx Tambahkan baris berikut rd.break pada baris yang sama dengan linux /boot/vmlinuz-xxxxxxxx Hapus kata berikut console=ttyS0 Lalu tekan Ctrl + x    Reset password root menggunakan perintah passwd","title":"Cara Reset Password Root Dari OpenStack Console [RHEL/CentOS/Rocky]"},{"content":"Prasyarat  OpenStack User Horizon Instance Ubuntu  Panduan   Buka console instance pada horizon\n  Masuk ke boot option dengan cara interupsi proses booting\n Reboot instance dan tekan tombol Shift keyboard pada saat proses reboot    Saat masuk boot option pilih kernel dan tekan tombol e pada keyboard\n Cari baris dengan awalan linux /boot/vmlinuz-xxxxxxxx Temukan ro quiet dan ganti dengan rw init=/bin/bash Hapus kata berikut console=ttyS0 Lalu tekan Ctrl + x    Reset password root menggunakan perintah passwd\n Jika sudah masuk maka tampilan terminal adalah sebagai berikut  root@(none):/#  Ganti password  passwd   Jika sudah reboot sistem menggunakan perintah berikut\n  exec /sbin/init Referensi  Reset OpenStack Instance Password Reset Root Password Ubuntu  ","permalink":"https://blog.ajiarya.id/posts/openstack/cara-reset-password-root-instance-ubuntu/","summary":"Prasyarat  OpenStack User Horizon Instance Ubuntu  Panduan   Buka console instance pada horizon\n  Masuk ke boot option dengan cara interupsi proses booting\n Reboot instance dan tekan tombol Shift keyboard pada saat proses reboot    Saat masuk boot option pilih kernel dan tekan tombol e pada keyboard\n Cari baris dengan awalan linux /boot/vmlinuz-xxxxxxxx Temukan ro quiet dan ganti dengan rw init=/bin/bash Hapus kata berikut console=ttyS0 Lalu tekan Ctrl + x    Reset password root menggunakan perintah passwd","title":"Cara Reset Password Root Dari OpenStack Console [Ubuntu]"},{"content":"Pendahuluan Jika mengalami kerusakan pada ceph monitor kita bisa melakukan hapus dan buat monitor yang rusak tersebut dengan ceph-monitor lainnya masih tersedia bagi cluster\nPanduan  Login sebagai root  sudo -i Hentikan service monitor jika masih berjalan  systemctl stop ceph-mon@\u0026lt;monitor_name\u0026gt; Hapus direktori monitor dan buat ulang direktori  rm -rf /var/lib/ceph/mon/ceph-\u0026lt;monitor_name\u0026gt; mkdir /var/lib/ceph/mon/ceph-\u0026lt;monitor_name\u0026gt; Remove monitor from the cluster  ceph mon rm \u0026lt;monitor_name\u0026gt; Dapatkan keyring dan monmap (monitor map)  ceph auth get mon. -o /tmp/keyring ceph mon getmap -o /tmp/monmap Sunting monmap (monitor map)  monmaptool /tmp/monmap --add \u0026lt;monitor_name\u0026gt; \u0026lt;monitor_ip\u0026gt; Buat ulang monitor yang telah dihapus  ceph-mon -i \u0026lt;monitor_name\u0026gt; --cluster ceph --mkfs --monmap /tmp/monmap --keyring /tmp/keyring Ganti pemilik direktori monitor menjadi ceph  chown -R ceph:ceph /var/lib/ceph/mon/ceph-\u0026lt;monitor_name\u0026gt; Jalankan service  systemctl daemon-reload systemctl start ceph-mon@\u0026lt;monitor_name\u0026gt; Referensi  Ceph Docs - Adding/Removing Monitor  ","permalink":"https://blog.ajiarya.id/posts/ceph/cara-membuat-ulang-ceph-mon/","summary":"Pendahuluan Jika mengalami kerusakan pada ceph monitor kita bisa melakukan hapus dan buat monitor yang rusak tersebut dengan ceph-monitor lainnya masih tersedia bagi cluster\nPanduan  Login sebagai root  sudo -i Hentikan service monitor jika masih berjalan  systemctl stop ceph-mon@\u0026lt;monitor_name\u0026gt; Hapus direktori monitor dan buat ulang direktori  rm -rf /var/lib/ceph/mon/ceph-\u0026lt;monitor_name\u0026gt; mkdir /var/lib/ceph/mon/ceph-\u0026lt;monitor_name\u0026gt; Remove monitor from the cluster  ceph mon rm \u0026lt;monitor_name\u0026gt; Dapatkan keyring dan monmap (monitor map)  ceph auth get mon.","title":"Cara Membuat Ulang Ceph Monitor Yang Rusak [Manual Deployment]"},{"content":"Panduan Parameter yang bisa digunakan  -d true jika direktori ada -e true jika file ada -v true jika variabel memiliki nilai  Contoh 1: Periksa Direktori  Script  #!/bin/bash if [[ -d halo ]]; then echo \u0026#34;Direktori ada\u0026#34; else echo \u0026#34;Direktori tidak ada\u0026#34; fi Contoh 2: Periksa File  Script  #!/bin/bash if [[ -e halo.txt ]]; then echo \u0026#34;File ada\u0026#34; else echo \u0026#34;File tidak ada\u0026#34; fi Contoh 3: Periksa Variabel  Script  #!/bin/bash  export VAR1=\u0026#34;Halo Dunia\u0026#34; if [[ -v VAR1 ]]; then echo \u0026#34;Variabel ada\u0026#34; echo $VAR1 else echo \u0026#34;Variabel tidak ada\u0026#34; echo $VAR1 fi Referensi  GNU Org - Bash Manual  ","permalink":"https://blog.ajiarya.id/posts/bash/cara-melakukan-percabangan-pada-bash-bagian-2/","summary":"Panduan Parameter yang bisa digunakan  -d true jika direktori ada -e true jika file ada -v true jika variabel memiliki nilai  Contoh 1: Periksa Direktori  Script  #!/bin/bash if [[ -d halo ]]; then echo \u0026#34;Direktori ada\u0026#34; else echo \u0026#34;Direktori tidak ada\u0026#34; fi Contoh 2: Periksa File  Script  #!/bin/bash if [[ -e halo.txt ]]; then echo \u0026#34;File ada\u0026#34; else echo \u0026#34;File tidak ada\u0026#34; fi Contoh 3: Periksa Variabel  Script  #!","title":"Cara Melakukan Percabangan Dasar Bash - Bagian 2 [Periksa Direktori, File, \u0026 Variabel]"},{"content":"Prasyarat  Podman  Panduan Sebagai contoh kita akan membuat container nginx pada non-root user bernama student\n Buat direktori untuk menyimpan konten  mkdir website echo \u0026#39;\u0026lt;h1\u0026gt;Halo Dunia!\u0026lt;/h1\u0026gt;\u0026#39; \u0026gt; website/index.html Buat container nginx  podman run -d --name websiteku -p 8080:80 -v ~/website:/usr/share/nginx/html:Z nginx Verifikasi container  podman ps curl localhost:8080  Contoh output  [student@podman-host ~]$ podman ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 109ed419f29e docker.io/library/nginx:latest nginx -g daemon o... About a minute ago Up About a minute ago 0.0.0.0:8080-\u0026gt;80/tcp websiteku [student@podman-host ~]$ curl localhost:8080 \u0026lt;h1\u0026gt;Halo Dunia!\u0026lt;/h1\u0026gt; Buat direktori untuk menyimpan service systemd container  mkdir -p ~/.config/systemd/user/ Generate service systemd  cd ~/.config/systemd/user/ podman generate systemd --name websiteku --files --new Hentikan dan hapus container yang telah dibuat  podman stop websiteku podman rm websiteku Jalankan dan enable service container-websiteku  systemctl --user daemon-reload systemctl --user enable --now container-websiteku Aktifkan linger pada user student  # Jalankan sebagai user student loginctl enable-linger  Catatan!\nlinger berfungsi agar systemd service user yang telah dienable dapat berjalan saat system boot\n ","permalink":"https://blog.ajiarya.id/posts/podman/cara-membuat-container-podman-bisa-dikelola-sebagai-service/","summary":"Prasyarat  Podman  Panduan Sebagai contoh kita akan membuat container nginx pada non-root user bernama student\n Buat direktori untuk menyimpan konten  mkdir website echo \u0026#39;\u0026lt;h1\u0026gt;Halo Dunia!\u0026lt;/h1\u0026gt;\u0026#39; \u0026gt; website/index.html Buat container nginx  podman run -d --name websiteku -p 8080:80 -v ~/website:/usr/share/nginx/html:Z nginx Verifikasi container  podman ps curl localhost:8080  Contoh output  [student@podman-host ~]$ podman ps CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES 109ed419f29e docker.io/library/nginx:latest nginx -g daemon o.","title":"Cara Membuat Rootless Container Podman Bisa Dikelola Sebagai Service"},{"content":"Pendahuluan Remote Port Forwarding adalah salah satu cara agar kita bisa menyediakan service atau port yang ada pada localhost agar bisa digunakan oleh remote host.\nSebagai contoh kita akan menggunakan squid3 yang tersedia pada localhost yang kemudian akan diakses oleh remote host\nPanduan ssh -R [remote_address_bind]:[remote_port_bind]:[local_address_bind]:[local_port_bind] \u0026lt;remote_host\u0026gt; Contoh laptopku menjalankan proxy server yang tersedia pada alamat 0.0.0.0:3128 lalu saya ingin mencoba mengakses proxy server tersebut dari home-lab pada alamat 127.0.0.1:8080\n Proxy Server Port  laptopku :: ~ » ss -plunt Netid State Recv-Q Send-Q Local Address:Port Peer Address:Port Process tcp LISTEN 0 4096 *:3128 *:* Jalankan perintah ssh remote forward  ssh -R 8080:localhost:3128 student@home-lab Verifikasi port  Pastikan ada port 8080 yang listen dengan proses sshd\nstudent@home-lab:~$ sudo ss -plunt Netid State Recv-Q Send-Q Local Address:Port Peer Address:Port Process tcp LISTEN 0 128 127.0.0.1:8080 0.0.0.0:* users:((\u0026#34;sshd\u0026#34;,pid=1740,fd=11)) tcp LISTEN 0 128 [::1]:8080 [::]:* users:((\u0026#34;sshd\u0026#34;,pid=1740,fd=10)) Coba gunakan proxy  export http_proxy=localhost:8080 export https_proxy=localhost:8080 curl -v google.com ","permalink":"https://blog.ajiarya.id/posts/linux/cara-ssh-remote-forwarding-port/","summary":"Pendahuluan Remote Port Forwarding adalah salah satu cara agar kita bisa menyediakan service atau port yang ada pada localhost agar bisa digunakan oleh remote host.\nSebagai contoh kita akan menggunakan squid3 yang tersedia pada localhost yang kemudian akan diakses oleh remote host\nPanduan ssh -R [remote_address_bind]:[remote_port_bind]:[local_address_bind]:[local_port_bind] \u0026lt;remote_host\u0026gt; Contoh laptopku menjalankan proxy server yang tersedia pada alamat 0.0.0.0:3128 lalu saya ingin mencoba mengakses proxy server tersebut dari home-lab pada alamat 127.0.0.1:8080","title":"Cara Remote Port Forwarding SSH"},{"content":"Prasyarat  Minimal 3 Nodes dengan 3 disk tambahan  Panduan  Login sebagai root  sudo -i Tambahkan host pada file /etc/hosts  vim /etc/hosts  /etc/hosts  127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4 ::1 localhost localhost.localdomain localhost6 localhost6.localdomain6 192.168.10.201 rocky-ceph-node01 192.168.10.202 rocky-ceph-node02 192.168.10.203 rocky-ceph-node03 Update dan Upgrade package  dnf update; dnf upgrade Install python3, lvm2, dan podman  dnf install -y python3 lvm2 podman Unduh cephadm pada node pertama  curl --silent --remote-name --location https://github.com/ceph/ceph/raw/pacific/src/cephadm/cephadm chmod +x cephadm Pilih versi rilis lalu install cephadm dan ceph-common  ./cephadm add-repo --release octopus ./cephadm install # Install ceph-common (Agar bisa menjalankan: perintah ceph, rbd) dnf install -y ceph-common # Verifikasi which cephadm Bootstrap monitor pada node pertama  cephadm bootstrap --mon-ip 192.168.10.201 Tambahkan ssh key cephadm ke semua node  # Pada node pertama cat /etc/ceph/ceph.pub # Pada semua node # Salin dan tempel konten ceph.pub ke ~/.ssh/authorized_keys vim ~/.ssh/authorized_keys Tambahkan node lainnya sebagai host ceph  # List host ceph orch host ls # Perbarui alamat dan tambahkan host label pada node pertama ceph orch host set-addr rocky-ceph-node01 192.168.10.201 ceph orch host label add rocky-ceph-node01 _admin # Tambahkan label _admin pada node lainnya ceph orch host add rocky-ceph-node02 192.168.10.202 _admin ceph orch host add rocky-ceph-node03 192.168.10.203 _admin # Tambahkan label osd-node pada semua node ceph orch host label add rocky-ceph-node01 osd-node ceph orch host label add rocky-ceph-node02 osd-node ceph orch host label add rocky-ceph-node03 osd-node # Verifikasi host ceph orch host ls  Catatan!\nlabel _admin akan membuat host bisa menjalankan cephadm shell\n Tambahkan ceph-mon \u0026amp; ceph-mgr ke node lainnya  ceph orch apply mon --placement=\u0026#34;rocky-ceph-node01,rocky-ceph-node02,rocky-ceph-node03\u0026#34; ceph orch apply mgr --placement=\u0026#34;rocky-ceph-node01,rocky-ceph-node02,rocky-ceph-node03\u0026#34; # Verifikasi ceph orch ps ceph -s Deploy ceph-osd pada semua node  vim deploy-osd-node.yaml  deploy-osd-node.yaml  service_type: osd service_id: demo-osd # service_id bisa diisi secara bebas placement: label: \u0026#34;osd-node\u0026#34; data_devices: paths: - /dev/vdb - /dev/vdc - /dev/vdd Terapkan yaml yang sudah dibuat\nceph orch apply -i deploy-osd-node.yaml Verifikasi status Ceph Cluster  ceph -s ceph osd tree Referensi  Dokumentasi Ceph - cephadm  ","permalink":"https://blog.ajiarya.id/posts/ceph/cara-deploy-ceph-menggunakan-cephadm/","summary":"Prasyarat  Minimal 3 Nodes dengan 3 disk tambahan  Panduan  Login sebagai root  sudo -i Tambahkan host pada file /etc/hosts  vim /etc/hosts  /etc/hosts  127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4 ::1 localhost localhost.localdomain localhost6 localhost6.localdomain6 192.168.10.201 rocky-ceph-node01 192.168.10.202 rocky-ceph-node02 192.168.10.203 rocky-ceph-node03 Update dan Upgrade package  dnf update; dnf upgrade Install python3, lvm2, dan podman  dnf install -y python3 lvm2 podman Unduh cephadm pada node pertama  curl --silent --remote-name --location https://github.","title":"Cara Deploy Ceph Cluster Menggunakan cephadm Pada Rocky Linux 8"},{"content":"Panduan  Periksa versi ceph yang sedang digunakan  ceph versions Lihat rilis ceph dan baca catatan rilis (release note)  Kunjungi Ceph Release\nLakukan upgrade  ceph orch upgrade start --ceph-version \u0026lt;versi_ceph\u0026gt; # Contoh # ceph orch upgrade start --ceph-version 16.2.5 Pantau proses upgrade  Gunakan perintah-perintah dibawah untuk melakukan pengecekan pada proses upgrade\nceph orch upgrade status ceph -W cephadm ceph orch ps ceph versions ceph versions saat proses upgrade sedang berlangsung\nVerifikasi upgrade  ceph -s ceph versions ceph versions saat proses upgrade selesai\nReferensi  Ceph Release cephadm upgrade guide  ","permalink":"https://blog.ajiarya.id/posts/ceph/cara-upgrade-cluster-cephadm/","summary":"Panduan  Periksa versi ceph yang sedang digunakan  ceph versions Lihat rilis ceph dan baca catatan rilis (release note)  Kunjungi Ceph Release\nLakukan upgrade  ceph orch upgrade start --ceph-version \u0026lt;versi_ceph\u0026gt; # Contoh # ceph orch upgrade start --ceph-version 16.2.5 Pantau proses upgrade  Gunakan perintah-perintah dibawah untuk melakukan pengecekan pada proses upgrade\nceph orch upgrade status ceph -W cephadm ceph orch ps ceph versions ceph versions saat proses upgrade sedang berlangsung","title":"Cara Upgrade Cluster Ceph Yang Menggunakan cephadm"},{"content":"Contoh SSH Config host \u0026lt;nama_pintas\u0026gt; # Nama pintasan hostname \u0026lt;alamat_tujuan\u0026gt; # Bisa IP Address ataupun domain user \u0026lt;user\u0026gt; # Nama user untuk remote port \u0026lt;port\u0026gt; # Port yang digunakan untuk SSH Panduan  Buat file ssh config  vim ~/.ssh/config  ~/.ssh/config  host home-lab hostname 1.tcp.jp.ngrok.io user ubuntu port 2222 Lakukan SSH  ssh home-lab  Catatan\nCara manual jika tanpa menggunakan ssh config: ssh ubuntu@1.tcp.jp.ngrok.io -p2222\n ","permalink":"https://blog.ajiarya.id/posts/linux/cara-konfigurasi-ssh-config/","summary":"Contoh SSH Config host \u0026lt;nama_pintas\u0026gt; # Nama pintasan hostname \u0026lt;alamat_tujuan\u0026gt; # Bisa IP Address ataupun domain user \u0026lt;user\u0026gt; # Nama user untuk remote port \u0026lt;port\u0026gt; # Port yang digunakan untuk SSH Panduan  Buat file ssh config  vim ~/.ssh/config  ~/.ssh/config  host home-lab hostname 1.tcp.jp.ngrok.io user ubuntu port 2222 Lakukan SSH  ssh home-lab  Catatan\nCara manual jika tanpa menggunakan ssh config: ssh ubuntu@1.tcp.jp.ngrok.io -p2222\n ","title":"Cara Konfigurasi SSH Config"},{"content":"Panduan  Tambahkan host pada file /etc/hosts  vim /etc/hosts  /etc/hosts  127.0.0.1 localhost 192.168.10.71 elasticsearch-node01 192.168.10.72 elasticsearch-node02 192.168.10.73 elasticsearch-node03 Unduh dan install package elasticsearch  wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.14.0-amd64.deb dpkg -i elasticsearch-7.14.0-amd64.deb Konfigurasi elasticsearch   /etc/elasticsearch/elasticsearch.yml  cluster.name: elasticsearch-demo node.name: elasticsearch-node01 path.data: /var/lib/elasticsearch path.logs: /var/log/elasticsearch network.host: 0.0.0.0 http.port: 9200 cluster.initial_master_nodes: [\u0026#34;elasticsearch-node01\u0026#34;, \u0026#34;elasticsearch-node02\u0026#34;, \u0026#34;elasticsearch-node03\u0026#34;] node.master: true node.data: true discovery.zen.ping.unicast.hosts: [\u0026#34;192.168.10.71\u0026#34; , \u0026#34;192.168.10.72\u0026#34;, \u0026#34;192.168.10.73\u0026#34;] discovery.zen.minimum_master_nodes: 2 xpack.security.enabled: true xpack.security.transport.ssl.enabled: true xpack.security.transport.ssl.verification_mode: certificate xpack.security.transport.ssl.keystore.path: /etc/elasticsearch/elastic-certificates.p12 xpack.security.transport.ssl.truststore.path: /etc/elasticsearch/elastic-certificates.p12 Buat sertifikat SSL dari salah satu node. Sebagai contoh dari elasticsearch-node01  /usr/share/elasticsearch/bin/elasticsearch-certutil ca /usr/share/elasticsearch/bin/elasticsearch-certutil cert --ca elastic-stack-ca.p12 mv /usr/share/elasticsearch/elastic-certificates.p12 /etc/elasticsearch/elastic-certificates.p12 chown elasticsearch:elasticsearch /etc/elasticsearch/elastic-certificates.p12 Distribusikan sertifikat ke semua node  scp /etc/elasticsearch/elastic-certificates.p12 \\  elasticsearch-node02:/etc/elasticsearch/elastic-certificates.p12 scp /etc/elasticsearch/elastic-certificates.p12 \\  elasticsearch-node03:/etc/elasticsearch/elastic-certificates.p12 ssh elasticsearch-node02 chown elasticsearch:elasticsearch /etc/elasticsearch/elastic-certificates.p12 ssh elasticsearch-node03 chown elasticsearch:elasticsearch /etc/elasticsearch/elastic-certificates.p12 Jalankan dan enable service elasticsearch  systemctl enable --now elasticsearch Setup password elasticsearch dari salah satu node  /usr/share/elasticsearch/bin/elasticsearch-setup-passwords auto  Catatan\nJangan lupa menyimpan password!\n Verifikasi  curl -u elastic:$ELASTIC_PASSWORD http://192.168.10.71:9200/_cluster/health?pretty ","permalink":"https://blog.ajiarya.id/posts/elk/elasticsearch/cara-membuat-cluster-elasticsearch-7/","summary":"Panduan  Tambahkan host pada file /etc/hosts  vim /etc/hosts  /etc/hosts  127.0.0.1 localhost 192.168.10.71 elasticsearch-node01 192.168.10.72 elasticsearch-node02 192.168.10.73 elasticsearch-node03 Unduh dan install package elasticsearch  wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-7.14.0-amd64.deb dpkg -i elasticsearch-7.14.0-amd64.deb Konfigurasi elasticsearch   /etc/elasticsearch/elasticsearch.yml  cluster.name: elasticsearch-demo node.name: elasticsearch-node01 path.data: /var/lib/elasticsearch path.logs: /var/log/elasticsearch network.host: 0.0.0.0 http.port: 9200 cluster.initial_master_nodes: [\u0026#34;elasticsearch-node01\u0026#34;, \u0026#34;elasticsearch-node02\u0026#34;, \u0026#34;elasticsearch-node03\u0026#34;] node.master: true node.data: true discovery.zen.ping.unicast.hosts: [\u0026#34;192.168.10.71\u0026#34; , \u0026#34;192.168.10.72\u0026#34;, \u0026#34;192.168.10.73\u0026#34;] discovery.zen.minimum_master_nodes: 2 xpack.security.enabled: true xpack.security.transport.ssl.enabled: true xpack.security.transport.ssl.verification_mode: certificate xpack.","title":"Cara Membuat Cluster Elasticsearch 7 beserta module security xpack [Debian/Ubuntu]"},{"content":"Prasyarat  Terraform python-tfgen Storage Pool (Baca disini untuk cara membuat Storage Pool)  Panduan  Buat yaml dengan kind: image lalu isikan dengan daftar image yang diinginkan   image.yaml  kind: image uri: \u0026quot;qemu:///system\u0026quot; spec: - name: debian-bullseye url: \u0026quot;https://cdimage.debian.org/images/cloud/bullseye/latest/debian-11-genericcloud-amd64.qcow2\u0026quot; pool: images - name: ubuntu-focal url: \u0026quot;https://cloud-images.ubuntu.com/focal/current/focal-server-cloudimg-amd64.img\u0026quot; pool: images Buat HCL berdasarkan yaml yang telah dibuat  ./tfgen.py -f image.yaml -o image  image/main.tf (Hasil tfgen)  terraform { required_providers { libvirt = { source = \u0026#34;dmacvicar/libvirt\u0026#34; } } } provider \u0026#34;libvirt\u0026#34; { uri = \u0026#34;qemu:///system\u0026#34; } resource \u0026#34;libvirt_volume\u0026#34; \u0026#34;debian-bullseye\u0026#34; { name = \u0026#34;debian-bullseye\u0026#34; source = \u0026#34;https://cdimage.debian.org/images/cloud/bullseye/latest/debian-11-genericcloud-amd64.qcow2\u0026#34; pool = \u0026#34;images\u0026#34; } resource \u0026#34;libvirt_volume\u0026#34; \u0026#34;ubuntu-focal\u0026#34; { name = \u0026#34;ubuntu-focal\u0026#34; source = \u0026#34;https://cloud-images.ubuntu.com/focal/current/focal-server-cloudimg-amd64.img\u0026#34; pool = \u0026#34;images\u0026#34; } Berpindah ke direktori yang dihasilkan python-tfgen  cd image/ Jalankan inisiasi terraform  terraform init Jalankan terraform untuk membuat image  terraform apply  Tips!\nGunakan terraform apply -auto-approve untuk melewati prompt persetujuan.\n Verifikasi image yang telah terbuat  virsh vol-list images Panduan Menghapus terraform destroy ","permalink":"https://blog.ajiarya.id/posts/python-tfgen/cara-membuat-image-dengan-python-tfgen/","summary":"Prasyarat  Terraform python-tfgen Storage Pool (Baca disini untuk cara membuat Storage Pool)  Panduan  Buat yaml dengan kind: image lalu isikan dengan daftar image yang diinginkan   image.yaml  kind: image uri: \u0026quot;qemu:///system\u0026quot; spec: - name: debian-bullseye url: \u0026quot;https://cdimage.debian.org/images/cloud/bullseye/latest/debian-11-genericcloud-amd64.qcow2\u0026quot; pool: images - name: ubuntu-focal url: \u0026quot;https://cloud-images.ubuntu.com/focal/current/focal-server-cloudimg-amd64.img\u0026quot; pool: images Buat HCL berdasarkan yaml yang telah dibuat  ./tfgen.py -f image.yaml -o image  image/main.tf (Hasil tfgen)  terraform { required_providers { libvirt = { source = \u0026#34;dmacvicar/libvirt\u0026#34; } } } provider \u0026#34;libvirt\u0026#34; { uri = \u0026#34;qemu:///system\u0026#34; } resource \u0026#34;libvirt_volume\u0026#34; \u0026#34;debian-bullseye\u0026#34; { name = \u0026#34;debian-bullseye\u0026#34; source = \u0026#34;https://cdimage.","title":"Cara Membuat Image Libvirt Menggunakan python-tfgen"},{"content":"Prasyarat  Terraform python-tfgen  Panduan  Buat yaml dengan kind: network lalu isikan dengan daftar network yang diinginkan   network.yaml  kind: network uri: \u0026quot;qemu:///system\u0026quot; spec: - name: home-lab-network mode: nat bridge: home-lab-bridge dhcp: true addresses4: \u0026quot;192.168.100.0/24\u0026quot; Buat HCL berdasarkan yaml yang telah dibuat  ./tfgen.py -f network.yaml -o network  image/main.tf (Hasil tfgen)  terraform { required_providers { libvirt = { source = \u0026#34;dmacvicar/libvirt\u0026#34; } } } provider \u0026#34;libvirt\u0026#34; { uri = \u0026#34;qemu:///system\u0026#34; } resource \u0026#34;libvirt_network\u0026#34; \u0026#34;home-lab-network\u0026#34; { name = \u0026#34;home-lab-network\u0026#34; mode = \u0026#34;nat\u0026#34; bridge = \u0026#34;home-lab-bridge\u0026#34; mtu = 1500 autostart = true addresses = [\u0026#34;192.168.100.0/24\u0026#34;] dhcp { enabled = true } } Berpindah ke direktori yang dihasilkan python-tfgen  cd network/ Jalankan inisiasi terraform  terraform init Jalankan terraform untuk membuat network  terraform apply  Tips!\nGunakan terraform apply -auto-approve untuk melewati prompt persetujuan.\n Verifikasi network yang telah terbuat  virsh net-list Panduan Menghapus terraform destroy ","permalink":"https://blog.ajiarya.id/posts/python-tfgen/cara-membuat-network-dengan-python-tfgen/","summary":"Prasyarat  Terraform python-tfgen  Panduan  Buat yaml dengan kind: network lalu isikan dengan daftar network yang diinginkan   network.yaml  kind: network uri: \u0026quot;qemu:///system\u0026quot; spec: - name: home-lab-network mode: nat bridge: home-lab-bridge dhcp: true addresses4: \u0026quot;192.168.100.0/24\u0026quot; Buat HCL berdasarkan yaml yang telah dibuat  ./tfgen.py -f network.yaml -o network  image/main.tf (Hasil tfgen)  terraform { required_providers { libvirt = { source = \u0026#34;dmacvicar/libvirt\u0026#34; } } } provider \u0026#34;libvirt\u0026#34; { uri = \u0026#34;qemu:///system\u0026#34; } resource \u0026#34;libvirt_network\u0026#34; \u0026#34;home-lab-network\u0026#34; { name = \u0026#34;home-lab-network\u0026#34; mode = \u0026#34;nat\u0026#34; bridge = \u0026#34;home-lab-bridge\u0026#34; mtu = 1500 autostart = true addresses = [\u0026#34;192.","title":"Cara Membuat Network Libvirt Menggunakan python-tfgen"},{"content":"Prasyarat  Terraform python-tfgen  Panduan  Buat direktori untuk penyimpanan data  mkdir -p /data/images mkdir -p /data/vms  Tips!\nMount direktori ke drive dengan kapasitas besar atau kecepatan tinggi.\n Buat yaml dengan kind: pool   pool.yaml  kind: pool uri: \u0026quot;qemu:///system\u0026quot; spec: - name: images path: /data/images - name: vms path: /data/vms Buat HCL berdasarkan yaml yang telah dibuat  ./tfgen.py -f pool.yaml -o pool  pool/main.tf (Hasil tfgen)  terraform { required_providers { libvirt = { source = \u0026#34;dmacvicar/libvirt\u0026#34; } } } provider \u0026#34;libvirt\u0026#34; { uri = \u0026#34;qemu:///system\u0026#34; } resource \u0026#34;libvirt_pool\u0026#34; \u0026#34;images\u0026#34; { name = \u0026#34;images\u0026#34; type = \u0026#34;dir\u0026#34; path = \u0026#34;/data/images\u0026#34; } resource \u0026#34;libvirt_pool\u0026#34; \u0026#34;vms\u0026#34; { name = \u0026#34;vms\u0026#34; type = \u0026#34;dir\u0026#34; path = \u0026#34;/data/vms\u0026#34; } Berpindah ke direktori yang dihasilkan python-tfgen  cd pool/ Jalankan inisiasi terraform  terraform init Jalankan terraform untuk membuat storage pool  terraform apply  Tips!\nGunakan terraform apply -auto-approve untuk melewati prompt persetujuan.\n Verifikasi storage pool yang telah terbuat  virsh pool-list Panduan Menghapus terraform destroy ","permalink":"https://blog.ajiarya.id/posts/python-tfgen/cara-membuat-pool-dengan-python-tfgen/","summary":"Prasyarat  Terraform python-tfgen  Panduan  Buat direktori untuk penyimpanan data  mkdir -p /data/images mkdir -p /data/vms  Tips!\nMount direktori ke drive dengan kapasitas besar atau kecepatan tinggi.\n Buat yaml dengan kind: pool   pool.yaml  kind: pool uri: \u0026quot;qemu:///system\u0026quot; spec: - name: images path: /data/images - name: vms path: /data/vms Buat HCL berdasarkan yaml yang telah dibuat  ./tfgen.py -f pool.yaml -o pool  pool/main.","title":"Cara Membuat Storage Pool Libvirt Menggunakan python-tfgen"},{"content":"Prasyarat  Terraform python-tfgen Storage Pool (Baca disini untuk cara membuat Storage Pool) Image (Baca disini untuk cara membuat Image) Network (Baca disini untuk cara membuat Network)  Panduan  Buat yaml dengan kind: vm lalu isikan dengan daftar image yang diinginkan   image.yaml  kind: vm uri: \u0026quot;qemu:///system\u0026quot; spec: - name: vm1 hostname: vm1 nested_enabled: true os: ubuntu vcpus: 2 memory: 2G console: vnc cloud_data: users: - name: root public_key: - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDBpZKhFbJ9r/gEef9KYo13VoEgBOkyMw06aOCzltT8wsjYPRMYzb2cbuiJBqJq5sXBrpaunTh5M7F9TyHQxhZnGgGVdutX7Q3RTOxWCHNMOxnrN7gQAHQ0kdqegrvUKNB7ym/2G3baz7pmxXf+I1Tw5AChJ8kIBDB9DnzVdtnMYxT0nivY1f6gSR2cgStEsuSbZDlBQ5Lt6W+sUyNkffddpZl0+QHAFM6UFTJNcuwMBqQG75/ZcwqLkQKU6pg0kZnDgmElXtJUKu141PJ0EbhkeOsh+zjYuwScotQYbN/MLN8fAhlQLFOwX/g3o6M9A49jyHVglQCxP2mI+d3Fra+ykrcQ7eTkPncwCCEmZYLjonQl3qhHHcbM7He1kOnORdVC/f/Uz4VsX+cMn5WGs1P+qyZKRAvw6egqWAkS0GPfEjdkhqLQ4WU9mC26aaaQfBqmMos1XZ/nRTuGAc6qb0SOkz5XN0g5ISNmCUpsnxO4YocmWP/sNDRPWBIzcycZE6s= student@home-lab base_image: storage_pool: images name: ubuntu-focal disks: storage_pool: vms disks: - name: vm1-vda.qcow2 size: 10G networks: - name: home-lab-network address: 192.168.100.10/24 mtu: 1500 gateway: 192.168.10.1 dns: [8.8.8.8, 8.8.4.4] Buat HCL berdasarkan yaml yang telah dibuat  ./tfgen.py -f vm.yaml -o vm Berpindah ke direktori yang dihasilkan python-tfgen  cd vm/ Jalankan inisiasi terraform  terraform init Jalankan terraform untuk membuat VM  terraform apply  Tips!\nGunakan terraform apply -auto-approve untuk melewati prompt persetujuan.\n Verifikasi VM yang telah terbuat  virsh list SSH VM  ssh root@192.168.100.10 Panduan Menghapus terraform destroy ","permalink":"https://blog.ajiarya.id/posts/python-tfgen/cara-membuat-vm-dengan-python-tfgen/","summary":"Prasyarat  Terraform python-tfgen Storage Pool (Baca disini untuk cara membuat Storage Pool) Image (Baca disini untuk cara membuat Image) Network (Baca disini untuk cara membuat Network)  Panduan  Buat yaml dengan kind: vm lalu isikan dengan daftar image yang diinginkan   image.yaml  kind: vm uri: \u0026quot;qemu:///system\u0026quot; spec: - name: vm1 hostname: vm1 nested_enabled: true os: ubuntu vcpus: 2 memory: 2G console: vnc cloud_data: users: - name: root public_key: - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDBpZKhFbJ9r/gEef9KYo13VoEgBOkyMw06aOCzltT8wsjYPRMYzb2cbuiJBqJq5sXBrpaunTh5M7F9TyHQxhZnGgGVdutX7Q3RTOxWCHNMOxnrN7gQAHQ0kdqegrvUKNB7ym/2G3baz7pmxXf+I1Tw5AChJ8kIBDB9DnzVdtnMYxT0nivY1f6gSR2cgStEsuSbZDlBQ5Lt6W+sUyNkffddpZl0+QHAFM6UFTJNcuwMBqQG75/ZcwqLkQKU6pg0kZnDgmElXtJUKu141PJ0EbhkeOsh+zjYuwScotQYbN/MLN8fAhlQLFOwX/g3o6M9A49jyHVglQCxP2mI+d3Fra+ykrcQ7eTkPncwCCEmZYLjonQl3qhHHcbM7He1kOnORdVC/f/Uz4VsX+cMn5WGs1P+qyZKRAvw6egqWAkS0GPfEjdkhqLQ4WU9mC26aaaQfBqmMos1XZ/nRTuGAc6qb0SOkz5XN0g5ISNmCUpsnxO4YocmWP/sNDRPWBIzcycZE6s= student@home-lab base_image: storage_pool: images name: ubuntu-focal disks: storage_pool: vms disks: - name: vm1-vda.","title":"Cara Membuat VM Libvirt Menggunakan python-tfgen"},{"content":"Pendahuluan Apa yang membuat kita malas untuk belajar atau mempraktikan ilmu IT? Membuat Lab! Tenang semua itu bisa dibuat tidak membosankan dan bisa dilakukan dengan cepat.\nSaya menggunakan KVM Host untuk melakukan riset ataupun belajar hal baru, sehingga intensitas saya dalam membuat VM itu bisa dibilang sangat sering dan saya rasa membuat VM adalah hal membosankan yang berulang-ulang sehingga saya membuat sebuah tools agar mempermudah dan mempercepat pembuatan VM.\nPanduan  Unduh Terraform  wget https://releases.hashicorp.com/terraform/1.0.4/terraform_1.0.4_linux_amd64.zip Install Unzip  # Debian/Ubuntu sudo apt install -y unzip # CentOS / RHEL / Rocky sudo dnf install -y unzip ## atau ## sudo yum install -y unzip Ekstrak file zip dan pindahkan binary file terraform  unzip terraform_1.0.4_linux_amd64.zip mv terraform /usr/local/bin Daftar Panduan python-tfgen Blog  Pool Image Network VM  Sumber Kode GitHub python-tfgen\n","permalink":"https://blog.ajiarya.id/posts/linux/cara-menggunakan-terraform-libvirt-provider/","summary":"Pendahuluan Apa yang membuat kita malas untuk belajar atau mempraktikan ilmu IT? Membuat Lab! Tenang semua itu bisa dibuat tidak membosankan dan bisa dilakukan dengan cepat.\nSaya menggunakan KVM Host untuk melakukan riset ataupun belajar hal baru, sehingga intensitas saya dalam membuat VM itu bisa dibilang sangat sering dan saya rasa membuat VM adalah hal membosankan yang berulang-ulang sehingga saya membuat sebuah tools agar mempermudah dan mempercepat pembuatan VM.\nPanduan  Unduh Terraform  wget https://releases.","title":"Cara Menggunakan Terraform Libvirt Provider Dengan Bantuan python-tfgen"},{"content":"Referensi Sewa Server  Hetzner Robot - Server Auction  Prasyarat  Server Sistem Operasi CentOS 8 atau Rocky 8 terinstall  Panduan  Update \u0026amp; Upgrade Package  sudo dnf update sudo dnf upgrade Install grup package untuk host virtualisasi  sudo dnf groupinstall -y \u0026#34;Virtualization Host\u0026#34; Jalankan dan enable servis libvirt  sudo systemctl enable --now libvirtd Install cockpit plugin untuk VM  sudo dnf install -y cockpit-machines Jalankan dan enable servis cockpit  sudo systemctl enable --now cockpit.socket Buka port tcp/9090 firewall  sudo firewall-cmd --permanent --zone=public --add-service=cockpit sudo firewall-cmd --reload Referensi  Cockpit Project - CentOS  Baca juga  Cara membuat Guest KVM dengan menggunakan Terraform Libvirt Provider  ","permalink":"https://blog.ajiarya.id/posts/linux/cara-menyiapkan-home-lab-centos-rocky/","summary":"Referensi Sewa Server  Hetzner Robot - Server Auction  Prasyarat  Server Sistem Operasi CentOS 8 atau Rocky 8 terinstall  Panduan  Update \u0026amp; Upgrade Package  sudo dnf update sudo dnf upgrade Install grup package untuk host virtualisasi  sudo dnf groupinstall -y \u0026#34;Virtualization Host\u0026#34; Jalankan dan enable servis libvirt  sudo systemctl enable --now libvirtd Install cockpit plugin untuk VM  sudo dnf install -y cockpit-machines Jalankan dan enable servis cockpit  sudo systemctl enable --now cockpit.","title":"Cara Menyiapkan Home Lab Linux [CentOS/Rocky 8]"},{"content":"Debian Cockpit\nUbuntu Cockpit\nReferensi Sewa Server  Hetzner Robot - Server Auction  Prasyarat  Server Sistem Operasi Debian 11 (Bullseye) atau Ubuntu 20.04 (Focal) terinstall  Panduan  Update \u0026amp; Upgrade package  sudo apt update sudo apt upgrade Install package-package untuk host virtualisasi  sudo apt install cockpit cockpit-machines qemu-system-x86 libvirt-daemon-system libvirt-clients bridge-utils Jalankan dan enable servis libvirt  sudo systemctl enable --now libvirtd Jalankan dan enable servis cockpit  sudo systemctl enable --now cockpit.socket Referensi  Cockpit Project - Debian Cockpit Project - Ubuntu  Baca juga  Cara membuat Guest KVM dengan menggunakan Terraform Libvirt Provider  ","permalink":"https://blog.ajiarya.id/posts/linux/cara-menyiapkan-home-lab-debian-ubuntu/","summary":"Debian Cockpit\nUbuntu Cockpit\nReferensi Sewa Server  Hetzner Robot - Server Auction  Prasyarat  Server Sistem Operasi Debian 11 (Bullseye) atau Ubuntu 20.04 (Focal) terinstall  Panduan  Update \u0026amp; Upgrade package  sudo apt update sudo apt upgrade Install package-package untuk host virtualisasi  sudo apt install cockpit cockpit-machines qemu-system-x86 libvirt-daemon-system libvirt-clients bridge-utils Jalankan dan enable servis libvirt  sudo systemctl enable --now libvirtd Jalankan dan enable servis cockpit  sudo systemctl enable --now cockpit.","title":"Cara Menyiapkan Home Lab Linux [Debian Bullseye/Ubuntu Focal]"},{"content":"Panduan  Gunakan kata kunci set pada bash dengan opsi -v  #!/bin/bash  # Tambahkan set -v pada script set -v Contoh  read.sh  #!/bin/bash  # Baris berikut akan membuat bash script menjadi verbose set -v echo \u0026#34;Siapa namamu?\u0026#34; read NAMA echo \u0026#34;Berapa umurmu? (Dalam Tahun)\u0026#34; read UMUR # tampilkan nama echo \u0026#34;${NAMA}\u0026#34; # tampilkan umur echho \u0026#34;${UMUR}Tahun\u0026#34; # Sapa nama echo \u0026#34;Halo, ${NAMA}!\u0026#34; Ketika menjalankan read.sh\n[student@debug-bash bash]$ bash read.sh echo \u0026#34;Siapa namamu?\u0026#34; Siapa namamu? read NAMA Dumbledore \u0026lt;- ini input echo \u0026#34;Berapa umurmu? (Dalam Tahun)\u0026#34; Berapa umurmu? (Dalam Tahun) read UMUR 150 \u0026lt;- ini input # tampilkan nama echo \u0026#34;${NAMA}\u0026#34; Dumbledore # tampilkan umur echho \u0026#34;${UMUR}Tahun\u0026#34; \u0026lt;- Ini penyebab error pada script (typo) read.sh: line 16: echho: command not found \u0026lt;- Ini pesan error ketika menjalankan script # Sapa nama echo \u0026#34;Halo, ${NAMA}!\u0026#34; Halo, Dumbledore! ","permalink":"https://blog.ajiarya.id/posts/bash/cara-debug-bash/","summary":"Panduan  Gunakan kata kunci set pada bash dengan opsi -v  #!/bin/bash  # Tambahkan set -v pada script set -v Contoh  read.sh  #!/bin/bash  # Baris berikut akan membuat bash script menjadi verbose set -v echo \u0026#34;Siapa namamu?\u0026#34; read NAMA echo \u0026#34;Berapa umurmu? (Dalam Tahun)\u0026#34; read UMUR # tampilkan nama echo \u0026#34;${NAMA}\u0026#34; # tampilkan umur echho \u0026#34;${UMUR}Tahun\u0026#34; # Sapa nama echo \u0026#34;Halo, ${NAMA}!\u0026#34; Ketika menjalankan read.sh","title":"Cara Debug Bash Script"},{"content":"Pendahuluan Jika kita ingin melakukan pengecekan terhadap suatu variabel maka kita membutuhkan yang namanya percabangan sebagai contoh, jika (if) variabel umur kurang dari 5 maka sama dengan balita, untuk melakukan hal tersebut berikut contoh singkatnya\n balita.sh  #!/bin/bash  export umur=4 # Cara 1 echo \u0026#34;Menjalankan cara 1\u0026#34; if [[ umur -lt 5 ]]; then echo \u0026#34;Kamu balita!\u0026#34; fi # Cara 2 echo \u0026#34;Menjalankan cara 2\u0026#34; if (( umur \u0026gt;= 5 )); then echo \u0026#34;Kamu balita!\u0026#34; fi Jika kita menjankankan contoh diatas maka keluarannya adalah seperti berikut\n[student@debug-bash bash]$ bash balita.sh Kamu balita! Panduan  Penggunaan IF, ELIF, \u0026amp; ELSE  #!/bin/bash echo -n \u0026#34;Masukkan umur kamu \u0026#34; read umur # Cara 1 echo \u0026#34;Menjalankan cara 1\u0026#34; if [[ umur -eq 0 ]]; then echo \u0026#34;kamu baru lahir!\u0026#34; elif [[ umur -ge 20 ]]; then echo \u0026#34;kamu sudah dewasa!\u0026#34; else echo \u0026#34;aku tidak mengerti\u0026#34; fi # Cara 2 echo \u0026#34;Menjalankan cara 2\u0026#34; if (( umur == 0 )); then echo \u0026#34;kamu baru lahir!\u0026#34; elif (( umur \u0026gt;= 20 )); then echo \u0026#34;kamu sudah dewasa!\u0026#34; else echo \u0026#34;aku tidak mengerti\u0026#34; fi Catatan Khusus numerik Syntax  [[ a \u0026lt;operator\u0026gt; b ]]  Contoh  [[ a -eq b ]]  Operator  -eq = sama dengan -ne = tidak sama dengan -lt = kurang dari -le = kurang dari atau sama dengan -gt = lebih dari -ge = lebih dari atau sama dengan   Tips\nAgar mudah mengingat berikut caranya\n eq = equal ne = not equal lt = less than le = less equal gt = greater than ge = greater equal   Bisa numerik dan string Syntax  (( a \u0026lt;operator\u0026gt; b ))  Contoh  (( a == b ))  Operator  == = sama dengan != = tidak sama dengan \u0026lt; = kurang dari \u0026lt;= = kurang dari atau sama dengan \u0026gt; = lebih dari \u0026gt;= = lebih dari atau sama dengan  Referensi  GNU Bash Manual - Bash Conditional Expressions GNU Bash Manual - Shell Aritmetic  ","permalink":"https://blog.ajiarya.id/posts/bash/cara-melakukan-percabangan-pada-bash-bagian-1/","summary":"Pendahuluan Jika kita ingin melakukan pengecekan terhadap suatu variabel maka kita membutuhkan yang namanya percabangan sebagai contoh, jika (if) variabel umur kurang dari 5 maka sama dengan balita, untuk melakukan hal tersebut berikut contoh singkatnya\n balita.sh  #!/bin/bash  export umur=4 # Cara 1 echo \u0026#34;Menjalankan cara 1\u0026#34; if [[ umur -lt 5 ]]; then echo \u0026#34;Kamu balita!\u0026#34; fi # Cara 2 echo \u0026#34;Menjalankan cara 2\u0026#34; if (( umur \u0026gt;= 5 )); then echo \u0026#34;Kamu balita!","title":"Cara Melakukan Percabangan Dasar Bash - Bagian 1 [Operator Aritmatika]"},{"content":"Pendahuluan Ketika kita ingin mengakses sebuah layanan pada remote host yang hanya listen pada address 127.0.0.1 kita tidak bisa menggunakan fitur Dynamic Port Forwarding sebagai alternatif kita bisa menggunakan fitur Local Port Forwarding\nPanduan ssh -L [local_address_bind]:[local_port_bind]:[remote_address_bind]:[remote_port_bind] \u0026lt;remote_host\u0026gt; Contoh serverku menjalankan web server yang hanya listen pada address 127.0.0.1:80 lalu saya ingin mencoba mengakses web server tersebut dari laptopku pada address 192.168.10.10:8080\n Jalankan web server menggunakan python pada serverku  # Perintah python [root@serverku ~]# python3 -m http.server --bind 127.0.0.1 80 # Periksa port  [root@serverku ~]# ss -plunt  Netid State Recv-Q Send-Q Local Address:Port Peer Address:Port tcp LISTEN 0 5 127.0.0.1:80 0.0.0.0:* users:((\u0026#34;python3\u0026#34;,pid=1999160,fd=3)) # curl port [root@serverku ~]# curl 127.0.0.1:80 \u0026lt;h1\u0026gt;Hello from serverku\u0026lt;/h1\u0026gt; Lakukan SSH dari laptopku ke serverku  laptopku :: ~ » ssh -L 192.168.10.10:8080:127.0.0.1:80 serverku Periksa port yang listen pada laptopku  laptopku :: ~ » ss -plunt Netid State Recv-Q Send-Q Local Address:Port Peer Address:Port Process tcp LISTEN 0 128 192.168.10.10:8080 0.0.0.0:* users:((\u0026#34;ssh\u0026#34;,pid=8675,fd=4)) Uji coba curl ke 192.168.10.10:8080  laptopku :: ~ » curl 172.21.149.107:8080 \u0026lt;h1\u0026gt;Hello from serverku\u0026lt;/h1\u0026gt; ","permalink":"https://blog.ajiarya.id/posts/linux/cara-ssh-local-forwarding-port/","summary":"Pendahuluan Ketika kita ingin mengakses sebuah layanan pada remote host yang hanya listen pada address 127.0.0.1 kita tidak bisa menggunakan fitur Dynamic Port Forwarding sebagai alternatif kita bisa menggunakan fitur Local Port Forwarding\nPanduan ssh -L [local_address_bind]:[local_port_bind]:[remote_address_bind]:[remote_port_bind] \u0026lt;remote_host\u0026gt; Contoh serverku menjalankan web server yang hanya listen pada address 127.0.0.1:80 lalu saya ingin mencoba mengakses web server tersebut dari laptopku pada address 192.168.10.10:8080\n Jalankan web server menggunakan python pada serverku  # Perintah python [root@serverku ~]# python3 -m http.","title":"Cara Local Port Forwarding SSH"},{"content":"Perintah Periksa versi yang tersedia untuk diinstall sudo dnf module list container-tools  Contoh keluaran pada Rocky Linux  [student@rocky ~]$ sudo dnf module list container-tools Last metadata expiration check: 0:23:42 ago on Tue Aug 10 15:24:06 2021. Rocky Linux 8 - AppStream Name Stream Profiles Summary container-tools rhel8 [d] common [d] Most recent (rolling) versions of podman, buildah, skopeo, runc, conmon, runc, conmon, CRIU, Udica, etc as well as dependencies such as container-selinux built and tested together, and updated as frequently as every 12 weeks. container-tools 1.0 common [d] Stable versions of podman 1.0, buildah 1.5, skopeo 0.1, runc, conmon, CRIU, Udica, etc as well as dependencies such as container-selinux built and tested together, and supported for 24 months. container-tools 2.0 common [d] Stable versions of podman 1.6, buildah 1.11, skopeo 0.1, runc, conmon, etc as well as dependencies such as container-selinux built and tested together, and supported as documented on the Application Stream lifecycle page. container-tools 3.0 common [d] Stable versions of podman 3.0, buildah 1.19, skopeo 1.2, runc, conmon, etc as well as dependencies such as container-selinux built and tested together, and supported as documented on the Application Stream lifecycle page. Install container-tools sudo dnf module install container-tools:\u0026lt;stream\u0026gt;/\u0026lt;profile\u0026gt;  Contoh install versi 3.0 dengan profil common  sudo dnf module install container-tools:3.0/common ","permalink":"https://blog.ajiarya.id/posts/podman/cara-install-container-tools/","summary":"Perintah Periksa versi yang tersedia untuk diinstall sudo dnf module list container-tools  Contoh keluaran pada Rocky Linux  [student@rocky ~]$ sudo dnf module list container-tools Last metadata expiration check: 0:23:42 ago on Tue Aug 10 15:24:06 2021. Rocky Linux 8 - AppStream Name Stream Profiles Summary container-tools rhel8 [d] common [d] Most recent (rolling) versions of podman, buildah, skopeo, runc, conmon, runc, conmon, CRIU, Udica, etc as well as dependencies such as container-selinux built and tested together, and updated as frequently as every 12 weeks.","title":"Cara Install Podman, Skopeo, dan Buildah Pada Linux (CentOS/Rocky)"},{"content":"Pendahuluan Cara ini digunakan agar kita tidak melakukan hal yang membosankan seperti kejadian berikut\n Conor ingin mengirimkan file dari host1 ke host2 dan hal yang dilakukannya adalah mengirimkan file dari host1 ke localhost terlebih dahulu dan lalu mengirimkan file dari localhost ke host2\n  Conor menyalin file file100Giga dari host1 ke localhost (Misal 15 menit)  scp host1:file100Giga file100Giga Conor menyalin file file100Giga dari localhost ke host2 (Misal 15 menit)  scp file100Giga host1:file100Giga Total waktu yang dihabiskan 30 menit untuk memindahkan file dari host1 ke host2, agar lebih efisien waktu kita bisa memanfaatkan opsi -3 pada scp. Ikuti panduan berikut\nPrasyarat  localhost bisa mengakses kedua remote host  Perintah scp -3 \u0026lt;user\u0026gt;@\u0026lt;remote_host_1\u0026gt;:/file/yang/ingin/dikirimkan \u0026lt;user\u0026gt;@\u0026lt;remote_host_2\u0026gt;:/lokasi/pengiriman/file  Contoh penggunaan Mengirimkan file dari user student pada 192.168.10.10 ke user student pada 192.168.10.20  scp -3 student@192.168.10.10:/home/student/filecontoh student@192.168.10.20:/home/student/filecontoh-copy Referensi  man scp(1)  ","permalink":"https://blog.ajiarya.id/posts/linux/cara-scp-antar-dua-remote-host/","summary":"Pendahuluan Cara ini digunakan agar kita tidak melakukan hal yang membosankan seperti kejadian berikut\n Conor ingin mengirimkan file dari host1 ke host2 dan hal yang dilakukannya adalah mengirimkan file dari host1 ke localhost terlebih dahulu dan lalu mengirimkan file dari localhost ke host2\n  Conor menyalin file file100Giga dari host1 ke localhost (Misal 15 menit)  scp host1:file100Giga file100Giga Conor menyalin file file100Giga dari localhost ke host2 (Misal 15 menit)  scp file100Giga host1:file100Giga Total waktu yang dihabiskan 30 menit untuk memindahkan file dari host1 ke host2, agar lebih efisien waktu kita bisa memanfaatkan opsi -3 pada scp.","title":"Cara SCP Antar Dua Host Remote"},{"content":"Panduan Menambahkan repository dan public signing key source /etc/os-release sudo dnf install https://zfsonlinux.org/epel/zfs-release.el${VERSION_ID/./_}.noarch.rpm sudo rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-zfsonlinux Install package ZFS sudo yum-config-manager --disable zfs sudo yum-config-manager --enable zfs-kmod sudo dnf install epel-release kernel-devel zfs Verifikasi versi modinfo zfs | grep version Referensi  OpenZFS Docs  ","permalink":"https://blog.ajiarya.id/posts/zfs/cara-install-zfs-centos/","summary":"Panduan Menambahkan repository dan public signing key source /etc/os-release sudo dnf install https://zfsonlinux.org/epel/zfs-release.el${VERSION_ID/./_}.noarch.rpm sudo rpm --import /etc/pki/rpm-gpg/RPM-GPG-KEY-zfsonlinux Install package ZFS sudo yum-config-manager --disable zfs sudo yum-config-manager --enable zfs-kmod sudo dnf install epel-release kernel-devel zfs Verifikasi versi modinfo zfs | grep version Referensi  OpenZFS Docs  ","title":"Cara Install ZFS Pada Linux [CentOS/Rocky]"},{"content":"Panduan Menambahkan backports repository Tambahkan repository sudo vi /etc/apt/sources.list.d/buster-backports.list  /etc/apt/sources.list.d/buster-backports.list  deb http://deb.debian.org/debian buster-backports main contrib deb-src http://deb.debian.org/debian buster-backports main contrib Tambahkan konfigurasi APT sudo vi /etc/apt/preferences.d/90_zfs  /etc/apt/preferences.d/90_zfs  Package: libnvpair1linux libuutil1linux libzfs2linux libzpool2linux spl-dkms zfs-dkms zfs-test zfsutils-linux zfsutils-linux-dev zfs-zed Pin: release n=buster-backports Pin-Priority: 990 Install package ZFS Install package sudo apt update sudo apt install dpkg-dev linux-headers-$(uname -r) linux-image-amd64 sudo apt install zfs-dkms zfsutils-linux Buat konfigurasi ZFS untuk kernel module load sudo sh -c \u0026#34;echo zfs\u0026gt; /etc/modules-load.d/zfs.conf\u0026#34; Verifikasi versi modinfo zfs | grep version Referensi  OpenZFS Docs  ","permalink":"https://blog.ajiarya.id/posts/zfs/cara-install-zfs-debian/","summary":"Panduan Menambahkan backports repository Tambahkan repository sudo vi /etc/apt/sources.list.d/buster-backports.list  /etc/apt/sources.list.d/buster-backports.list  deb http://deb.debian.org/debian buster-backports main contrib deb-src http://deb.debian.org/debian buster-backports main contrib Tambahkan konfigurasi APT sudo vi /etc/apt/preferences.d/90_zfs  /etc/apt/preferences.d/90_zfs  Package: libnvpair1linux libuutil1linux libzfs2linux libzpool2linux spl-dkms zfs-dkms zfs-test zfsutils-linux zfsutils-linux-dev zfs-zed Pin: release n=buster-backports Pin-Priority: 990 Install package ZFS Install package sudo apt update sudo apt install dpkg-dev linux-headers-$(uname -r) linux-image-amd64 sudo apt install zfs-dkms zfsutils-linux Buat konfigurasi ZFS untuk kernel module load sudo sh -c \u0026#34;echo zfs\u0026gt; /etc/modules-load.","title":"Cara Install ZFS Pada Linux [Debian]"},{"content":"Ubuntu Install package ZFS sudo apt update sudo apt install zfsutils-linux Verifikasi versi modinfo zfs | grep version Referensi  OpenZFS Docs  ","permalink":"https://blog.ajiarya.id/posts/zfs/cara-install-zfs-ubuntu/","summary":"Ubuntu Install package ZFS sudo apt update sudo apt install zfsutils-linux Verifikasi versi modinfo zfs | grep version Referensi  OpenZFS Docs  ","title":"Cara Install ZFS Pada Linux [Ubuntu]"},{"content":"Panduan Perintah mengganti password user sendiri curl -u \u0026lt;user\u0026gt; -XPUT \\  \u0026#39;http://localhost:9200/_xpack/security/user/_password?pretty\u0026#39; \\  -H \u0026#39;Content-Type: application/json\u0026#39; -d\u0026#39; { \u0026#34;password\u0026#34;: \u0026#34;\u0026lt;password\u0026gt;\u0026#34; }\u0026#39; Contoh mengganti password user sendiri curl -u elastic -XPUT \\  \u0026#39;http://localhost:9200/_xpack/security/user/_password?pretty\u0026#39; \\  -H \u0026#39;Content-Type: application/json\u0026#39; -d\u0026#39; { \u0026#34;password\u0026#34;: \u0026#34;sangatrahasia\u0026#34; }\u0026#39; Contoh output [root@rocky ~]# curl -u elastic -XPUT \\ \u0026gt; \u0026#39;http://localhost:9200/_xpack/security/user/_password?pretty\u0026#39; \\ \u0026gt; -H \u0026#39;Content-Type: application/json\u0026#39; -d\u0026#39; \u0026gt; { \u0026#34;password\u0026#34;: \u0026#34;sangatrahasia\u0026#34; }\u0026#39; Enter host password for user \u0026#39;elastic\u0026#39;: { } Perintah mengganti password user lain (Admin) curl -u \u0026lt;user_admin\u0026gt; -XPUT \\  \u0026#39;http://localhost:9200/_xpack/security/user/\u0026lt;user_lain\u0026gt;/_password?pretty\u0026#39; \\  -H \u0026#39;Content-Type: application/json\u0026#39; -d\u0026#39; { \u0026#34;password\u0026#34;: \u0026#34;\u0026lt;password\u0026gt;\u0026#34; }\u0026#39; Contoh mengganti password user lain (Admin) curl -u elastic -XPUT \\  \u0026#39;http://localhost:9200/_xpack/security/user/kibana/_password?pretty\u0026#39; \\  -H \u0026#39;Content-Type: application/json\u0026#39; -d\u0026#39; { \u0026#34;password\u0026#34;: \u0026#34;inipasswordkibana\u0026#34; }\u0026#39; Contoh output [root@rocky ~]# curl -u elastic -XPUT \\ \u0026gt; \u0026#39;http://localhost:9200/_xpack/security/user/kibana/_password?pretty\u0026#39; \\ \u0026gt; -H \u0026#39;Content-Type: application/json\u0026#39; -d\u0026#39; \u0026gt; { \u0026#34;password\u0026#34;: \u0026#34;inipasswordkibana\u0026#34; }\u0026#39; Enter host password for user \u0026#39;elastic\u0026#39;: { } Referensi\n Elasticsearch Guide  ","permalink":"https://blog.ajiarya.id/posts/elk/elasticsearch/cara-ganti-password-elasticsearch/","summary":"Panduan Perintah mengganti password user sendiri curl -u \u0026lt;user\u0026gt; -XPUT \\  \u0026#39;http://localhost:9200/_xpack/security/user/_password?pretty\u0026#39; \\  -H \u0026#39;Content-Type: application/json\u0026#39; -d\u0026#39; { \u0026#34;password\u0026#34;: \u0026#34;\u0026lt;password\u0026gt;\u0026#34; }\u0026#39; Contoh mengganti password user sendiri curl -u elastic -XPUT \\  \u0026#39;http://localhost:9200/_xpack/security/user/_password?pretty\u0026#39; \\  -H \u0026#39;Content-Type: application/json\u0026#39; -d\u0026#39; { \u0026#34;password\u0026#34;: \u0026#34;sangatrahasia\u0026#34; }\u0026#39; Contoh output [root@rocky ~]# curl -u elastic -XPUT \\ \u0026gt; \u0026#39;http://localhost:9200/_xpack/security/user/_password?pretty\u0026#39; \\ \u0026gt; -H \u0026#39;Content-Type: application/json\u0026#39; -d\u0026#39; \u0026gt; { \u0026#34;password\u0026#34;: \u0026#34;sangatrahasia\u0026#34; }\u0026#39; Enter host password for user \u0026#39;elastic\u0026#39;: { } Perintah mengganti password user lain (Admin) curl -u \u0026lt;user_admin\u0026gt; -XPUT \\  \u0026#39;http://localhost:9200/_xpack/security/user/\u0026lt;user_lain\u0026gt;/_password?","title":"Cara Mengganti Password User Elasticsearch"},{"content":"Perulangan Pada Bash Perulangan atau Looping adalah cara mudah untuk menyelesaikan pekerjaan yang sifatnya berulang-ulang, semisal ingin membuat 10 user maka kita tidak perlu menjalankan perintah useradd 10 kali melainkan kita membuat Bash Script sebagai berikut\n Buat file dengan nama buat-user.sh  #!/bin/bash for i in {1..10}; do sudo useradd user$i done  Hasil Bash Script  # Jalankan Script yang telah dibuat student@latihan-bash:~$ bash buat-user.sh # Verifikasi student@latihan-bash:~$ getent passwd | grep user user1:x:1002:1002::/home/user1:/bin/sh user2:x:1003:1003::/home/user2:/bin/sh user3:x:1004:1004::/home/user3:/bin/sh user4:x:1005:1005::/home/user4:/bin/sh user5:x:1006:1006::/home/user5:/bin/sh user6:x:1007:1007::/home/user6:/bin/sh user7:x:1008:1008::/home/user7:/bin/sh user8:x:1009:1009::/home/user8:/bin/sh user9:x:1010:1010::/home/user9:/bin/sh user10:x:1011:1011::/home/user10:/bin/sh Panduan Perulangan tak terbatas #!/bin/bash while true; do \u0026lt;perintah\u0026gt; done  Contoh 1  #!/bin/bash # set variabel angka sebagai 0 export angka=0 # Perulangan tak terhingga while true; do echo $angka sleep 1 ((angka++)) done  Hasil Contoh 1  student@latihan-bash:~$ bash contoh1.sh 0 1 2 3 4 5 \u0026lt;akan bertambah terus sampai skrip distop\u0026gt; Perulangan dengan kisaran angka #!/bin/bash for i in {1..3}; do \u0026lt;perintah\u0026gt; done  Contoh 2  #!/bin/bash for i in {1..3}; do echo $i done  Hasil Contoh 2  student@latihan-bash:~$ bash contoh2.sh 1 2 3 Perulangan dengan daftar kata #!/bin/bash for \u0026lt;nama variabel\u0026gt; in \u0026lt;nilai 1\u0026gt; \u0026lt;nilai 2\u0026gt; \u0026lt;nilai x\u0026gt;; do echo \u0026lt;nama variabel\u0026gt; done  Contoh 3  #!/bin/bash for kota in Jakarta Bandung Surabaya; do echo $kota done  Hasil Contoh 3  student@latihan-bash:~$ bash contoh3.sh Jakarta Bandung Surabaya ","permalink":"https://blog.ajiarya.id/posts/bash/cara-looping-pada-bash/","summary":"Perulangan Pada Bash Perulangan atau Looping adalah cara mudah untuk menyelesaikan pekerjaan yang sifatnya berulang-ulang, semisal ingin membuat 10 user maka kita tidak perlu menjalankan perintah useradd 10 kali melainkan kita membuat Bash Script sebagai berikut\n Buat file dengan nama buat-user.sh  #!/bin/bash for i in {1..10}; do sudo useradd user$i done  Hasil Bash Script  # Jalankan Script yang telah dibuat student@latihan-bash:~$ bash buat-user.sh # Verifikasi student@latihan-bash:~$ getent passwd | grep user user1:x:1002:1002::/home/user1:/bin/sh user2:x:1003:1003::/home/user2:/bin/sh user3:x:1004:1004::/home/user3:/bin/sh user4:x:1005:1005::/home/user4:/bin/sh user5:x:1006:1006::/home/user5:/bin/sh user6:x:1007:1007::/home/user6:/bin/sh user7:x:1008:1008::/home/user7:/bin/sh user8:x:1009:1009::/home/user8:/bin/sh user9:x:1010:1010::/home/user9:/bin/sh user10:x:1011:1011::/home/user10:/bin/sh Panduan Perulangan tak terbatas #!","title":"Cara Melakukan Perulangan Pada Bash"},{"content":"Perintah juju refresh [options] \u0026lt;application\u0026gt; Perbarui ke versi terbaru juju refresh \u0026lt;application\u0026gt;  Contoh  juju refresh prometheus Perbarui ke versi revision spesifik juju refresh --revision \u0026lt;revision number\u0026gt; \u0026lt;application\u0026gt;  Contoh  juju refresh --revision 22 prometheus Perbarui ke versi channel spesifik juju refresh --channel \u0026lt;channel\u0026gt; \u0026lt;application\u0026gt;  Contoh  juju refresh --channel latest/stable prometheus ","permalink":"https://blog.ajiarya.id/posts/juju/cara-upgrade-juju-charm/","summary":"Perintah juju refresh [options] \u0026lt;application\u0026gt; Perbarui ke versi terbaru juju refresh \u0026lt;application\u0026gt;  Contoh  juju refresh prometheus Perbarui ke versi revision spesifik juju refresh --revision \u0026lt;revision number\u0026gt; \u0026lt;application\u0026gt;  Contoh  juju refresh --revision 22 prometheus Perbarui ke versi channel spesifik juju refresh --channel \u0026lt;channel\u0026gt; \u0026lt;application\u0026gt;  Contoh  juju refresh --channel latest/stable prometheus ","title":"Cara Memperbarui Juju Charm"},{"content":"Pendahuluan Ketika kita menggunakan layanan VPS ataupun Public Cloud kita bisa memeriksa jenis virtualisasi yang diberikan oleh penyedia layanan dengan menggunakan perintah dmidecode pada sistem operasi Linux.\nPerintah sudo dmidecode -s system-product-name  Contoh pada virtualisasi KVM  student@machine:~$ sudo dmidecode -s system-product-name KVM  Contoh pada virtualisasi OpenStack  student@machine:~$ sudo dmidecode -s system-product-name OpenStack Compute ","permalink":"https://blog.ajiarya.id/posts/linux/cara-memeriksa-jenis-virtualiasasi/","summary":"Pendahuluan Ketika kita menggunakan layanan VPS ataupun Public Cloud kita bisa memeriksa jenis virtualisasi yang diberikan oleh penyedia layanan dengan menggunakan perintah dmidecode pada sistem operasi Linux.\nPerintah sudo dmidecode -s system-product-name  Contoh pada virtualisasi KVM  student@machine:~$ sudo dmidecode -s system-product-name KVM  Contoh pada virtualisasi OpenStack  student@machine:~$ sudo dmidecode -s system-product-name OpenStack Compute ","title":"Cara Mengetahui Virtualisasi Yang Digunakan oleh VM Linux"},{"content":"Prasyarat  Baremetal atau Virtualisasi yang mendukung Nested Virtualization  Panduan 1. Pasang Repository Kata Container ARCH=$(arch) BRANCH=\u0026quot;${BRANCH:-master}\u0026quot; sudo sh -c \u0026quot;echo 'deb http://download.opensuse.org/repositories/home:/katacontainers:/releases:/${ARCH}:/${BRANCH}/xUbuntu_$(lsb_release -rs)/ /' \u0026gt; /etc/apt/sources.list.d/kata-containers.list\u0026quot; curl -sL http://download.opensuse.org/repositories/home:/katacontainers:/releases:/${ARCH}:/${BRANCH}/xUbuntu_$(lsb_release -rs)/Release.key | sudo apt-key add - sudo -E apt-get update sudo -E apt-get -y install kata-runtime kata-proxy kata-shim 2. Periksa kemampuan host untuk menjalankan Kata Container kata-runtime kata-check Keluaran yang diharapkan\nstudent@kata-host:~$ kata-runtime kata-check No newer release available System is capable of running Kata Containers 3. Pasang Containerd sudo apt-get -y install containerd 4. Coba jalankan sebuah container menggunakan Kata Container sudo ctr run --runtime io.containerd.run.kata.v2 -t --rm docker.io/library/busybox:latest kata-demo sh 5. Periksa proses container htop Gambar Kata Process\nReferensi  https://github.com/kata-containers/documentation/blob/master/how-to/containerd-kata.md  ","permalink":"https://blog.ajiarya.id/posts/kata/install-kata/","summary":"Prasyarat  Baremetal atau Virtualisasi yang mendukung Nested Virtualization  Panduan 1. Pasang Repository Kata Container ARCH=$(arch) BRANCH=\u0026quot;${BRANCH:-master}\u0026quot; sudo sh -c \u0026quot;echo 'deb http://download.opensuse.org/repositories/home:/katacontainers:/releases:/${ARCH}:/${BRANCH}/xUbuntu_$(lsb_release -rs)/ /' \u0026gt; /etc/apt/sources.list.d/kata-containers.list\u0026quot; curl -sL http://download.opensuse.org/repositories/home:/katacontainers:/releases:/${ARCH}:/${BRANCH}/xUbuntu_$(lsb_release -rs)/Release.key | sudo apt-key add - sudo -E apt-get update sudo -E apt-get -y install kata-runtime kata-proxy kata-shim 2. Periksa kemampuan host untuk menjalankan Kata Container kata-runtime kata-check Keluaran yang diharapkan\nstudent@kata-host:~$ kata-runtime kata-check No newer release available System is capable of running Kata Containers 3.","title":"Memasang Kata Container dengan Containerd Pada Ubuntu 20.04"}]